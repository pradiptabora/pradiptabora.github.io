var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.268,1,1.694]],["body/injectables/ApiService.html",[0,1.689,1,2.257,2,1.991,3,0.132,4,0.132,5,0.11,6,2.914,7,0.647,8,1.291,9,4.736,10,1.445,11,4.736,12,4.05,13,4.468,14,4.468,15,0.709,16,2.766,17,4.049,18,1.689,19,4.05,20,3.598,21,0.985,22,0.323,23,0.564,24,1.484,25,5.442,26,5.442,27,0.985,28,5.029,29,4.05,30,5.881,31,4.05,32,4.736,33,0.633,34,2.914,35,4.049,36,1.135,37,3.408,38,1.03,39,0.021,40,0.523,41,0.857,42,2.991,43,3.408,44,6.69,45,4.606,46,1.888,47,3.477,48,4.736,49,1.041,50,4.736,51,1.285,52,4.144,53,4.736,54,3.567,55,3.408,56,5.881,57,2.988,58,1.43,59,3.408,60,3.598,61,2.991,62,4.736,63,3.567,64,3.408,65,4.736,66,3.408,67,4.05,68,2.991,69,4.05,70,4.736,71,2.406,72,2.406,73,4.736,74,4.736,75,4.736,76,0.835,77,1.099,78,1.515,79,1.515,80,3.26,81,3.408,82,2.152,83,4.05,84,2,85,4.135,86,2.766,87,4.736,88,3.408,89,0.475,90,0.35,91,1.991,92,2.914,93,3.408,94,1.991,95,1.852,96,2.589,97,1.436,98,3.408,99,2.914,100,1.852,101,1.527,102,0.132,103,0.378,104,0.929,105,2.217,106,4.736,107,3.408,108,1.742,109,4.736,110,3.408,111,4.736,112,4.736,113,4.736,114,3.408,115,3.408,116,3.408,117,3.408,118,3.408,119,3.408,120,3.408,121,0.01,122,0.013,123,0.01]],["title/components/AppComponent.html",[124,0.184,125,0.739]],["body/components/AppComponent.html",[3,0.162,4,0.162,5,0.136,15,0.709,21,1.132,22,0.398,23,0.649,33,0.779,36,0.998,38,0.735,39,0.021,40,0.482,41,0.612,72,2.131,76,1.027,77,0.973,78,1.342,79,1.342,89,0.395,90,0.431,101,2.44,102,0.162,103,0.465,121,0.012,122,0.015,123,0.012,124,0.313,125,1.33,126,1.144,127,0.872,128,3.587,129,1.144,130,2.033,131,1.91,132,1.485,133,6.046,134,3.818,135,3.749,136,2.24,137,5.445,138,1.652,139,3.749,140,4.195,141,5.445,142,5.445,143,5.445,144,1.084,145,6.046,146,2.767,147,4.195,148,4.593,149,3.749,150,0.872,151,1.485,152,1.485,153,1.144,154,1.654,155,1.144,156,1.648,157,0.825,158,1.144,159,0.872,160,1.567,161,1.648,162,1.144,163,1.648,164,0.922,165,1.144,166,0.825,167,1.144,168,0.825,169,1.144,170,0.872,171,1.144,172,0.922,173,1.144,174,0.922,175,1.144,176,0.872,177,1.144,178,0.922,179,1.144,180,0.872,181,0.825,182,0.973,183,1.144,184,0.872,185,0.825,186,1.144,187,0.922,188,1.144,189,0.872,190,0.922,191,1.084,192,0.922,193,1.144,194,1.144,195,1.144]],["title/modules/AppModule.html",[196,1.417,197,2.447]],["body/modules/AppModule.html",[3,0.123,4,0.123,5,0.103,15,0.5,16,1.86,39,0.021,72,2.294,89,0.537,90,0.327,94,2.638,102,0.123,103,0.353,121,0.009,122,0.013,123,0.009,125,1.441,131,0.823,150,0.662,157,1.23,159,1.301,160,0.78,164,1.375,166,1.23,168,1.23,172,1.375,176,1.301,178,1.375,181,1.23,184,1.301,185,1.23,187,1.375,190,1.375,192,1.375,196,1.27,197,5.176,198,1.427,199,1.618,200,3.313,201,3.065,202,3.313,203,1.618,204,2.723,205,2.723,206,2.723,207,2.723,208,2.723,209,3.953,210,3.806,211,3.657,212,2.359,213,3.953,214,2.852,215,2.011,216,1.427,217,3.184,218,2.454,219,3.184,220,3.184,221,4.515,222,3.861,223,2.419,224,2.454,225,2.419,226,2.723,227,4.515,228,3.184,229,3.43,230,2.723,231,3.43,232,3.43,233,3.43,234,3.861,235,2.419,236,3.43,237,4.515,238,3.43,239,2.723,240,2.723,241,3.861,242,3.861,243,3.184,244,2.294,245,3.861,246,3.43,247,0.7,248,3.861,249,2.419,250,2.419,251,4.515,252,3.184,253,2.723,254,3.43,255,3.184,256,2.723,257,3.184,258,1.86,259,3.184,260,2.419,261,1.731,262,2.192,263,2.723,264,4.515,265,3.184,266,3.184,267,2.723,268,4.515,269,2.419,270,1.618,271,2.011,272,1.86,273,2.723,274,3.184,275,4.515,276,2.011,277,2.723,278,2.723,279,2.723,280,3.184,281,3.184,282,4.515,283,2.192,284,3.184,285,3.184,286,2.723,287,2.723,288,3.184,289,3.184,290,3.184,291,3.184,292,3.184,293,3.184,294,3.184,295,3.184,296,3.184,297,3.184,298,2.723,299,2.723,300,3.184,301,3.184]],["title/modules/AppRoutingModule.html",[196,1.417,209,2.245]],["body/modules/AppRoutingModule.html",[3,0.193,4,0.193,5,0.162,39,0.021,89,0.506,90,0.513,102,0.193,103,0.554,121,0.014,122,0.017,123,0.014,124,0.258,125,1.039,144,1.292,176,1.264,198,2.24,203,2.539,209,3.839,218,2.717,224,3.305,226,4.274,253,4.274,302,4.998,303,3.797,304,3.562,305,4.619,306,3.839,307,3.839,308,5.199,309,3.441,310,2.717,311,2.47,312,6.079,313,4.998,314,6.079,315,4.998,316,4.619,317,2.111,318,4.998,319,4.998,320,4.998,321,4.274,322,3.797,323,4.274,324,3.797,325,4.998,326,4.998,327,4.998]],["title/guards/AuthGuard.html",[306,2.245,309,2.447]],["body/guards/AuthGuard.html",[0,2.161,1,3.164,3,0.163,4,0.163,5,0.136,7,0.575,10,1.414,15,0.467,22,0.4,23,0.502,24,1.541,27,1.135,33,0.782,36,0.901,38,0.738,39,0.021,40,0.336,41,0.614,51,0.876,58,1.38,84,2.306,89,0.481,90,0.433,91,2.46,96,3.2,100,2.968,101,2.447,102,0.211,103,0.605,104,1.488,105,2.058,121,0.012,122,0.015,123,0.012,136,2.396,144,1.089,306,3.448,307,2.66,316,5.333,317,2.559,328,3.2,329,4.602,330,3.2,331,4.602,332,5.18,333,5.18,334,4.171,335,3.448,336,3.539,337,5.18,338,3.602,339,4.212,340,4.602,341,4.212,342,4.602,343,2.66,344,1.488,345,4.669,346,4.669,347,4.148,348,3.759,349,4.048,350,3.759,351,4.148,352,4.669,353,4.669,354,5.18,355,5.18,356,2.447,357,3.602,358,3.602]],["title/guards/AuthGuard2.html",[307,2.245,309,2.447]],["body/guards/AuthGuard2.html",[0,2.161,1,3.164,3,0.163,4,0.163,5,0.136,7,0.575,10,1.414,15,0.467,22,0.4,23,0.502,24,1.541,27,1.135,33,0.782,36,0.901,38,0.738,39,0.021,40,0.336,41,0.614,51,0.876,58,1.38,84,2.306,89,0.481,90,0.433,91,2.46,96,3.2,100,2.968,101,2.447,102,0.211,103,0.605,104,1.488,105,2.058,121,0.012,122,0.015,123,0.012,136,2.396,144,1.089,306,2.66,307,3.448,316,5.333,317,2.559,328,3.2,329,4.602,330,3.2,331,4.602,332,5.18,333,5.18,334,4.171,335,2.66,336,3.539,337,5.18,338,3.602,340,4.602,342,4.602,343,2.66,344,1.488,345,4.669,346,4.669,347,4.148,348,3.759,349,4.048,350,3.759,351,4.148,352,4.669,353,4.669,354,5.18,355,5.18,356,2.447,357,4.669,358,3.602,359,4.212,360,4.212]],["title/modules/AuthModule.html",[196,1.417,361,2.447]],["body/modules/AuthModule.html",[3,0.188,4,0.188,5,0.157,39,0.021,89,0.523,90,0.5,102,0.188,103,0.539,121,0.014,122,0.017,123,0.014,150,1.011,180,1.467,189,1.467,196,1.94,198,2.18,199,2.472,200,4.089,201,2.842,202,3.072,203,2.472,214,3.777,215,3.072,216,2.18,218,3.251,224,3.251,225,3.696,233,4.543,238,4.543,241,5.114,244,3.038,247,1.069,256,5.114,258,2.842,308,4.16,361,5.041,362,4.16,363,4.16,364,4.16,365,4.458,366,4.865,367,4.543,368,3.349,369,5.114,370,3.696,371,4.16,372,4.16]],["title/modules/AuthRoutingModule.html",[196,1.417,365,2.245]],["body/modules/AuthRoutingModule.html",[3,0.201,4,0.201,5,0.168,39,0.021,89,0.512,90,0.533,102,0.24,103,0.575,121,0.015,122,0.017,123,0.015,124,0.344,144,1.341,180,1.293,189,1.293,198,2.326,203,2.637,218,2.821,224,3.381,258,3.032,303,3.943,304,3.62,305,4.725,310,2.821,311,2.51,335,3.278,365,3.928,371,4.438,372,4.438,373,5.19,374,6.219,375,2.821,376,3.943,377,4.438]],["title/injectables/CodeService.html",[0,1.268,211,2.077]],["body/injectables/CodeService.html",[0,1.87,2,2.313,3,0.153,4,0.153,5,0.211,7,0.803,8,1.429,15,0.652,22,0.376,23,0.625,24,1.552,27,1.09,33,0.735,34,3.386,35,4.308,36,1.033,38,1.03,39,0.021,40,0.469,41,0.857,42,3.311,51,1.222,52,4.111,58,1.222,78,1.267,79,1.267,80,3.61,82,3.311,89,0.485,90,0.407,94,2.313,95,2.152,97,1.59,100,2.152,101,1.775,102,0.153,103,0.439,104,1.079,105,1.976,108,1.678,121,0.011,122,0.015,123,0.011,149,2.726,211,3.063,261,3.538,262,4.481,356,2.917,378,5.566,379,3.386,380,1.355,381,3.952,382,3.983,383,5.878,384,3.983,385,5.243,386,5.243,387,3.983,388,4.754,389,3.959,390,4.484,391,2.804,392,4.484,393,3.063,394,4.484,395,3.195,396,5.243,397,3.802,398,3.959,399,4.308,400,3.063,401,4.754,402,5.243,403,3.983,404,4.484,405,1.508,406,3.61,407,3.61,408,5.243,409,3.983,410,3.008,411,2.726,412,2.501,413,3.008,414,3.008,415,3.008,416,2.726,417,2.726,418,3.008,419,3.008,420,3.959,421,2.501,422,3.983,423,2.726,424,3.008,425,3.008,426,2.726,427,2.726,428,3.008,429,3.008,430,3.959,431,3.008,432,3.959]],["title/injectables/CodefetchService.html",[0,1.268,212,1.34]],["body/injectables/CodefetchService.html",[0,0.991,2,0.989,3,0.065,4,0.065,5,0.236,7,0.78,8,1.116,10,1.01,15,0.756,18,1.733,22,0.161,23,0.331,24,1.575,27,0.578,33,0.314,35,2.818,36,1.114,38,0.972,39,0.021,40,0.493,41,0.809,42,2.585,47,1.511,51,1.345,52,3.505,58,1.284,61,3.384,71,0.86,72,1.412,76,0.415,77,1.602,78,1.873,79,1.946,80,4.253,82,2.585,84,2.524,85,1.286,86,1.624,89,0.414,90,0.174,94,0.989,95,0.92,97,0.843,99,1.448,100,0.92,101,0.759,102,0.065,103,0.188,105,2.46,108,2.004,121,0.005,122,0.008,123,0.005,136,1.733,138,1.371,144,0.438,146,2.08,149,1.166,154,0.438,159,0.352,191,0.718,212,1.048,247,0.372,273,1.448,311,1.048,342,4.539,356,2.726,380,1.687,384,2.112,387,2.112,388,3.11,390,2.377,391,2.678,392,2.377,393,2.998,394,2.377,395,2.913,405,2,409,2.112,410,1.286,411,1.166,413,1.286,414,1.286,415,2.112,416,1.166,417,1.166,422,1.286,423,1.166,424,1.286,425,1.286,426,1.166,427,1.166,428,1.286,429,1.286,431,2.687,433,1.448,434,1.914,435,2.377,436,2.377,437,2.78,438,2.78,439,2.377,440,2.377,441,3.536,442,3.536,443,3.536,444,3.536,445,3.536,446,3.024,447,3.536,448,3.024,449,3.536,450,3.536,451,1.914,452,3.112,453,3.536,454,2.78,455,2.78,456,2.78,457,4.093,458,4.093,459,3.5,460,2.78,461,3.536,462,2.112,463,2.78,464,1.448,465,3.689,466,3.536,467,2.818,468,2.585,469,2.585,470,2.78,471,2.641,472,2.687,473,2.78,474,2.112,475,2.818,476,4.253,477,2.78,478,2.377,479,2.78,480,2.472,481,1.693,482,2.78,483,4.154,484,3.5,485,1.246,486,2.78,487,3.434,488,1.693,489,1.914,490,3.5,491,4.858,492,2.78,493,3.11,494,1.756,495,4.154,496,2.818,497,3.11,498,2.78,499,1.693,500,2.78,501,2.78,502,4.154,503,2.78,504,2.78,505,2.78,506,3.024,507,1.693,508,4.113,509,2.78,510,4.858,511,4.583,512,4.093,513,1.693,514,2.78,515,2.78,516,1.693,517,2.78,518,3.5,519,1.693,520,2.112,521,2.78,522,1.693,523,1.511,524,4.071,525,3.5,526,2.78,527,1.693,528,1.914,529,2.78,530,2.78,531,2.78,532,2.78,533,1.693,534,2.112,535,2.78,536,1.693,537,2.112,538,1.412,539,3.536,540,2.112,541,2.78,542,1.693,543,2.78,544,1.693,545,2.78,546,1.693,547,2.78,548,1.693,549,2.78,550,1.693,551,1.756,552,1.585,553,1.693,554,4.746,555,1.693,556,1.693,557,2.78,558,1.693,559,1.693,560,2.78,561,1.693,562,1.448,563,0.542,564,2.434,565,1.448,566,1.448,567,1.693,568,1.693,569,1.693,570,1.693,571,1.693,572,1.693,573,1.756,574,1.448,575,2.377,576,1.448,577,1.693,578,4.583,579,4.583,580,4.583,581,1.693,582,1.693,583,2.78,584,1.693,585,1.693,586,1.693,587,2.78,588,1.693,589,1.494,590,2.641,591,4.52,592,4.52,593,2.78,594,1.693,595,1.693,596,1.693,597,1.448,598,1.693,599,2.78,600,2.066,601,1.693,602,1.448,603,2.78,604,1.693,605,1.693,606,2.112,607,1.693,608,1.693,609,3.024,610,4.093,611,1.693,612,1.166,613,1.693,614,1.448,615,1.693,616,2.78,617,1.693,618,1.693,619,1.511,620,0.92,621,1.693,622,1.693,623,1.693]],["title/components/CompetingComponent.html",[124,0.184,157,0.699]],["body/components/CompetingComponent.html",[3,0.139,4,0.139,5,0.116,7,0.67,8,1.846,15,0.666,21,1.02,24,1.297,33,0.666,36,0.592,38,0.628,39,0.021,40,0.286,41,0.523,46,1.955,57,3.053,76,0.878,89,0.471,90,0.368,97,1.487,102,0.139,103,0.397,104,0.977,108,1.923,121,0.01,122,0.014,123,0.01,124,0.289,125,0.745,126,0.977,127,0.745,129,0.977,130,2.004,131,1.877,132,0.977,136,2.347,144,0.927,150,0.745,151,1.337,152,1.337,153,0.977,154,1.553,155,0.977,156,1.524,157,1.181,158,0.977,159,0.745,160,1.472,161,1.716,162,0.977,163,1.524,164,0.788,165,0.977,166,0.705,167,0.977,168,0.705,169,0.977,170,0.745,171,0.977,172,0.788,173,0.977,174,0.788,175,0.977,176,0.745,177,0.977,178,0.788,179,0.977,180,0.745,181,0.705,182,1.297,183,0.977,184,0.745,185,0.705,186,0.977,187,0.788,188,0.977,189,0.745,190,0.788,191,0.927,192,0.788,193,0.977,194,0.977,195,0.977,247,1.077,317,2.071,344,1.337,380,1.679,400,3.51,436,4.193,468,3.795,469,3.795,563,1.147,624,1.147,625,3.066,626,3.795,627,3.376,628,3.795,629,4.904,630,4.565,631,4.277,632,3.376,633,1.888,634,1.569,635,5.589,636,1.656,637,4.904,638,3.066,639,3.267,640,6.009,641,2.693,642,3.585,643,3.038,644,4.137,645,2.337,646,2.865,647,4.904,648,4.904,649,4.904,650,2.198,651,4.904,652,1.429,653,2.723,654,1.949,655,1.949,656,1.821,657,1.821,658,1.949,659,1.514,660,1.708,661,1.351,662,1.211,663,2.264,664,2.865,665,2.723,666,1.949,667,1.949,668,1.949,669,2.264,670,1.607,671,2.094]],["title/components/ConfirmDialog.html",[124,0.184,159,0.739]],["body/components/ConfirmDialog.html",[3,0.147,4,0.147,5,0.123,7,0.52,15,0.683,21,1.062,22,0.361,27,1.062,33,0.707,36,1.017,38,0.667,39,0.021,40,0.304,41,0.555,51,1.199,57,2.596,76,1.509,89,0.37,90,0.391,102,0.147,103,0.422,121,0.011,122,0.014,123,0.011,124,0.332,125,0.792,126,1.038,127,0.792,129,1.038,130,2.016,131,1.875,132,1.393,150,0.792,151,1.393,152,1.393,153,1.038,154,1.592,155,1.038,156,1.572,157,0.749,158,1.038,159,1.281,160,1.62,161,1.842,162,1.752,163,1.572,164,0.837,165,1.038,166,0.749,167,1.038,168,0.749,169,1.038,170,0.792,171,1.038,172,0.837,173,1.038,174,0.837,175,1.038,176,0.792,177,1.038,178,0.837,179,1.038,180,0.792,181,0.749,182,0.884,183,1.038,184,0.792,185,0.749,186,1.038,187,0.837,188,1.038,189,0.792,190,0.837,191,0.984,192,0.837,193,1.038,194,1.038,195,1.038,247,0.837,344,1.393,475,4.839,494,4.058,502,4.93,624,1.219,633,1.947,634,1.635,662,2.081,671,2.225,672,3.257,673,3.518,674,5.109,675,5.109,676,3.882,677,5.766,678,6.957,679,5.109,680,5.766,681,4.789,682,2.894,683,4.681,684,3.809,685,3.882,686,3.809,687,3.891,688,3.265,689,3.891,690,3.809,691,3.809,692,2.894,693,3.257,694,3.809,695,1.935,696,2.622,697,3.809]],["title/injectables/ConnectpartService.html",[0,1.268,698,2.447]],["body/injectables/ConnectpartService.html",[0,1.966,2,2.498,3,0.165,4,0.165,5,0.138,7,0.584,8,1.503,15,0.474,22,0.406,23,0.657,24,1.613,27,1.146,33,0.794,36,1.064,38,0.749,39,0.021,40,0.341,41,0.623,51,0.889,86,3.221,89,0.442,90,0.439,100,2.324,101,1.916,102,0.165,103,0.474,104,1.166,105,1.612,121,0.012,122,0.015,123,0.012,136,2.177,144,1.105,146,2.172,182,1.279,212,2.429,260,3.248,391,2.735,405,1.585,418,3.248,434,3.795,483,5.218,484,3.656,589,2.329,590,3.221,609,3.656,619,2.324,645,3.072,661,2.3,687,3.853,698,3.795,699,3.656,700,6.446,701,4.276,702,3.1,703,5.513,704,5.513,705,4.276,706,5.513,707,5.513,708,3.221,709,4.276,710,4.276,711,5.513,712,3.248,713,3.656,714,3.656,715,4.276,716,3.656,717,4.276,718,4.276,719,4.276,720,2.944,721,4.276,722,4.276,723,2.7,724,4.276,725,4.276]],["title/components/ContestlistComponent.html",[124,0.184,164,0.781]],["body/components/ContestlistComponent.html",[3,0.123,4,0.203,5,0.103,7,0.617,8,1.429,10,0.938,15,0.713,21,0.938,22,0.302,23,0.538,24,1.398,27,0.938,33,0.591,36,1.062,38,0.79,39,0.021,40,0.48,41,0.658,46,1.799,51,0.938,58,1.09,76,1.284,77,1.047,78,1.444,79,1.444,89,0.453,90,0.327,97,0.965,102,0.123,103,0.353,104,0.867,108,1.678,121,0.009,122,0.013,123,0.009,124,0.311,125,0.661,126,0.867,127,1.253,129,0.867,130,1.979,131,1.849,132,0.867,135,2.19,136,2.259,144,0.822,148,3.428,150,0.661,151,1.23,152,1.23,153,0.867,154,1.475,155,0.867,156,1.429,157,0.625,158,0.867,159,0.661,160,1.398,161,1.429,162,0.867,163,1.429,164,1.254,165,0.867,166,0.625,167,0.867,168,0.625,169,0.867,170,0.661,171,0.867,172,0.699,173,0.867,174,0.699,175,0.867,176,0.661,177,0.867,178,0.699,179,0.867,180,0.661,181,0.625,182,0.738,183,0.867,184,0.661,185,0.625,186,0.867,187,0.699,188,0.867,189,0.661,190,0.699,191,0.822,192,0.699,193,0.867,194,0.867,195,0.867,216,2.022,244,1.616,247,0.699,344,1.23,380,1.557,405,0.915,508,3.106,538,2.293,563,1.826,589,1.344,624,1.018,626,2.009,631,2.85,632,3.106,633,1.771,634,1.444,636,1.524,641,2.804,652,1.799,654,1.729,655,1.729,656,2.664,657,2.899,658,1.729,659,1.344,660,1.516,661,1.199,662,1.074,664,2.636,708,3.333,726,2.72,727,4.512,728,4.512,729,4.512,730,4.512,731,2.85,732,2.15,733,3.858,734,5.243,735,4.512,736,3.61,737,3.61,738,3.61,739,3.928,740,2.85,741,3.106,742,4.484,743,3.063,744,3.928,745,4.512,746,4.512,747,3.102,748,3.858,749,3.428,750,2.899,751,3.181,752,3.181,753,3.106,754,3.106,755,3.181,756,4.512,757,4.308,758,4.512,759,3.858,760,2.19,761,4.512,762,2.719,763,4.512,764,3.181,765,3.181,766,3.181,767,2.417,768,3.181,769,3.181,770,2.19,771,3.181,772,2.72,773,2.19,774,2.19,775,2.19,776,3.181,777,2.19,778,2.15,779,2.85]],["title/components/ContestsComponent.html",[124,0.184,166,0.699]],["body/components/ContestsComponent.html",[3,0.119,4,0.119,5,0.1,7,0.602,8,1.687,15,0.746,18,1.836,21,1.169,22,0.292,23,0.525,24,1.436,27,0.916,33,0.818,36,1.095,38,0.539,39,0.021,40,0.493,41,0.449,46,2.241,51,0.64,58,0.916,72,2.856,76,1.079,77,1.513,78,0.985,79,0.985,89,0.448,90,0.453,97,1.705,102,0.119,103,0.341,108,1.647,121,0.009,122,0.012,123,0.009,124,0.308,125,0.64,126,0.839,127,0.64,129,0.839,130,1.972,131,1.84,132,0.839,136,1.488,144,0.795,146,2.616,150,0.64,151,1.201,152,1.201,153,0.839,154,1.453,155,0.839,156,1.403,157,0.605,158,0.839,159,0.64,160,1.457,161,1.403,162,0.839,163,1.403,164,0.676,165,0.839,166,1.105,167,0.839,168,0.605,169,0.839,170,0.64,171,0.839,172,0.676,173,0.839,174,0.676,175,0.839,176,0.64,177,0.839,178,0.676,179,0.839,180,0.64,181,0.605,182,0.714,183,0.839,184,0.64,185,0.605,186,0.839,187,0.676,188,0.839,189,0.64,190,0.676,191,0.795,192,0.676,193,0.839,194,0.839,195,0.839,247,0.676,283,3.869,344,1.201,380,1.6,405,1.71,467,3.869,523,2.395,589,1.3,619,1.673,624,0.985,627,3.869,631,2.783,633,1.739,634,1.41,636,1.488,639,3.055,641,2.519,643,3.055,644,3.034,645,2.1,646,2.574,658,1.673,662,1.898,663,1.943,665,2.338,666,3.364,667,1.673,668,1.673,669,1.943,731,2.783,733,3.768,743,3.283,753,3.034,757,4.095,762,2.678,780,2.631,781,3.768,782,2.1,783,4.806,784,3.348,785,3.768,786,3.768,787,3.348,788,5.148,789,4.406,790,4.402,791,5.148,792,3.077,793,4.406,794,4.402,795,4.406,796,4.406,797,3.768,798,3.077,799,3.348,800,3.077,801,5.148,802,2.338,803,4.406,804,3.768,805,3.077,806,3.077,807,3.077,808,3.077,809,3.077,810,2.338,811,3.077,812,2.631,813,3.077,814,3.077,815,2.631,816,3.077,817,3.077,818,3.077,819,3.077,820,3.077,821,5.148,822,3.077,823,2.631,824,5.148,825,2.631,826,3.077,827,3.077,828,3.077,829,3.077,830,3.077,831,3.077,832,3.077,833,3.077,834,1.673,835,3.077,836,1.798,837,4.406,838,2.631,839,2.631,840,2.631]],["title/components/DashboardComponent.html",[124,0.184,168,0.699]],["body/components/DashboardComponent.html",[1,2.857,3,0.138,4,0.138,5,0.115,7,0.487,10,1.348,12,4.177,15,0.664,21,1.016,22,0.463,23,0.582,24,0.827,27,1.016,33,0.662,36,0.92,38,0.624,39,0.021,40,0.389,41,0.52,51,0.741,60,2.708,76,1.196,89,0.481,90,0.366,91,2.082,97,1.69,102,0.138,103,0.395,104,0.972,121,0.01,122,0.014,123,0.01,124,0.31,125,0.741,126,0.972,127,0.741,129,0.972,130,2.003,131,1.875,132,0.972,135,2.454,136,2.191,144,0.921,150,0.741,151,1.332,152,1.332,153,0.972,154,1.549,155,0.972,156,1.519,157,0.701,158,0.972,159,0.741,160,1.468,161,1.519,162,0.972,163,1.519,164,0.783,165,0.972,166,0.701,167,0.972,168,1.178,169,0.972,170,0.741,171,0.972,172,0.783,173,0.972,174,0.783,175,0.972,176,0.741,177,0.972,178,0.783,179,0.972,180,0.741,181,0.701,182,1.133,183,0.972,184,0.741,185,0.701,186,0.972,187,0.783,188,0.972,189,0.741,190,0.783,191,0.921,192,0.783,193,0.972,194,0.972,195,0.972,270,2.831,272,3.255,276,3.085,317,2.532,336,2.853,343,2.251,344,1.332,614,3.048,624,1.141,633,1.882,634,1.563,636,1.65,645,2.656,661,1.343,662,2.025,778,2.857,834,3.029,836,2.853,841,3.048,842,4.884,843,2.189,844,5.572,845,4.884,846,4.884,847,3.564,848,3.564,849,3.048,850,3.564,851,3.048,852,3.836,853,3.564,854,3.048,855,3.048,856,3.048,857,3.048,858,4.177,859,3.564,860,3.711,861,3.564,862,2.708,863,5.126,864,3.564,865,3.048,866,3.048,867,4.884,868,4.177,869,3.363,870,3.191,871,3.564,872,2.251,873,2.082,874,3.564,875,3.048,876,3.048]],["title/modules/DashboardModule.html",[196,1.417,877,2.447]],["body/modules/DashboardModule.html",[3,0.176,4,0.176,5,0.147,39,0.021,89,0.533,90,0.467,102,0.176,103,0.504,121,0.013,122,0.016,123,0.013,150,0.945,157,0.893,166,0.893,168,1.385,170,1.443,181,0.893,184,0.945,185,0.893,196,1.812,198,2.037,199,2.309,200,3.965,201,3.668,202,2.87,203,2.309,214,3.62,215,2.87,216,2.037,218,3.116,224,3.116,225,3.453,229,4.354,231,4.354,232,4.354,234,4.901,235,4.354,236,4.354,238,4.354,240,3.886,244,2.309,245,4.901,246,4.354,247,0.999,267,3.886,269,3.453,317,1.92,367,4.354,368,3.129,369,4.901,370,3.453,843,2.037,877,4.952,878,3.886,879,3.886,880,3.886,881,3.886,882,4.383,883,4.545,884,5.732,885,6.278,886,3.886,887,3.886,888,3.886,889,5.732,890,3.453,891,3.886,892,3.886,893,3.886,894,4.545]],["title/modules/DashboardRoutingModule.html",[196,1.417,882,2.245]],["body/modules/DashboardRoutingModule.html",[3,0.189,4,0.189,5,0.158,39,0.021,89,0.524,90,0.503,102,0.189,103,0.543,121,0.014,122,0.017,123,0.014,124,0.365,144,1.265,157,1.18,166,1.18,168,1.18,170,1.248,181,1.18,182,1.136,185,1.18,198,2.194,203,2.487,218,2.661,224,3.263,303,3.719,304,3.529,305,4.561,310,2.661,311,2.618,321,4.186,323,4.186,324,3.719,375,2.661,377,4.186,843,2.194,882,3.791,886,4.186,887,4.186,888,4.186,891,4.186,892,4.186,893,4.186,895,4.896,896,4.186,897,4.896,898,4.896,899,4.896]],["title/components/EditorComponent.html",[124,0.184,170,0.739]],["body/components/EditorComponent.html",[3,0.091,4,0.091,5,0.208,7,0.6,8,1.528,14,1.784,15,0.621,18,1.894,21,0.75,22,0.223,23,0.587,24,0.837,27,0.75,33,0.436,36,1.11,38,0.632,39,0.021,40,0.465,41,0.526,46,1.438,47,1.277,51,1.252,58,0.912,61,2.277,67,3.084,72,2.23,76,1.075,77,1.398,78,1.7,79,1.977,82,1.483,89,0.406,90,0.241,102,0.091,103,0.26,104,0.64,105,2.113,108,1.576,121,0.007,122,0.01,123,0.007,124,0.275,125,0.488,126,0.64,127,0.488,129,0.64,130,1.906,131,1.766,132,0.64,138,1.094,146,1.193,150,0.488,151,0.983,152,0.983,153,0.64,154,1.272,155,0.64,156,1.197,157,0.462,158,0.64,159,0.488,160,1.206,161,1.197,162,0.64,163,1.197,164,0.516,165,0.64,166,0.462,167,0.64,168,0.462,169,0.64,170,1.024,171,0.64,172,0.516,173,0.64,174,0.516,175,0.64,176,0.488,177,0.64,178,0.516,179,0.64,180,0.488,181,0.462,182,0.545,183,0.64,184,0.488,185,0.462,186,0.64,187,0.516,188,0.64,189,0.488,190,0.516,191,0.607,192,0.516,193,0.64,194,0.64,195,0.64,211,2.876,212,1.856,247,0.516,261,3.739,262,1.617,263,2.009,344,0.983,351,1.784,356,1.616,380,0.932,381,2.277,382,2.739,391,2.769,395,1.96,397,2.876,399,2.482,400,1.372,401,2.739,403,2.739,404,3.084,406,4.587,407,3.86,423,1.617,446,3.753,448,3.753,471,1.372,480,2.08,506,2.009,511,3.084,523,2.676,552,1.616,600,1.372,606,2.739,624,0.752,632,1.617,634,1.154,636,1.218,639,2.676,643,2.676,645,1.718,646,1.372,652,2.463,660,1.119,661,0.885,702,2.23,723,3.354,731,3.109,802,1.784,810,1.784,843,2.986,900,2.009,901,3.084,902,5.566,903,3.753,904,4.389,905,3.606,906,4.389,907,4.389,908,3.39,909,4.923,910,3.606,911,5.636,912,2.009,913,4.923,914,3.606,915,3.606,916,3.606,917,2.349,918,5.312,919,3.084,920,3.606,921,3.606,922,2.739,923,2.349,924,4.923,925,3.084,926,2.349,927,3.606,928,2.482,929,2.349,930,2.349,931,2.349,932,2.349,933,3.606,934,2.349,935,4.576,936,2.349,937,2.349,938,2.739,939,2.349,940,2.349,941,2.349,942,5.606,943,4.389,944,2.349,945,2.349,946,3.606,947,3.606,948,3.606,949,3.084,950,2.349,951,2.349,952,2.349,953,2.349,954,3.606,955,3.74,956,4.923,957,4.923,958,4.794,959,2.349,960,1.372,961,2.349,962,3.606,963,2.349,964,2.349,965,2.349,966,2.349,967,2.349,968,2.349,969,2.349,970,2.349,971,2.349,972,1.617,973,2.349,974,2.009,975,2.349,976,2.349,977,4.923,978,2.349,979,2.349,980,2.349,981,2.349,982,2.349,983,2.349,984,3.606,985,2.349,986,2.349,987,2.349,988,2.349,989,2.349,990,2.349,991,2.349,992,2.349,993,2.349,994,2.349,995,2.349,996,2.349,997,2.349,998,2.349,999,2.349,1000,2.349,1001,3.606,1002,2.349,1003,2.349,1004,2.349,1005,2.009,1006,2.349,1007,2.349,1008,4.21,1009,2.349,1010,2.349,1011,2.349,1012,2.349,1013,2.349,1014,2.349,1015,2.009,1016,2.349,1017,1.784,1018,2.349,1019,2.349,1020,1.784,1021,2.482,1022,2.739,1023,2.739,1024,1.784,1025,1.784,1026,2.349]],["title/components/FilelistComponent.html",[124,0.184,172,0.781]],["body/components/FilelistComponent.html",[3,0.063,4,0.063,5,0.233,7,0.722,8,1.093,10,0.993,15,0.724,21,0.562,22,0.256,23,0.322,24,1.31,27,0.562,33,0.304,36,1.049,38,0.886,39,0.021,40,0.462,41,0.737,46,1.078,51,1.051,58,1.348,61,1.707,76,1.17,77,0.801,78,1.529,79,1.529,84,2.686,86,1.579,89,0.383,90,0.168,102,0.104,103,0.3,104,0.446,105,1.019,108,1.807,121,0.005,122,0.008,123,0.005,124,0.247,125,0.34,126,0.446,127,0.34,129,0.446,130,1.808,131,1.643,132,1.093,134,3.018,138,1.047,146,0.831,150,0.34,151,0.737,152,0.737,153,0.446,154,1.036,155,0.446,156,0.941,157,0.322,158,0.446,159,0.34,160,0.982,161,1.578,162,0.941,163,0.941,164,0.36,165,0.446,166,0.322,167,0.446,168,0.322,169,0.446,170,0.34,171,0.446,172,0.881,173,0.446,174,0.36,175,0.446,176,0.34,177,0.446,178,0.36,179,0.446,180,0.34,181,0.322,182,0.801,183,0.446,184,0.833,185,0.322,186,0.446,187,0.36,188,0.446,189,0.34,190,0.881,191,1.307,192,0.36,193,0.446,194,0.446,195,0.446,212,1.511,247,0.594,254,1.243,270,2.255,271,2.532,272,2.342,310,1.469,311,1.673,336,1.579,344,0.737,349,1.033,356,0.733,380,1.366,381,1.707,391,2.142,395,2.873,405,1.576,434,1.86,462,2.053,468,2.532,469,2.532,471,2.592,472,2.623,475,2.76,476,1.86,487,1.243,489,3.29,494,3.656,495,2.311,496,2.76,523,2.179,525,3.428,528,1.86,534,2.053,537,2.053,538,1.754,551,1.033,552,2.266,563,1.105,589,0.691,590,0.956,612,1.86,624,0.524,633,1.166,634,0.865,636,0.913,639,2.179,643,1.877,645,1.91,652,1.598,653,1.243,656,1.754,657,1.754,660,0.78,661,1.301,662,0.553,663,1.033,666,1.877,667,1.877,668,1.469,670,1.547,671,2.017,681,1.86,687,3.018,688,1.373,689,3.735,695,2.686,696,1.126,698,2.76,702,2.037,708,2.342,712,1.243,720,1.126,740,1.707,754,1.126,760,3.29,777,2.377,778,2.691,834,3.147,836,2.017,843,1.211,852,1.126,869,1.86,870,2.037,872,3.461,873,1.579,928,2.76,949,2.311,960,0.956,972,2.76,1021,1.126,1024,1.243,1025,1.243,1027,1.399,1028,2.017,1029,3.452,1030,2.702,1031,2.952,1032,2.952,1033,2.952,1034,2.952,1035,2.952,1036,2.952,1037,2.76,1038,2.952,1039,3.795,1040,2.311,1041,2.311,1042,2.311,1043,2.311,1044,3.428,1045,1.399,1046,4.008,1047,2.702,1048,2.952,1049,2.311,1050,2.311,1051,2.053,1052,2.311,1053,2.311,1054,1.636,1055,2.311,1056,4.398,1057,3.428,1058,2.311,1059,2.135,1060,1.636,1061,1.399,1062,3.428,1063,4.52,1064,2.76,1065,2.311,1066,3.371,1067,1.636,1068,3.428,1069,2.702,1070,4.323,1071,2.311,1072,1.636,1073,2.311,1074,2.311,1075,2.311,1076,1.636,1077,1.636,1078,2.311,1079,2.311,1080,1.636,1081,1.399,1082,2.311,1083,2.311,1084,2.311,1085,1.636,1086,1.636,1087,1.636,1088,2.311,1089,1.636,1090,1.636,1091,1.636,1092,1.636,1093,1.636,1094,1.243,1095,1.636,1096,1.399,1097,1.126,1098,1.399,1099,1.636,1100,1.399,1101,1.636,1102,1.636,1103,1.399,1104,1.399,1105,3.055,1106,4.686,1107,4.52,1108,4.52,1109,1.399,1110,1.399,1111,1.399,1112,1.399,1113,3.428,1114,1.636,1115,1.399,1116,1.399,1117,1.399,1118,1.399,1119,1.399,1120,1.399,1121,1.399,1122,1.636,1123,1.636,1124,1.636,1125,1.399,1126,1.399,1127,2.311,1128,1.636,1129,1.399,1130,1.399,1131,2.311,1132,1.399,1133,1.399,1134,1.399,1135,1.399,1136,1.243,1137,1.399,1138,1.243,1139,1.399,1140,1.399,1141,1.636,1142,1.636,1143,1.636,1144,2.952,1145,2.952,1146,2.952,1147,2.311,1148,1.399,1149,1.399,1150,2.311,1151,3.841,1152,4.086,1153,2.311,1154,2.311,1155,1.399,1156,1.636,1157,1.636,1158,1.636,1159,1.399,1160,1.636,1161,1.636,1162,1.399,1163,2.311,1164,2.311,1165,2.311,1166,1.399,1167,1.399,1168,0.889,1169,1.399,1170,1.399,1171,3.045,1172,2.311,1173,2.311,1174,2.311,1175,2.702,1176,2.053,1177,2.702,1178,2.702,1179,2.702,1180,1.399,1181,1.707,1182,1.399,1183,1.243,1184,1.243,1185,2.311,1186,1.243,1187,2.623,1188,2.952,1189,1.399,1190,1.126,1191,1.399,1192,2.311,1193,1.399,1194,1.399,1195,1.399,1196,1.399,1197,1.636,1198,1.636,1199,2.017,1200,1.399,1201,1.399,1202,2.311,1203,1.399,1204,1.399,1205,1.399,1206,1.399,1207,2.311,1208,1.399]],["title/components/HeaderComponent.html",[124,0.184,174,0.781]],["body/components/HeaderComponent.html",[1,2.417,3,0.096,4,0.096,5,0.081,8,1.027,10,1.352,13,2.862,14,2.862,15,0.604,21,0.783,22,0.236,23,0.449,24,1.331,27,0.783,28,3.222,33,0.462,36,1.056,38,0.66,39,0.021,40,0.434,41,0.549,46,1.502,51,1.133,76,1.242,78,1.455,79,1.455,84,1.591,86,2.201,89,0.471,90,0.256,95,1.352,97,1.143,102,0.096,103,0.276,104,0.678,105,1.42,121,0.007,122,0.011,123,0.007,124,0.262,125,0.517,126,0.678,127,0.517,129,0.678,130,1.921,131,1.757,132,0.678,134,3.621,136,2.011,138,1.538,139,2.594,144,0.643,146,2.577,148,3.455,150,0.517,151,1.027,152,1.027,153,0.678,154,1.311,155,0.678,156,1.24,157,0.489,158,0.678,159,0.517,160,1.404,161,1.24,162,0.678,163,1.24,164,0.547,165,0.678,166,0.489,167,0.678,168,0.489,169,0.678,170,0.517,171,0.678,172,0.547,173,0.678,174,1.114,175,0.678,176,0.517,177,0.678,178,0.547,179,0.678,180,0.517,181,0.489,182,0.577,183,0.678,184,0.517,185,0.489,186,0.678,187,0.547,188,0.678,189,0.517,190,0.547,191,0.643,192,0.547,193,0.678,194,0.678,195,0.678,216,2.57,247,0.547,270,2.311,271,2.379,272,1.453,276,1.571,317,2.142,322,3.853,340,3.455,344,1.027,347,1.89,411,1.713,416,1.713,467,1.713,471,3.35,554,4.66,565,2.128,602,2.128,624,0.796,633,1.536,634,1.206,636,1.272,638,2.128,639,2.757,643,2.048,644,1.713,645,1.796,662,1.713,666,2.048,667,2.472,668,2.472,669,2.872,670,1.689,688,1.264,695,1.264,716,2.128,834,3.724,836,2.963,843,2.273,849,3.222,851,3.222,852,2.594,854,2.128,855,2.128,856,5.093,857,2.128,858,2.128,862,2.862,870,1.914,872,3.203,873,1.453,875,3.222,876,3.222,896,4.337,955,1.89,1037,2.594,1056,3.455,1094,3.853,1151,2.862,1171,1.89,1173,2.128,1183,1.89,1184,4.14,1187,2.862,1199,2.963,1209,2.128,1210,4.547,1211,4.14,1212,4.547,1213,3.768,1214,4.547,1215,4.547,1216,4.547,1217,3.768,1218,5.072,1219,5.072,1220,5.734,1221,4.547,1222,3.768,1223,3.222,1224,2.488,1225,2.488,1226,2.488,1227,2.488,1228,2.488,1229,3.222,1230,3.492,1231,3.768,1232,3.768,1233,3.768,1234,4.66,1235,2.488,1236,2.862,1237,3.222,1238,2.488,1239,2.488,1240,3.768,1241,2.488,1242,2.488,1243,2.488,1244,2.488,1245,2.488,1246,2.488,1247,2.488,1248,3.768,1249,2.488,1250,2.488,1251,2.488,1252,2.488,1253,2.488,1254,3.768,1255,2.488,1256,4.547,1257,2.488,1258,2.488,1259,2.488,1260,2.488,1261,2.488,1262,2.488,1263,2.488,1264,2.488,1265,2.488,1266,2.488,1267,2.128,1268,4.337,1269,2.128,1270,3.222,1271,2.488,1272,3.768,1273,2.488,1274,2.488,1275,2.488,1276,2.128,1277,3.222,1278,2.488,1279,2.488,1280,2.488,1281,4.547,1282,2.488,1283,3.768,1284,2.488,1285,2.488,1286,3.768,1287,2.128,1288,2.128,1289,2.488,1290,3.768,1291,3.768,1292,3.768,1293,2.488,1294,2.488,1295,2.488,1296,3.768,1297,2.488,1298,2.488,1299,2.128]],["title/components/HomeComponent.html",[124,0.184,176,0.739]],["body/components/HomeComponent.html",[3,0.085,4,0.085,5,0.071,7,0.302,10,0.714,13,2.611,15,0.528,19,2.939,20,2.611,21,0.714,33,0.41,36,0.364,38,0.387,39,0.021,40,0.176,41,0.322,47,3.208,57,1.746,60,2.611,76,0.541,84,1.451,86,2.782,89,0.374,90,0.227,97,1.995,102,0.085,103,0.245,104,0.602,121,0.006,122,0.01,123,0.006,124,0.267,125,0.459,126,0.602,127,0.459,129,0.602,130,1.889,131,1.747,132,0.602,134,1.394,136,1.609,139,2.366,144,0.57,150,0.459,151,0.937,152,0.937,153,0.602,154,1.334,155,0.602,156,1.15,157,0.434,158,0.602,159,0.459,160,1.167,161,1.15,162,0.602,163,1.15,164,0.485,165,0.602,166,0.434,167,0.602,168,0.434,169,0.602,170,0.459,171,0.602,172,0.485,173,0.602,174,0.485,175,0.602,176,0.99,177,0.602,178,0.485,179,0.602,180,0.459,181,0.434,182,0.512,183,0.602,184,0.459,185,0.434,186,0.602,187,0.485,188,0.602,189,0.459,190,0.485,191,0.57,192,0.485,193,0.602,194,0.602,195,0.602,216,2.135,261,3.486,270,1.121,299,4.073,317,1.451,322,4.153,324,2.611,331,2.611,336,2.007,344,0.937,376,3.619,382,2.611,391,0.989,400,2.007,403,3.619,406,2.366,427,3.763,439,4.675,471,2.007,476,4.615,524,3.619,540,2.611,552,0.989,624,0.706,626,3.008,628,2.17,633,1.425,634,1.1,636,1.161,650,1.54,661,1.591,662,0.745,664,2.007,666,1.868,667,2.589,668,2.806,669,3.915,670,2.645,671,1.289,695,2.999,723,2.17,731,2.17,767,3.619,778,1.638,787,2.611,790,1.887,799,2.611,823,5.047,825,4.073,834,2.294,836,1.289,838,1.887,843,2.645,852,2.905,860,3.921,863,4.073,865,1.887,866,1.887,868,1.887,869,1.519,870,2.778,872,3.728,873,2.782,901,4.073,902,2.939,919,2.939,935,2.611,1015,2.939,1017,2.611,1022,2.611,1023,2.611,1037,1.519,1176,4.153,1181,3.26,1186,1.677,1190,4.063,1199,1.289,1211,1.677,1223,1.887,1234,2.611,1267,1.887,1268,4.073,1269,1.887,1270,2.939,1276,4.675,1277,2.939,1287,4.414,1288,3.609,1300,1.887,1301,3.436,1302,4.22,1303,3.436,1304,2.207,1305,2.207,1306,2.611,1307,2.207,1308,1.677,1309,1.887,1310,2.207,1311,1.887,1312,2.207,1313,3.436,1314,2.207,1315,2.207,1316,1.887,1317,2.207,1318,3.436,1319,2.207,1320,2.207,1321,2.207,1322,2.207,1323,2.207,1324,2.207,1325,2.207,1326,4.763,1327,4.763,1328,3.436,1329,4.763,1330,4.763,1331,2.611,1332,5.902,1333,4.763,1334,3.436,1335,3.436,1336,3.436,1337,3.436,1338,2.939,1339,3.436,1340,3.436,1341,3.436,1342,3.436,1343,3.436,1344,3.436,1345,3.436,1346,5.466,1347,2.939,1348,3.436,1349,3.436,1350,3.436,1351,3.436,1352,4.763,1353,2.939,1354,3.436,1355,3.436,1356,3.436,1357,3.436,1358,3.436,1359,3.436,1360,3.436,1361,4.763,1362,4.763,1363,3.436,1364,3.436,1365,3.436,1366,4.763,1367,3.436,1368,3.436,1369,3.436,1370,3.436,1371,3.436,1372,3.436,1373,3.436,1374,3.436,1375,3.436,1376,3.436,1377,3.436,1378,3.436,1379,3.436,1380,3.436,1381,3.436,1382,3.436,1383,3.436,1384,3.436,1385,3.436,1386,3.436,1387,3.436,1388,3.436,1389,2.939,1390,3.436,1391,3.436,1392,5.093,1393,4.763,1394,3.436,1395,3.436,1396,3.436,1397,4.763,1398,5.902,1399,3.436,1400,3.436,1401,4.763,1402,3.436,1403,3.436,1404,3.436,1405,3.436,1406,3.436,1407,4.763,1408,3.436,1409,3.436,1410,3.436,1411,2.939,1412,3.436,1413,3.436,1414,3.436,1415,3.436,1416,3.436,1417,2.939,1418,2.207,1419,4.22,1420,2.207,1421,2.207,1422,2.207,1423,2.207,1424,2.939,1425,2.207,1426,3.436,1427,3.436,1428,3.436,1429,3.436,1430,2.207,1431,2.207,1432,2.207,1433,2.207,1434,3.436,1435,2.207,1436,3.436,1437,3.436,1438,2.207,1439,2.207,1440,2.207,1441,2.939,1442,2.207,1443,2.207,1444,2.207,1445,4.763,1446,3.436,1447,2.207,1448,2.207,1449,2.207,1450,2.207,1451,2.207,1452,1.887,1453,2.207,1454,2.207,1455,2.207,1456,2.207,1457,2.207,1458,2.207,1459,2.939]],["title/components/LeaderboardComponent.html",[124,0.184,178,0.781]],["body/components/LeaderboardComponent.html",[3,0.127,4,0.127,5,0.107,7,0.632,8,1.26,15,0.701,21,0.961,22,0.312,23,0.551,24,1.344,27,0.961,33,0.611,36,1.072,38,0.577,39,0.021,40,0.551,41,0.48,42,2.92,46,2.31,51,0.684,58,1.204,76,1.132,77,1.073,78,1.479,79,1.479,89,0.42,90,0.338,97,1.757,102,0.127,103,0.365,104,0.898,108,1.479,121,0.009,122,0.013,123,0.009,124,0.316,125,0.684,126,0.898,127,0.684,129,0.898,130,1.987,131,1.857,132,1.457,150,0.684,151,1.26,152,1.26,153,0.898,154,1.497,155,0.898,156,1.457,157,0.647,158,0.898,159,0.684,160,1.419,161,1.457,162,0.898,163,1.457,164,0.723,165,0.898,166,0.647,167,0.898,168,0.647,169,0.898,170,0.684,171,0.898,172,0.723,173,0.898,174,0.723,175,0.898,176,0.684,177,0.898,178,1.273,179,0.898,180,0.684,181,0.647,182,0.764,183,0.898,184,0.684,185,0.647,186,0.898,187,0.723,188,0.898,189,0.684,190,0.723,191,0.851,192,0.723,193,0.898,194,0.898,195,0.898,216,2.072,244,1.673,247,0.723,344,1.26,380,1.635,405,1.329,474,3.512,563,1.953,589,1.953,619,1.79,624,1.054,628,2.92,631,2.92,633,1.804,634,1.479,636,1.561,641,2.596,652,2.13,654,1.79,655,1.79,656,2.715,657,2.944,658,1.79,660,1.569,661,1.241,662,1.112,736,3.678,737,3.678,738,3.678,739,3.989,741,3.183,743,3.121,744,3.989,749,3.512,750,2.349,753,3.183,770,3.183,773,3.183,774,3.183,775,2.267,778,2.203,779,2.92,787,5.19,797,4.954,1059,1.953,1460,2.815,1461,4.623,1462,3.953,1463,4.623,1464,5.342,1465,4.623,1466,4.059,1467,2.815,1468,4.623,1469,4.623,1470,3.953,1471,3.292,1472,3.292,1473,3.292,1474,4.623,1475,2.513,1476,3.292,1477,3.292,1478,1.673,1479,3.292,1480,1.476,1481,3.292,1482,3.953,1483,4.623,1484,3.292,1485,3.292]],["title/components/LoginComponent.html",[124,0.184,180,0.739]],["body/components/LoginComponent.html",[1,2.722,3,0.123,4,0.123,5,0.146,8,1.431,10,1.368,15,0.633,18,1.612,21,0.939,22,0.302,23,0.539,24,1.049,27,0.939,29,3.864,33,0.592,36,0.995,38,0.558,39,0.021,40,0.499,41,0.465,51,0.663,54,2.853,58,0.663,72,1.62,76,0.781,89,0.467,90,0.327,91,1.862,97,1.371,101,2.025,102,0.123,103,0.353,104,0.869,121,0.009,122,0.013,123,0.009,124,0.271,125,0.663,126,0.869,127,0.663,129,0.869,130,1.98,131,1.849,132,0.869,136,2.377,144,0.824,150,0.663,151,1.232,152,1.232,153,0.869,154,1.476,155,0.869,156,1.431,157,0.627,158,0.869,159,0.663,160,1.399,161,1.431,162,0.869,163,1.431,164,0.7,165,0.869,166,0.627,167,0.869,168,0.627,169,0.869,170,0.663,171,0.869,172,0.7,173,0.869,174,0.7,175,0.869,176,0.663,177,0.869,178,0.7,179,0.869,180,1.187,181,0.627,182,0.74,183,0.869,184,0.663,185,0.627,186,0.869,187,0.7,188,0.869,189,0.663,190,0.7,191,0.824,192,0.7,193,0.869,194,0.869,195,0.869,212,2.152,247,0.7,258,1.862,311,1.201,317,1.909,334,3.111,335,3.955,343,2.013,348,2.194,356,2.559,391,2.559,405,0.917,417,2.194,434,3.111,451,3.614,452,3.614,465,3.932,497,3.433,520,3.433,538,2.296,551,2.013,552,1.429,564,3.111,573,2.013,636,1.526,688,2.296,702,2.667,870,2.296,922,4.339,960,1.862,1020,2.422,1051,3.433,1105,2.194,1236,3.433,1306,3.988,1347,2.726,1389,3.864,1459,2.726,1486,2.726,1487,3.864,1488,5.249,1489,4.519,1490,4.489,1491,2.726,1492,4.884,1493,3.864,1494,4.884,1495,4.884,1496,4.519,1497,3.188,1498,3.864,1499,5.802,1500,3.864,1501,3.864,1502,3.864,1503,3.864,1504,3.188,1505,3.188,1506,2.726,1507,2.726,1508,2.726,1509,2.726,1510,3.188,1511,2.726,1512,2.422,1513,2.726,1514,2.726,1515,2.422,1516,3.188,1517,3.188,1518,3.188,1519,3.607,1520,4.884,1521,4.155,1522,4.519,1523,2.726,1524,2.726,1525,3.864,1526,4.519,1527,3.864,1528,3.864,1529,3.864,1530,4.884,1531,3.864,1532,2.726,1533,2.726]],["title/interfaces/LoginForm.html",[49,0.781,54,1.932]],["body/interfaces/LoginForm.html",[3,0.2,4,0.2,5,0.167,10,1.075,16,3.626,17,3.561,22,0.491,23,0.74,39,0.021,40,0.495,49,1.461,54,3.374,63,2.812,68,3.267,71,2.628,77,1.752,102,0.257,121,0.014,122,0.017,123,0.014,138,1.883,393,3.022,421,3.267,1519,4.523,1521,4.355,1534,2.185,1535,3.561,1536,4.716,1537,4.716,1538,3.93,1539,3.93]],["title/components/MainComponent.html",[124,0.184,181,0.699]],["body/components/MainComponent.html",[3,0.063,4,0.063,5,0.225,7,0.722,8,0.736,10,1.098,15,0.724,21,0.561,22,0.256,23,0.322,24,1.173,27,0.561,33,0.303,36,1.078,38,0.885,39,0.021,40,0.488,41,0.737,46,1.077,51,1.051,58,1.335,76,1.342,77,1.173,78,1.691,79,1.691,84,2.585,89,0.383,90,0.168,102,0.104,103,0.299,104,0.446,105,2.127,108,1.806,121,0.005,122,0.008,123,0.005,124,0.207,125,0.34,126,0.446,127,0.34,129,0.446,130,1.807,131,1.643,132,0.736,134,3.016,136,1.707,138,1.215,144,0.422,146,0.83,150,0.34,151,0.736,152,0.736,153,0.446,154,1.035,155,0.446,156,0.941,157,0.321,158,0.446,159,0.34,160,0.981,161,1.092,162,0.446,163,0.941,164,0.359,165,0.446,166,0.321,167,0.446,168,0.321,169,0.446,170,0.34,171,0.446,172,0.359,173,0.446,174,0.359,175,0.446,176,0.34,177,0.446,178,0.359,179,0.446,180,0.34,181,0.787,182,1.108,183,0.446,184,0.833,185,0.321,186,0.446,187,0.359,188,0.446,189,0.34,190,0.88,191,1.306,192,0.359,193,0.446,194,0.446,195,0.446,212,1.51,247,0.593,254,1.242,270,2.253,271,2.801,272,2.015,298,1.398,310,1.468,311,0.616,317,1.14,335,1.705,336,2.79,344,0.736,349,1.032,350,1.125,356,0.733,380,1.459,381,1.705,391,2.368,395,2.872,405,1.373,462,2.051,468,2.53,469,2.53,471,2.015,472,2.621,475,1.859,487,1.242,489,3.288,494,3.655,496,2.758,523,2.596,524,2.051,534,2.051,537,2.051,538,1.753,552,1.21,563,1.104,589,0.69,590,0.955,612,1.859,620,1.468,624,0.523,627,1.859,633,1.165,634,0.864,636,0.912,639,2.178,643,2.178,645,1.287,652,1.597,654,2.178,655,1.468,656,1.753,657,2.035,660,0.779,661,1.8,662,0.552,663,1.032,666,1.875,667,1.468,668,1.468,670,2.14,687,3.016,689,3.734,695,2.035,702,2.035,708,2.34,712,1.242,720,1.125,740,1.705,754,1.859,760,3.288,777,2.375,778,2.958,834,3.146,836,2.015,843,1.795,869,1.125,870,2.035,872,3.337,873,0.955,928,3.053,958,4.084,960,0.955,972,2.758,1021,1.125,1024,1.242,1025,1.242,1031,2.95,1032,2.95,1033,2.95,1034,2.95,1035,3.792,1036,2.95,1037,3.479,1038,2.95,1039,3.792,1040,2.309,1041,2.309,1042,2.309,1043,2.309,1044,3.426,1045,1.398,1048,2.95,1049,2.309,1050,2.309,1051,2.051,1052,2.309,1053,2.309,1055,2.309,1056,4.397,1057,3.426,1058,2.309,1059,2.134,1061,1.398,1062,3.426,1063,3.426,1064,2.758,1065,2.309,1066,3.369,1068,3.426,1070,1.398,1071,2.309,1073,2.309,1074,2.309,1075,2.309,1078,2.309,1079,2.309,1081,1.398,1082,2.309,1083,2.309,1084,2.309,1088,2.309,1094,1.242,1096,2.95,1097,1.125,1098,1.398,1100,1.398,1103,1.398,1104,1.398,1105,1.859,1106,3.792,1107,3.792,1108,3.426,1109,1.398,1110,1.398,1111,1.398,1112,1.398,1113,3.426,1115,1.398,1116,1.398,1117,1.398,1118,1.398,1119,1.398,1120,1.398,1121,1.398,1125,1.398,1126,1.398,1127,2.309,1129,1.398,1130,1.398,1131,2.309,1132,1.398,1133,1.398,1134,1.398,1135,1.398,1136,1.242,1137,1.398,1138,1.242,1139,1.398,1140,1.398,1144,2.309,1145,2.95,1146,2.95,1147,1.398,1148,1.398,1149,1.398,1150,2.309,1151,3.839,1152,4.084,1153,2.309,1154,2.309,1155,1.398,1162,1.398,1163,2.309,1164,2.309,1165,2.309,1166,1.398,1167,1.398,1168,0.888,1169,1.398,1170,1.398,1171,3.043,1172,2.309,1174,2.309,1180,1.398,1181,1.705,1182,1.398,1183,1.242,1184,1.242,1185,1.398,1186,1.242,1187,2.621,1188,2.95,1189,1.398,1190,1.125,1191,1.398,1192,2.309,1193,1.398,1194,1.398,1195,1.398,1196,1.398,1199,2.015,1200,1.398,1201,1.398,1202,2.309,1203,1.398,1204,1.398,1205,1.398,1206,1.398,1207,2.309,1208,1.398,1515,2.051,1540,1.398,1541,2.7,1542,3.45,1543,2.7,1544,3.45,1545,3.45,1546,3.45,1547,2.7,1548,2.7,1549,1.634,1550,1.634,1551,1.634,1552,1.634,1553,2.7,1554,1.634,1555,1.634,1556,2.7,1557,1.634,1558,1.634,1559,1.634,1560,1.634,1561,1.634,1562,2.7,1563,1.634,1564,1.634,1565,1.634,1566,1.634,1567,1.634,1568,1.634,1569,1.634,1570,3.45,1571,1.634,1572,1.634,1573,1.634,1574,1.634,1575,2.7,1576,1.634,1577,2.7,1578,1.634,1579,1.634,1580,1.634,1581,1.634,1582,1.634,1583,2.95,1584,1.634,1585,1.634,1586,1.634,1587,1.634,1588,1.634,1589,1.634,1590,1.634,1591,1.634,1592,1.634,1593,1.634,1594,2.7,1595,2.7]],["title/components/NewfiledialogComponent.html",[124,0.184,184,0.739]],["body/components/NewfiledialogComponent.html",[3,0.123,4,0.123,5,0.195,7,0.617,8,1.232,15,0.78,21,0.939,22,0.302,23,0.539,24,0.74,27,0.939,33,0.592,36,1.086,38,0.791,39,0.021,40,0.455,41,0.659,51,1.091,57,3.272,72,2.296,76,1.399,77,1.325,78,1.446,79,1.446,84,2.547,89,0.437,90,0.327,102,0.123,103,0.353,108,1.02,121,0.009,122,0.013,123,0.009,124,0.312,125,0.663,126,0.869,127,0.663,129,0.869,130,1.98,131,1.83,132,1.232,138,0.967,150,0.663,151,1.232,152,1.232,153,0.869,154,1.476,155,0.869,156,1.431,157,0.627,158,0.869,159,0.663,160,1.534,161,1.756,162,0.869,163,1.431,164,0.7,165,0.869,166,0.627,167,0.869,168,0.627,169,0.869,170,0.663,171,0.869,172,0.7,173,0.869,174,0.7,175,0.869,176,0.663,177,0.869,178,0.7,179,0.869,180,0.663,181,0.627,182,0.74,183,0.869,184,1.187,185,0.627,186,0.869,187,0.7,188,0.869,189,0.663,190,0.7,191,0.824,192,0.7,193,0.869,194,0.869,195,0.869,212,2.152,232,2.422,247,0.993,260,2.422,344,1.232,380,1.476,391,2.806,418,2.422,459,3.864,480,1.909,490,3.864,494,3.315,496,3.614,538,2.902,552,1.429,563,1.02,589,1.346,590,1.862,600,1.862,606,2.422,619,1.733,624,1.02,633,1.773,634,1.446,652,2.093,661,1.201,662,1.929,664,2.64,671,2.64,673,3.932,676,3.433,681,4.607,682,2.422,683,4.339,685,3.433,688,3.063,689,3.607,692,2.422,695,2.296,696,2.194,702,2.667,713,2.726,714,2.726,955,3.433,1066,3.988,1237,3.864,1596,2.726,1597,5.249,1598,5.249,1599,5.711,1600,5.249,1601,6.029,1602,3.188,1603,3.188,1604,3.188,1605,4.519,1606,4.519,1607,4.519,1608,3.864,1609,3.188,1610,4.519,1611,3.188,1612,3.188,1613,3.188,1614,3.188,1615,3.188,1616,3.188,1617,3.188,1618,2.726,1619,3.188,1620,3.188,1621,3.188,1622,3.188,1623,3.188,1624,3.188,1625,3.188,1626,3.188,1627,3.188,1628,3.188]],["title/components/ProblemComponent.html",[124,0.184,185,0.699]],["body/components/ProblemComponent.html",[3,0.084,4,0.084,5,0.212,7,0.646,8,1.683,15,0.697,18,1.829,21,0.707,22,0.206,23,0.405,24,1.097,27,0.707,33,0.404,36,1.121,38,0.898,39,0.021,40,0.528,41,0.61,46,1.885,47,1.848,51,0.869,57,3.137,58,1.18,71,1.106,76,1.024,77,1.564,78,1.338,79,1.338,82,2.146,89,0.463,90,0.43,97,1.031,102,0.084,103,0.241,104,0.593,108,1.817,121,0.006,122,0.009,123,0.006,124,0.265,125,0.452,126,0.593,127,0.452,129,0.593,130,1.885,131,1.742,132,0.593,144,0.562,150,0.452,151,0.927,152,0.927,153,0.593,154,1.222,155,0.593,156,1.14,157,0.428,158,0.593,159,0.452,160,1.158,161,1.743,162,0.593,163,1.14,164,0.478,165,0.593,166,0.428,167,0.593,168,0.428,169,0.593,170,0.452,171,0.593,172,0.478,173,0.593,174,0.478,175,0.593,176,0.452,177,0.593,178,1.039,179,0.593,180,0.452,181,0.428,182,0.505,183,0.593,184,0.452,185,0.929,186,0.593,187,0.478,188,0.593,189,0.452,190,0.478,191,0.562,192,1.039,193,0.593,194,0.593,195,0.593,212,1.782,244,1.106,247,0.747,270,1.106,278,1.861,279,1.861,344,0.927,349,2.641,350,1.498,380,1.596,381,2.146,395,2.569,405,1.359,426,1.498,467,3.741,468,2.985,469,2.985,476,3.254,480,0.919,489,2.34,538,1.727,551,3.238,552,0.975,573,1.374,589,1.996,590,1.985,597,3.576,600,1.271,619,1.848,624,0.696,626,2.146,632,2.34,633,1.412,634,1.088,636,1.148,639,2.569,641,2.118,643,2.569,644,2.34,645,1.62,646,3.175,650,2.118,653,3.591,654,1.183,655,1.183,656,1.106,657,1.106,658,1.183,659,0.919,660,1.037,661,0.82,662,0.735,663,1.374,665,1.653,666,1.183,667,1.183,668,1.183,669,1.374,673,2.34,695,2.125,702,2.125,720,2.34,723,3.432,732,2.444,740,2.146,743,2.761,762,1.62,778,1.62,779,2.146,781,2.906,782,1.62,783,4.042,784,2.582,786,3.576,794,4.042,802,2.582,810,1.653,812,1.861,815,1.861,834,1.183,839,1.861,840,1.861,860,1.653,862,1.653,903,1.861,908,1.498,911,4.385,912,1.861,928,4.331,935,3.591,938,2.582,960,1.271,1005,1.861,1008,2.906,1021,2.34,1022,2.582,1023,2.582,1059,0.919,1097,1.498,1159,1.861,1181,1.374,1199,1.271,1229,2.906,1230,2.34,1299,2.906,1441,1.861,1452,4.042,1466,3.177,1480,2.118,1512,1.653,1618,2.906,1629,1.861,1630,2.582,1631,2.582,1632,2.906,1633,4.182,1634,3.399,1635,4.182,1636,4.182,1637,3.399,1638,5.127,1639,5.127,1640,4.182,1641,3.399,1642,3.399,1643,3.399,1644,3.399,1645,2.176,1646,3.399,1647,3.399,1648,3.399,1649,3.399,1650,2.176,1651,2.402,1652,2.176,1653,3.399,1654,3.399,1655,3.399,1656,3.399,1657,2.176,1658,3.399,1659,2.176,1660,2.176,1661,2.176,1662,2.176,1663,2.176,1664,2.176,1665,2.176,1666,2.176,1667,2.176,1668,2.176,1669,2.176,1670,2.176,1671,1.037,1672,2.176,1673,3.399,1674,2.176,1675,2.176,1676,2.176,1677,2.176,1678,2.176,1679,2.176,1680,2.176,1681,2.176,1682,2.176,1683,3.399,1684,4.182,1685,4.182,1686,3.399,1687,2.176,1688,2.176,1689,3.399,1690,2.176,1691,2.176,1692,2.176,1693,2.176,1694,2.176,1695,2.176,1696,2.176,1697,3.399,1698,2.176,1699,2.176,1700,4.727,1701,3.399,1702,3.399,1703,3.399,1704,3.399,1705,3.399,1706,3.399,1707,1.861,1708,1.861,1709,3.399,1710,3.399,1711,2.176,1712,2.176,1713,3.399,1714,3.399,1715,3.399,1716,2.176,1717,2.176]],["title/components/ProblemlistComponent.html",[124,0.184,187,0.781]],["body/components/ProblemlistComponent.html",[3,0.122,4,0.122,5,0.102,7,0.613,8,1.223,15,0.712,21,0.933,22,0.299,23,0.535,24,1.394,27,0.933,33,0.586,36,1.059,38,0.786,39,0.021,40,0.479,41,0.654,46,1.789,51,0.933,58,0.933,76,1.279,78,1.436,79,1.436,89,0.435,90,0.324,97,1.361,102,0.122,103,0.35,104,0.86,108,1.67,121,0.009,122,0.013,123,0.009,124,0.332,125,0.656,126,0.86,127,1.085,129,0.86,130,1.978,131,1.847,132,0.86,135,2.172,136,2.255,144,0.815,150,0.656,151,1.223,152,1.223,153,0.86,154,1.469,155,0.86,156,1.423,157,0.62,158,0.86,159,0.656,160,1.392,161,1.423,162,0.86,163,1.423,164,0.693,165,0.86,166,0.62,167,0.86,168,0.62,169,0.86,170,0.656,171,0.86,172,0.693,173,0.86,174,0.693,175,0.86,176,0.656,177,0.86,178,0.693,179,0.86,180,0.656,181,0.62,182,0.732,183,0.86,184,0.656,185,0.62,186,0.86,187,1.249,188,0.86,189,0.656,190,0.693,191,0.815,192,0.693,193,0.86,194,0.86,195,0.86,216,2.01,244,1.603,247,0.693,304,2.439,344,1.223,380,1.75,405,1.501,508,3.914,523,2.439,563,1.819,589,1.333,619,1.715,624,1.01,627,3.088,628,3.59,633,1.763,634,1.436,636,1.515,641,2.548,652,1.789,654,1.715,655,1.715,656,2.652,657,2.888,658,1.715,659,1.333,660,1.504,661,1.189,662,1.066,664,2.621,708,3.321,732,2.138,736,3.594,737,3.594,738,3.594,739,3.914,740,2.833,741,3.088,743,3.321,744,3.914,747,2.439,748,3.836,749,3.408,750,2.888,753,3.088,754,3.088,757,3.914,759,3.836,760,2.172,770,2.172,772,2.698,773,2.172,774,2.172,775,2.172,777,2.172,778,2.138,779,2.833,784,3.408,1059,1.895,1181,1.993,1199,1.843,1230,3.088,1338,3.836,1462,3.836,1480,2.797,1630,3.408,1707,2.698,1708,2.698,1718,2.698,1719,4.486,1720,5.22,1721,4.486,1722,5.22,1723,4.486,1724,4.486,1725,3.155,1726,3.155,1727,3.155,1728,4.486,1729,4.486,1730,4.486,1731,4.486,1732,4.319,1733,3.155,1734,3.155,1735,3.155,1736,3.155,1737,3.155,1738,3.155,1739,3.155]],["title/components/RegisterComponent.html",[124,0.184,189,0.739]],["body/components/RegisterComponent.html",[1,2.612,3,0.113,4,0.113,5,0.137,7,0.579,8,1.361,10,1.336,15,0.787,16,3.549,18,1.511,21,0.881,22,0.277,23,0.505,24,0.983,27,0.881,31,3.624,33,0.541,36,0.961,38,0.511,39,0.021,40,0.484,41,0.425,47,2.304,51,0.606,58,0.606,63,2.714,76,0.714,89,0.454,90,0.3,91,1.703,97,1.285,101,1.899,102,0.113,103,0.323,104,0.795,121,0.008,122,0.012,123,0.008,124,0.258,125,0.606,126,0.795,127,0.606,129,0.795,130,1.96,131,1.827,132,0.795,136,2.342,144,0.753,150,0.606,151,1.155,152,1.155,153,0.795,154,1.417,155,0.795,156,1.361,157,0.573,158,0.795,159,0.606,160,1.343,161,1.361,162,1.361,163,1.361,164,0.641,165,0.795,166,0.573,167,0.795,168,0.573,169,0.795,170,0.606,171,0.795,172,0.641,173,0.795,174,0.641,175,0.795,176,0.606,177,0.795,178,0.641,179,0.795,180,0.606,181,0.573,182,0.677,183,0.795,184,0.606,185,0.573,186,0.795,187,0.641,188,0.795,189,1.14,190,0.641,191,0.753,192,0.641,193,0.795,194,0.795,195,0.795,212,2.066,247,0.641,258,1.703,311,1.099,317,1.79,334,2.918,343,1.841,348,2.007,356,2.723,376,5.177,391,2.457,401,4.881,405,0.838,451,3.438,452,3.438,465,3.774,478,3.624,497,3.22,520,3.22,538,2.153,551,1.841,552,1.307,564,2.918,573,1.841,636,1.431,688,2.153,702,2.537,870,2.153,922,4.164,925,5.196,960,1.703,1020,2.215,1064,2.918,1105,2.007,1234,3.22,1236,3.22,1306,3.793,1424,3.624,1487,3.624,1490,4.27,1491,2.493,1492,4.688,1493,3.624,1494,4.688,1495,4.688,1498,3.624,1499,3.624,1500,3.624,1501,3.624,1502,3.624,1503,3.624,1506,2.493,1507,2.493,1508,2.493,1509,2.493,1511,2.493,1512,2.215,1513,2.493,1514,2.493,1515,2.215,1519,3.462,1520,5.827,1521,4.38,1523,2.493,1524,2.493,1525,5.493,1527,3.624,1528,3.624,1529,3.624,1530,4.688,1531,3.624,1532,2.493,1533,2.493,1740,2.493,1741,4.993,1742,4.238,1743,4.238,1744,2.915,1745,3.624,1746,2.915,1747,2.915,1748,2.915,1749,2.915,1750,2.915,1751,2.915,1752,2.915,1753,6.424,1754,2.915,1755,2.915,1756,2.915,1757,2.915,1758,4.238,1759,4.238,1760,4.238,1761,4.238,1762,4.238,1763,4.238,1764,4.238,1765,4.238,1766,2.915,1767,2.915,1768,2.915,1769,2.915,1770,2.915,1771,2.915]],["title/components/RenamefileDialog.html",[124,0.184,190,0.781]],["body/components/RenamefileDialog.html",[3,0.141,4,0.141,5,0.182,7,0.677,15,0.78,21,1.03,22,0.345,23,0.59,27,1.03,33,0.676,36,1.044,38,0.868,39,0.021,40,0.395,41,0.722,45,3.411,51,1.171,57,2.517,76,1.481,77,1.15,84,2.554,89,0.359,90,0.374,102,0.141,103,0.403,108,1.165,121,0.01,122,0.014,123,0.01,124,0.327,125,0.757,126,0.992,127,0.757,129,0.992,130,2.007,131,1.864,132,1.351,150,0.757,151,1.351,152,1.351,153,0.992,154,1.563,155,0.992,156,1.536,157,0.715,158,0.992,159,0.757,160,1.599,161,1.853,162,0.992,163,1.536,164,0.8,165,0.992,166,0.715,167,0.992,168,0.715,169,0.992,170,0.757,171,0.992,172,0.8,173,0.992,174,0.8,175,0.992,176,0.757,177,0.992,178,0.8,179,0.992,180,0.757,181,0.715,182,0.845,183,0.992,184,0.757,185,0.715,186,0.992,187,0.8,188,0.992,189,0.757,190,1.329,191,1.864,192,0.8,193,0.992,194,0.992,195,0.992,247,0.8,344,1.351,485,2.221,624,1.165,633,1.903,634,1.585,652,2.246,662,2.042,671,2.894,673,3.411,676,3.764,681,4.843,682,2.765,683,4.594,685,3.764,687,3.819,688,3.214,689,3.819,692,2.765,693,3.112,695,2.517,696,2.506,785,4.237,1064,3.411,1136,2.765,1138,4.28,1583,4.237,1608,4.237,1772,3.112,1773,4.955,1774,4.955,1775,4.955,1776,5.633,1777,3.639,1778,3.639,1779,3.639,1780,3.639,1781,3.639,1782,3.639,1783,3.639,1784,3.639]],["title/interfaces/SignUpForm.html",[49,0.781,63,1.932]],["body/interfaces/SignUpForm.html",[3,0.191,4,0.191,5,0.16,10,1.028,16,4.068,17,3.403,22,0.469,23,0.72,39,0.021,40,0.565,49,1.433,54,2.687,63,3.282,68,3.121,71,2.511,77,1.762,102,0.252,121,0.014,122,0.017,123,0.014,138,1.831,393,2.887,421,3.121,1519,4.475,1521,3.121,1534,2.088,1535,3.403,1536,5.291,1537,5.291,1538,5.159,1539,5.159]],["title/components/SubmissiontableComponent.html",[124,0.184,192,0.781]],["body/components/SubmissiontableComponent.html",[3,0.135,4,0.135,5,0.113,7,0.66,8,1.316,10,1.237,15,0.66,18,1.722,21,1.004,22,0.332,23,0.575,24,1.381,33,0.651,36,1.03,38,0.614,39,0.021,40,0.498,41,0.511,46,1.925,58,1.004,76,0.858,78,1.545,79,1.545,89,0.431,90,0.36,97,1.464,102,0.135,103,0.388,104,0.955,108,1.545,121,0.01,122,0.013,123,0.01,124,0.323,125,0.728,126,0.955,127,0.728,129,0.955,130,2,131,1.871,132,0.955,150,0.728,151,1.316,152,1.316,153,0.955,154,1.538,155,0.955,156,1.506,157,0.689,158,0.955,159,0.728,160,1.458,161,1.506,162,0.955,163,1.506,164,0.77,165,0.955,166,0.689,167,0.955,168,0.689,169,0.955,170,0.728,171,0.955,172,0.77,173,0.955,174,0.77,175,0.955,176,0.728,177,0.955,178,0.77,179,0.955,180,0.728,181,0.689,182,0.813,183,0.955,184,0.728,185,0.689,186,0.955,187,0.77,188,0.955,189,0.728,190,0.77,191,0.906,192,1.308,193,1.506,194,0.955,195,0.955,244,1.78,247,0.77,344,1.316,380,1.248,485,2.164,528,3.324,563,1.767,589,1.48,624,1.121,628,3.049,630,3.668,633,1.865,634,1.545,636,1.63,641,2.667,646,2.82,652,2.373,654,1.905,655,1.905,656,2.806,657,3.024,658,1.905,660,1.67,661,2.082,662,1.183,736,3.802,737,3.802,738,3.802,739,2.412,741,3.324,743,3.226,744,4.097,762,2.301,770,2.412,773,2.412,774,2.412,775,2.412,778,2.301,779,3.049,782,2.301,1059,2.039,1097,2.412,1466,4.742,1467,2.996,1470,4.128,1480,2.164,1482,2.996,1631,3.668,1651,2.453,1671,1.67,1732,3.668,1785,2.996,1786,4.827,1787,4.827,1788,5.523,1789,4.827,1790,4.827,1791,3.504,1792,3.504,1793,3.504,1794,3.504,1795,3.504,1796,3.504]],["title/modules/ThemeModule.html",[196,1.417,210,2.245]],["body/modules/ThemeModule.html",[3,0.18,4,0.18,5,0.151,15,0.517,21,1.32,27,0.969,36,0.769,39,0.021,51,0.969,89,0.496,90,0.479,102,0.18,103,0.517,105,1.757,121,0.013,122,0.016,123,0.013,150,0.969,174,1.607,196,1.858,198,2.089,199,2.368,200,4.011,201,2.723,202,4.011,203,3.227,210,4.524,214,3.677,215,2.943,216,2.089,218,2.533,224,3.452,229,4.424,230,3.985,231,4.424,233,4.424,235,4.424,236,4.424,239,4.979,242,4.979,246,4.424,247,1.024,248,4.979,249,3.541,250,3.541,286,3.985,287,3.985,310,3.165,367,4.825,368,3.209,804,4.979,1797,3.985,1798,3.985,1799,3.985,1800,3.985,1801,6.351,1802,4.66,1803,6.351,1804,5.823,1805,5.823,1806,4.66,1807,4.979]],["title/interceptors/TokenInterceptor.html",[213,2.245,1808,3.04]],["body/interceptors/TokenInterceptor.html",[0,2.141,3,0.189,4,0.189,5,0.158,7,0.669,15,0.543,22,0.464,27,1.248,36,0.808,38,0.857,39,0.021,40,0.39,41,0.714,45,4.133,47,3.263,51,1.018,52,4.1,68,4.1,69,5.133,83,4.186,89,0.47,90,0.503,92,5.788,94,2.86,95,2.661,102,0.189,103,0.543,105,2.263,121,0.014,122,0.017,123,0.014,213,3.791,310,3.263,344,1.335,440,5.133,1211,4.561,1745,5.133,1809,4.896,1810,4.186,1811,6.003,1812,6.003,1813,6.003,1814,6.003,1815,6.769,1816,6.493,1817,4.896,1818,4.896,1819,6.003,1820,4.896,1821,6.493,1822,4.896,1823,4.896,1824,4.896,1825,4.896,1826,4.896,1827,4.896]],["title/interfaces/TreeNode.html",[49,0.781,563,1.138]],["body/interfaces/TreeNode.html",[3,0.178,4,0.178,5,0.187,7,0.627,10,1.199,15,0.699,18,1.638,22,0.436,23,0.688,39,0.021,40,0.503,41,0.965,49,1.595,58,1.376,77,1.657,89,0.333,102,0.264,121,0.013,122,0.016,123,0.013,127,1.376,138,2.007,311,1.731,375,3.597,380,1.491,405,1.659,480,1.939,485,2.058,563,2.182,620,2.496,650,2.585,659,1.939,670,2.058,732,2.188,747,3.136,750,2.931,762,2.188,782,2.188,1028,2.682,1059,2.88,1168,3.597,1475,3.136,1478,2.333,1480,2.058,1534,1.939,1651,2.333,1671,2.188,1828,2.682,1829,3.643,1830,3.643,1831,3.984,1832,2.9,1833,2.9,1834,2.682,1835,3.984,1836,2.9,1837,2.9,1838,2.9,1839,2.9]],["title/interfaces/User.html",[10,0.739,49,0.781]],["body/interfaces/User.html",[3,0.18,4,0.18,5,0.151,10,1.212,16,4.002,17,4.582,22,0.443,23,0.695,39,0.021,40,0.576,41,1.091,49,1.396,54,2.537,63,2.537,68,4.204,71,3.382,77,1.756,102,0.246,121,0.013,122,0.016,123,0.013,138,2.119,393,3.888,421,4.204,1519,4.413,1521,2.948,1534,1.971,1535,3.213,1536,5.205,1537,5.205,1538,3.546,1539,3.546]],["title/interfaces/code_interface.html",[49,0.781,397,2.077]],["body/interfaces/code_interface.html",[3,0.196,4,0.196,5,0.164,7,0.694,22,0.482,23,0.732,39,0.021,40,0.56,45,3.497,49,1.506,58,1.056,71,2.581,77,1.743,102,0.237,121,0.014,122,0.017,123,0.014,138,1.541,261,3.337,380,1.313,397,3.587,399,4.719,400,2.967,406,3.497,407,4.227,412,3.208,419,3.859,485,2.277,600,4.004,652,2.733,908,4.719,1331,3.859,1534,2.146,1840,3.859,1841,5.862]],["title/coverage.html",[1842,4.169]],["body/coverage.html",[0,2.253,1,1.726,5,0.117,6,3.098,10,0.753,21,0.753,39,0.021,40,0.289,49,1.53,54,1.969,63,1.969,84,1.53,97,1.099,121,0.01,122,0.014,123,0.01,124,0.378,125,0.753,128,3.098,157,0.712,159,0.753,164,0.796,166,0.712,168,0.712,170,0.753,172,0.796,174,0.796,176,0.753,178,0.796,180,0.753,181,0.712,184,0.753,185,0.712,187,0.796,189,0.753,190,0.796,192,0.796,211,2.116,212,1.365,213,2.288,262,2.494,306,2.288,307,2.288,309,3.4,329,3.752,330,3.752,378,3.098,379,3.098,397,2.116,412,2.288,433,3.098,480,1.53,563,1.159,612,2.494,625,3.098,641,1.624,659,1.53,672,3.098,698,2.494,699,3.098,708,2.116,726,3.098,767,3.752,780,3.098,841,3.098,870,3.718,873,2.116,900,3.098,974,3.098,1027,3.098,1190,4.155,1209,3.098,1300,4.223,1311,3.098,1392,2.752,1460,3.098,1478,1.841,1486,3.098,1535,3.869,1540,3.098,1596,3.098,1629,3.098,1671,1.726,1718,3.098,1740,3.098,1772,3.098,1785,3.098,1800,4.223,1807,3.098,1808,3.098,1810,3.098,1828,3.69,1840,3.752,1842,3.098,1843,3.622,1844,3.622,1845,3.622,1846,7.241,1847,3.622,1848,3.622,1849,4.939,1850,6.035,1851,7.209,1852,3.622,1853,4.939,1854,3.622,1855,4.939,1856,3.622,1857,4.939,1858,3.622,1859,3.622,1860,3.622,1861,3.622,1862,3.622,1863,3.622,1864,3.622,1865,6.518,1866,6.316,1867,6.316,1868,6.316,1869,4.939,1870,4.939,1871,5.619,1872,4.939,1873,3.622,1874,3.622,1875,3.622,1876,3.622,1877,4.939,1878,4.939,1879,5.619,1880,4.939,1881,3.622,1882,3.622,1883,3.622,1884,3.622,1885,3.622,1886,3.622,1887,3.622,1888,4.939,1889,3.622,1890,3.622,1891,3.622,1892,3.622,1893,3.098,1894,3.622,1895,3.622,1896,3.622,1897,3.622,1898,4.939,1899,3.622,1900,3.622]],["title/dependencies.html",[199,2.176,1901,2.957]],["body/dependencies.html",[39,0.021,90,0.506,95,3.276,121,0.014,122,0.017,123,0.014,144,1.273,160,1.476,199,2.503,201,2.878,222,5.153,223,4.578,247,1.082,249,3.743,250,4.578,258,2.878,269,4.578,270,2.503,271,3.111,272,2.878,276,3.111,277,4.213,283,3.392,368,3.392,370,3.743,540,3.743,552,2.208,688,2.503,843,2.208,890,3.743,1308,4.578,1309,5.153,1316,4.213,1902,4.927,1903,7.238,1904,4.927,1905,4.927,1906,4.927,1907,4.927,1908,4.927,1909,4.927,1910,6.511,1911,6.026,1912,4.927,1913,4.927,1914,4.927,1915,4.927,1916,4.927,1917,4.927,1918,4.927,1919,4.927,1920,4.927,1921,4.927,1922,4.927,1923,6.026,1924,4.927,1925,4.927,1926,4.927,1927,4.927,1928,4.927,1929,4.927]],["title/interfaces/fileInterface.html",[49,0.781,480,1.502]],["body/interfaces/fileInterface.html",[3,0.174,4,0.174,5,0.202,7,0.614,10,1.183,15,0.767,18,1.602,22,0.426,23,0.678,39,0.021,40,0.54,41,1.054,49,1.577,58,0.934,77,1.711,89,0.325,102,0.262,121,0.013,122,0.016,123,0.013,127,1.183,138,1.991,311,2.474,375,2.442,380,1.161,405,1.948,480,2.403,485,2.013,563,1.821,620,3.569,650,2.013,659,1.897,670,2.942,732,2.141,747,2.442,750,2.282,762,2.141,782,2.141,1028,3.324,1059,2.969,1168,2.442,1475,3.093,1478,2.282,1480,2.013,1534,1.897,1651,2.282,1671,2.141,1828,2.624,1829,2.837,1830,2.837,1831,2.837,1832,2.837,1833,2.837,1834,3.324,1835,4.146,1836,2.837,1837,2.837,1838,2.837,1839,2.837]],["title/index.html",[22,0.281,1930,2.957,1931,2.957]],["body/index.html",[21,1.315,39,0.018,121,0.015,122,0.018,123,0.015,139,4.641,199,2.714,261,3.439,276,3.374,283,3.678,435,5.41,493,4.058,523,3.439,650,2.394,723,3.374,731,3.374,799,4.807,843,2.394,890,4.058,1308,4.807,1392,5.295,1411,4.568,1632,4.568,1932,6.327,1933,5.342,1934,5.342,1935,5.342,1936,5.342,1937,5.342,1938,5.342,1939,5.342,1940,5.342,1941,5.342,1942,5.342,1943,5.342,1944,5.342,1945,5.342,1946,5.342,1947,5.342,1948,5.342,1949,5.342,1950,5.342,1951,5.342,1952,5.342,1953,5.342,1954,5.342,1955,5.342]],["title/modules.html",[198,2.185]],["body/modules.html",[39,0.018,121,0.016,122,0.018,123,0.016,197,3.822,198,2.488,209,3.506,210,3.506,223,5.361,361,3.822,365,3.506,664,4.002,877,3.822,882,3.506,1353,6.035,1956,7.057,1957,7.341,1958,6.851]],["title/interfaces/output_interface.html",[49,0.781,412,2.245]],["body/interfaces/output_interface.html",[3,0.203,4,0.203,5,0.17,7,0.718,22,0.498,23,0.746,39,0.021,40,0.499,49,1.523,58,1.302,71,3.522,77,1.699,102,0.242,121,0.015,122,0.017,123,0.015,138,2.03,261,3.405,397,3.068,399,3.615,400,3.659,407,4.947,412,3.956,419,4.758,600,3.068,652,2.094,908,3.615,1331,4.758,1534,2.218,1840,3.99,1841,4.491]],["title/overview.html",[1959,4.169]],["body/overview.html",[2,2.434,21,0.866,39,0.021,121,0.012,122,0.015,123,0.012,125,1.436,150,0.866,157,1.185,159,1.253,164,1.324,166,1.185,168,1.358,170,1.253,172,1.324,174,1.518,176,1.253,178,1.324,180,1.253,181,1.185,184,1.253,185,1.185,187,1.324,189,1.253,190,1.324,192,1.324,196,1.661,197,5.236,198,1.867,199,2.117,200,2.631,201,2.434,202,2.631,203,2.117,204,3.563,205,3.563,206,3.563,207,3.563,208,3.563,209,3.806,210,4.284,211,3.521,212,2.271,213,3.806,214,3.424,215,2.631,216,1.867,304,2.265,328,3.165,361,4.822,362,3.563,363,3.563,364,3.563,365,3.806,877,4.755,878,3.563,879,3.563,880,3.563,881,3.563,882,3.806,972,2.869,1534,1.76,1797,3.563,1798,3.563,1799,3.563,1959,3.563,1960,4.167,1961,4.167,1962,4.167,1963,4.167,1964,4.167]],["title/routes.html",[304,2.65]],["body/routes.html",[39,0.019,121,0.016,122,0.019,123,0.016,304,3.201]],["title/interfaces/scoreInterface.html",[49,0.781,1478,1.806]],["body/interfaces/scoreInterface.html",[3,0.182,4,0.182,5,0.189,7,0.642,10,1.325,15,0.776,18,1.675,22,0.445,23,0.697,39,0.021,40,0.466,49,1.6,58,0.976,77,1.69,89,0.34,102,0.265,121,0.013,122,0.016,123,0.013,127,1.216,138,1.775,311,1.77,375,2.553,380,1.214,405,1.682,480,1.983,485,2.105,563,1.872,620,2.553,650,2.105,659,1.983,670,2.105,732,2.238,747,2.553,750,2.386,762,2.238,782,2.238,1028,2.743,1059,2.998,1168,2.553,1475,3.804,1478,2.973,1480,2.105,1534,1.983,1651,2.386,1671,2.238,1828,2.743,1829,2.966,1830,2.966,1831,2.966,1832,2.966,1833,2.966,1834,2.743,1835,4.025,1836,2.966,1837,2.966,1838,3.695,1839,3.695]],["title/interfaces/statementInterface.html",[49,0.781,659,1.502]],["body/interfaces/statementInterface.html",[3,0.178,4,0.178,5,0.187,7,0.629,10,1.202,15,0.772,18,1.642,22,0.437,23,0.689,39,0.021,40,0.528,49,1.595,58,0.957,77,1.685,89,0.334,102,0.264,121,0.013,122,0.016,123,0.013,127,1.202,138,1.753,311,1.736,375,2.503,380,1.19,405,1.962,480,1.945,485,2.064,563,1.85,620,2.503,650,2.064,659,2.441,670,2.064,732,2.754,747,2.503,750,2.34,762,2.195,782,2.195,1028,2.69,1059,3.085,1168,2.503,1475,3.142,1478,2.34,1480,2.59,1534,1.945,1651,2.34,1671,2.195,1828,2.69,1829,2.908,1830,2.908,1831,2.908,1832,2.908,1833,2.908,1834,2.69,1835,4.184,1836,4.184,1837,4.184,1838,2.908,1839,2.908]],["title/injectables/statementsFetchService.html",[0,1.268,641,1.593]],["body/injectables/statementsFetchService.html",[0,1.289,2,1.376,3,0.091,4,0.091,5,0.142,7,0.877,8,1.907,10,1.254,15,0.7,18,1.568,20,2.746,22,0.223,23,0.431,24,0.547,27,1.025,33,0.437,35,3.395,36,1.142,38,1.105,39,0.021,40,0.351,41,0.92,42,4.114,49,0.794,51,1.285,52,1.488,57,1.836,58,1.454,61,2.283,78,1.93,79,1.93,80,4.672,85,1.79,89,0.407,90,0.242,94,1.376,95,1.281,97,1.914,100,1.281,101,1.056,102,0.091,103,0.261,105,2.33,108,2.084,121,0.007,122,0.01,123,0.007,149,1.622,182,0.839,247,0.518,356,2.702,380,1.51,384,2.746,387,2.746,388,3.746,393,2.111,395,2.681,405,1.264,409,2.746,410,1.79,411,1.622,413,1.79,414,1.79,415,2.746,416,1.622,417,1.622,421,2.283,422,1.79,423,1.622,424,1.79,425,1.79,426,1.622,427,1.622,428,1.79,429,1.79,431,3.341,451,2.488,452,3.662,464,2.015,465,4.151,474,2.746,485,1.62,493,2.746,508,3.395,518,4.217,528,3.395,562,2.015,564,2.488,566,2.015,573,1.488,574,2.015,575,3.091,576,2.015,578,5.156,579,5.156,580,5.156,626,2.283,630,2.746,631,2.283,641,1.62,646,3.522,650,2.384,732,1.722,742,3.091,757,4.345,782,1.722,938,2.746,1017,2.746,1176,2.746,1230,4.484,1417,4.217,1475,2.681,1480,3.041,1630,4.581,1631,2.746,1651,2.506,1732,2.746,1834,2.881,1893,2.015,1965,3.614,1966,3.614,1967,3.614,1968,3.614,1969,3.614,1970,3.614,1971,3.614,1972,3.614,1973,3.614,1974,4.397,1975,4.397,1976,4.397,1977,4.397,1978,4.397,1979,4.397,1980,4.397,1981,4.397,1982,3.614,1983,3.614,1984,3.614,1985,3.614,1986,3.614,1987,3.614,1988,3.614,1989,3.614,1990,3.614,1991,4.397,1992,5.319,1993,5.319,1994,3.614,1995,3.614,1996,2.356,1997,3.614,1998,6.03,1999,3.614,2000,2.356,2001,3.614,2002,3.614,2003,2.356,2004,4.931,2005,3.614,2006,2.356,2007,3.614,2008,2.356,2009,3.614,2010,4.931,2011,3.614,2012,2.356,2013,3.614,2014,2.356,2015,2.356,2016,3.614,2017,3.614,2018,3.614,2019,3.614,2020,3.614,2021,2.356,2022,3.614,2023,2.356,2024,3.614,2025,2.356,2026,3.614,2027,3.614,2028,2.356,2029,3.614,2030,2.356,2031,3.614,2032,2.356,2033,3.614,2034,2.356,2035,3.614,2036,2.356,2037,2.356,2038,2.356,2039,2.356,2040,2.356,2041,2.356,2042,2.356,2043,2.356,2044,4.931,2045,2.356,2046,2.356,2047,2.356]],["title/interfaces/submissionInterface.html",[49,0.781,1671,1.694]],["body/interfaces/submissionInterface.html",[3,0.18,4,0.18,5,0.188,7,0.635,10,1.319,15,0.703,18,2.37,22,0.441,23,0.693,39,0.021,40,0.506,49,1.598,58,0.966,77,1.718,89,0.337,102,0.265,121,0.013,122,0.016,123,0.013,127,1.208,138,1.763,311,1.751,375,2.526,380,1.201,405,1.671,480,1.963,485,2.605,563,1.86,620,2.526,650,2.082,659,1.963,670,2.082,732,2.214,747,2.526,750,2.361,762,3.167,782,3.167,1028,2.714,1059,2.89,1168,2.526,1475,3.159,1478,2.361,1480,2.082,1534,1.963,1651,2.953,1671,2.77,1828,2.714,1829,2.935,1830,2.935,1831,2.935,1832,2.935,1833,2.935,1834,2.714,1835,4.197,1836,2.935,1837,2.935,1838,2.935,1839,2.935]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/fileInterface.html":{},"index.html":{},"modules.html":{},"interfaces/output_interface.html":{},"overview.html":{},"routes.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["0",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0!important",{"_index":1278,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.10.2",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":1456,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["0c1842",{"_index":1708,"title":{},"body":{"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{}}}],["0px",{"_index":696,"title":{},"body":{"components/ConfirmDialog.html":{},"components/FilelistComponent.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["0rem",{"_index":837,"title":{},"body":{"components/ContestsComponent.html":{}}}],["1",{"_index":552,"title":{},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["1.0.0",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["1.0.7",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":1281,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1.75rem",{"_index":1286,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1/1",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1963,"title":{},"body":{"overview.html":{}}}],["10.2.1",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["10.2.5",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["1000",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"components/MainComponent.html":{}}}],["1000000",{"_index":1588,"title":{},"body":{"components/MainComponent.html":{}}}],["1000000000",{"_index":1585,"title":{},"body":{"components/MainComponent.html":{}}}],["1000px",{"_index":1453,"title":{},"body":{"components/HomeComponent.html":{}}}],["100vh",{"_index":1422,"title":{},"body":{"components/HomeComponent.html":{}}}],["10px",{"_index":1185,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["11.0.0",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["11/20",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":1164,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["13/25",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["142",{"_index":1206,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["15",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":1432,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["17px",{"_index":1449,"title":{},"body":{"components/HomeComponent.html":{}}}],["18",{"_index":974,"title":{},"body":{"components/EditorComponent.html":{},"coverage.html":{}}}],["19",{"_index":1961,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":1290,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1rem",{"_index":1186,"title":{},"body":{"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["2",{"_index":972,"title":{},"body":{"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["2.0.3",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["2/11",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":1955,"title":{},"body":{"index.html":{}}}],["20px",{"_index":671,"title":{},"body":{"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["23",{"_index":1196,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["24",{"_index":1964,"title":{},"body":{"overview.html":{}}}],["241",{"_index":1201,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["247",{"_index":1202,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["25",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":1446,"title":{},"body":{"components/HomeComponent.html":{}}}],["2px",{"_index":1208,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["3",{"_index":1021,"title":{},"body":{"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["3/19",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1195,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["33",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["33.333",{"_index":1193,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["37",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["4.5.3",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1189,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["40px",{"_index":1444,"title":{},"body":{"components/HomeComponent.html":{}}}],["44",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1962,"title":{},"body":{"overview.html":{}}}],["50",{"_index":1190,"title":{},"body":{"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["500px",{"_index":1191,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["52",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["53px",{"_index":1436,"title":{},"body":{"components/HomeComponent.html":{}}}],["55",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":1299,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProblemComponent.html":{}}}],["6.2.1",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":1194,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["60px",{"_index":1437,"title":{},"body":{"components/HomeComponent.html":{}}}],["66",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1960,"title":{},"body":{"overview.html":{}}}],["70px",{"_index":1431,"title":{},"body":{"components/HomeComponent.html":{}}}],["8/18",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["8/21",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1458,"title":{},"body":{"components/HomeComponent.html":{}}}],["800px",{"_index":1442,"title":{},"body":{"components/HomeComponent.html":{}}}],["900px",{"_index":1430,"title":{},"body":{"components/HomeComponent.html":{}}}],["_b",{"_index":1160,"title":{},"body":{"components/FilelistComponent.html":{}}}],["_codeservice",{"_index":913,"title":{},"body":{"components/EditorComponent.html":{}}}],["_connect",{"_index":1046,"title":{},"body":{"components/FilelistComponent.html":{}}}],["_connect.setcallback",{"_index":1101,"title":{},"body":{"components/FilelistComponent.html":{}}}],["_data",{"_index":589,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["_data[\"contest\"][\"contest",{"_index":816,"title":{},"body":{"components/ContestsComponent.html":{}}}],["_data[\"contest\"][\"sec",{"_index":819,"title":{},"body":{"components/ContestsComponent.html":{}}}],["_data[\"contest\"][\"status",{"_index":817,"title":{},"body":{"components/ContestsComponent.html":{}}}],["_data[\"contests",{"_index":771,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["_data[\"data",{"_index":597,"title":{},"body":{"injectables/CodefetchService.html":{},"components/ProblemComponent.html":{}}}],["_data[\"file_id",{"_index":622,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["_data[\"message",{"_index":713,"title":{},"body":{"injectables/ConnectpartService.html":{},"components/NewfiledialogComponent.html":{}}}],["_data[\"problem\"][\"memory_limit",{"_index":1680,"title":{},"body":{"components/ProblemComponent.html":{}}}],["_data[\"problem\"][\"name",{"_index":1675,"title":{},"body":{"components/ProblemComponent.html":{}}}],["_data[\"problem\"][\"statement",{"_index":1677,"title":{},"body":{"components/ProblemComponent.html":{}}}],["_data[\"problem\"][\"time_limit",{"_index":1682,"title":{},"body":{"components/ProblemComponent.html":{}}}],["_data[\"problems",{"_index":1738,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["_data[\"scores",{"_index":1483,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["_data[\"status\"][\"message",{"_index":1692,"title":{},"body":{"components/ProblemComponent.html":{}}}],["_data[\"status\"][\"passed",{"_index":1693,"title":{},"body":{"components/ProblemComponent.html":{}}}],["_data[\"structure",{"_index":1118,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["_data[\"submissions",{"_index":1795,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["_dialogservice",{"_index":468,"title":{},"body":{"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["_fileservice",{"_index":702,"title":{},"body":{"injectables/ConnectpartService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{}}}],["_route",{"_index":794,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["_sd",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/HeaderComponent.html":{}}}],["_stmtservice",{"_index":640,"title":{},"body":{"components/CompetingComponent.html":{}}}],["_url",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{}}}],["absolute",{"_index":1427,"title":{},"body":{"components/HomeComponent.html":{}}}],["abstracting",{"_index":1971,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["accepted",{"_index":1731,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["access",{"_index":1342,"title":{},"body":{"components/HomeComponent.html":{}}}],["accessing",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["accessors",{"_index":910,"title":{},"body":{"components/EditorComponent.html":{}}}],["account",{"_index":1531,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ace",{"_index":890,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{},"index.html":{}}}],["aceeditormodule",{"_index":889,"title":{},"body":{"modules/DashboardModule.html":{}}}],["action",{"_index":1056,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["action.substring(0",{"_index":1103,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["activatedroute",{"_index":467,"title":{},"body":{"injectables/CodefetchService.html":{},"components/ContestsComponent.html":{},"components/HeaderComponent.html":{},"components/ProblemComponent.html":{}}}],["active",{"_index":483,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{}}}],["activefileid",{"_index":1031,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["activefilename",{"_index":1032,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["activefilepath",{"_index":1033,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["activerouter",{"_index":466,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["actual_component",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["add",{"_index":1155,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["address",{"_index":1758,"title":{},"body":{"components/RegisterComponent.html":{}}}],["adds",{"_index":1231,"title":{},"body":{"components/HeaderComponent.html":{}}}],["afterviewinit",{"_index":903,"title":{},"body":{"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["again",{"_index":428,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["against",{"_index":1372,"title":{},"body":{"components/HomeComponent.html":{}}}],["agarwal",{"_index":1949,"title":{},"body":{"index.html":{}}}],["agree",{"_index":1762,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert(\"oh",{"_index":1796,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["algorithm",{"_index":1364,"title":{},"body":{"components/HomeComponent.html":{}}}],["aliceblue",{"_index":1433,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":667,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["allcolumns",{"_index":1034,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["allows",{"_index":1351,"title":{},"body":{"components/HomeComponent.html":{}}}],["along",{"_index":1401,"title":{},"body":{"components/HomeComponent.html":{}}}],["already",{"_index":1765,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alwaysfail",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["angular",{"_index":1308,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular's",{"_index":1933,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":368,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/statementsFetchService.html":{}}}],["angular/compiler",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{},"injectables/statementsFetchService.html":{}}}],["angular/forms",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angularjs",{"_index":1400,"title":{},"body":{"components/HomeComponent.html":{}}}],["ankit",{"_index":1945,"title":{},"body":{"index.html":{}}}],["another",{"_index":1367,"title":{},"body":{"components/HomeComponent.html":{}}}],["anything",{"_index":1379,"title":{},"body":{"components/HomeComponent.html":{}}}],["api",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"injectables/statementsFetchService.html":{}}}],["api.compile",{"_index":408,"title":{},"body":{"injectables/CodeService.html":{}}}],["api.createfile",{"_index":543,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["api.deletefile",{"_index":545,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["api.getcontest",{"_index":2026,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.getcontests",{"_index":2024,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.getcontestscores",{"_index":2022,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.getdetails",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{}}}],["api.getfiles",{"_index":547,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["api.getfolders",{"_index":549,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["api.getproblem",{"_index":2029,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.getproblems",{"_index":2027,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.getscores",{"_index":2031,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.getstructure",{"_index":557,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["api.getsubmissions",{"_index":2033,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.login",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{}}}],["api.logout",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{}}}],["api.readfile",{"_index":541,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["api.register",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{}}}],["api.serverurl",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["api.service",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["api.service.ts",{"_index":1500,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["api.submitproblem",{"_index":2035,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.ts",{"_index":1970,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["api.updatefile",{"_index":560,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["app",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["app.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":125,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{}}}],["appmodule",{"_index":197,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":209,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arena",{"_index":1383,"title":{},"body":{"components/HomeComponent.html":{}}}],["arguments",{"_index":404,"title":{},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{}}}],["aria",{"_index":1528,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ask",{"_index":477,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["assets/particles.json",{"_index":1314,"title":{},"body":{"components/HomeComponent.html":{}}}],["async",{"_index":1039,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["asynchronous",{"_index":1936,"title":{},"body":{"index.html":{}}}],["attaches",{"_index":1812,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["attachment",{"_index":1423,"title":{},"body":{"components/HomeComponent.html":{}}}],["attacks",{"_index":1373,"title":{},"body":{"components/HomeComponent.html":{}}}],["audiowide",{"_index":1288,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["auth",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{}}}],["authentication",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["authguard",{"_index":306,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"coverage.html":{}}}],["authguard2",{"_index":307,"title":{"guards/AuthGuard2.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"coverage.html":{}}}],["authmodule",{"_index":361,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authresult",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{}}}],["authresult.success",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{}}}],["authresult.token",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{}}}],["authroutingmodule",{"_index":365,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["auto",{"_index":1277,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["available",{"_index":664,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/HomeComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemlistComponent.html":{},"modules.html":{}}}],["await",{"_index":1131,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["b",{"_index":1593,"title":{},"body":{"components/MainComponent.html":{}}}],["backend",{"_index":395,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"injectables/statementsFetchService.html":{}}}],["background",{"_index":1181,"title":{},"body":{"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{}}}],["bad",{"_index":424,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["bar",{"_index":1198,"title":{},"body":{"components/FilelistComponent.html":{}}}],["based",{"_index":1411,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["basethemevariables",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["bash",{"_index":1023,"title":{},"body":{"components/EditorComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{}}}],["basic",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["basically",{"_index":1654,"title":{},"body":{"components/ProblemComponent.html":{}}}],["beautiful",{"_index":1340,"title":{},"body":{"components/HomeComponent.html":{}}}],["begin",{"_index":827,"title":{},"body":{"components/ContestsComponent.html":{}}}],["belonging",{"_index":510,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["between",{"_index":1271,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bindkey",{"_index":980,"title":{},"body":{"components/EditorComponent.html":{}}}],["black",{"_index":1203,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["block",{"_index":1025,"title":{},"body":{"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["body",{"_index":1448,"title":{},"body":{"components/HomeComponent.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"interfaces/SignUpForm.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["bootstrap",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/scss/mixins/breakpoints",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["bora",{"_index":1944,"title":{},"body":{"index.html":{}}}],["border",{"_index":1183,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["both",{"_index":1461,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["bottom",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["bottom:5px",{"_index":1712,"title":{},"body":{"components/ProblemComponent.html":{}}}],["box",{"_index":673,"title":{},"body":{"components/ConfirmDialog.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/RenamefileDialog.html":{}}}],["boxes",{"_index":651,"title":{},"body":{"components/CompetingComponent.html":{}}}],["breakpoint",{"_index":1296,"title":{},"body":{"components/HeaderComponent.html":{}}}],["browse",{"_index":1957,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":749,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{}}}],["builder",{"_index":748,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ProblemlistComponent.html":{}}}],["building",{"_index":1049,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["buildtable",{"_index":700,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["built",{"_index":1399,"title":{},"body":{"components/HomeComponent.html":{}}}],["button",{"_index":688,"title":{},"body":{"components/ConfirmDialog.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewfiledialogComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"dependencies.html":{}}}],["button[nbtreegridrowtoggle",{"_index":1180,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["buttons",{"_index":1775,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["c",{"_index":723,"title":{},"body":{"injectables/ConnectpartService.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{},"index.html":{}}}],["c_cpp",{"_index":987,"title":{},"body":{"components/EditorComponent.html":{}}}],["calc(#{nb",{"_index":1273,"title":{},"body":{"components/HeaderComponent.html":{}}}],["calc(50",{"_index":1455,"title":{},"body":{"components/HomeComponent.html":{}}}],["callback",{"_index":687,"title":{},"body":{"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/RenamefileDialog.html":{}}}],["called",{"_index":538,"title":{},"body":{"injectables/CodefetchService.html":{},"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{}}}],["calls",{"_index":1229,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProblemComponent.html":{}}}],["can't",{"_index":503,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["canactivate",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["cancel",{"_index":681,"title":{},"body":{"components/ConfirmDialog.html":{},"components/FilelistComponent.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["canvas",{"_index":1320,"title":{},"body":{"components/HomeComponent.html":{}}}],["card",{"_index":1445,"title":{},"body":{"components/HomeComponent.html":{}}}],["case",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["castable",{"_index":512,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["catcherror",{"_index":410,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["catcherror((error):any",{"_index":578,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["catcherror(this.handleerror",{"_index":432,"title":{},"body":{"injectables/CodeService.html":{}}}],["caution",{"_index":500,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["cd",{"_index":1494,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["center",{"_index":668,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["challenging",{"_index":1385,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":525,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{}}}],["changedetectorref",{"_index":1495,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["changefile(id",{"_index":718,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["changeopenedfile",{"_index":454,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["changeopenedfile(f",{"_index":479,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["changes",{"_index":482,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["changing",{"_index":1375,"title":{},"body":{"components/HomeComponent.html":{}}}],["characters",{"_index":1525,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":1015,"title":{},"body":{"components/EditorComponent.html":{},"components/HomeComponent.html":{}}}],["checked",{"_index":1599,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["child",{"_index":786,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["child2",{"_index":1635,"title":{},"body":{"components/ProblemComponent.html":{}}}],["children",{"_index":375,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["choose",{"_index":551,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{}}}],["chosen",{"_index":1655,"title":{},"body":{"components/ProblemComponent.html":{}}}],["class",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"injectables/statementsFetchService.html":{}}}],["class=\"links",{"_index":1527,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cli",{"_index":906,"title":{},"body":{"components/EditorComponent.html":{}}}],["click",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"dependencies.html":{}}}],["clicked",{"_index":689,"title":{},"body":{"components/ConfirmDialog.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["clicking",{"_index":756,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["clicks",{"_index":1498,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["clock",{"_index":1390,"title":{},"body":{"components/HomeComponent.html":{}}}],["cloned",{"_index":1823,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["close",{"_index":1706,"title":{},"body":{"components/ProblemComponent.html":{}}}],["cloud",{"_index":1410,"title":{},"body":{"components/HomeComponent.html":{}}}],["cluster_appmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":878,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_bootstrap",{"_index":881,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":880,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":879,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_thememodule",{"_index":1797,"title":{},"body":{"modules/ThemeModule.html":{},"overview.html":{}}}],["cluster_thememodule_declarations",{"_index":1798,"title":{},"body":{"modules/ThemeModule.html":{},"overview.html":{}}}],["cluster_thememodule_exports",{"_index":1799,"title":{},"body":{"modules/ThemeModule.html":{},"overview.html":{}}}],["code",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"injectables/CodeService.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"interfaces/code_interface.html":{},"index.html":{},"interfaces/output_interface.html":{}}}],["code_data",{"_index":907,"title":{},"body":{"components/EditorComponent.html":{}}}],["code_interface",{"_index":397,"title":{"interfaces/code_interface.html":{}},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"interfaces/output_interface.html":{}}}],["codefetch",{"_index":1605,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["codefetch.service",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConnectpartService.html":{},"components/NewfiledialogComponent.html":{}}}],["codefetchservice",{"_index":212,"title":{"injectables/CodefetchService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["codefetchservice#createfile",{"_index":1126,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["codefetchservice#readfile",{"_index":1581,"title":{},"body":{"components/MainComponent.html":{}}}],["codefetchservice#readfiledata",{"_index":585,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["codefetchservice#renamefile",{"_index":1135,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["codefetchservice#updatefile",{"_index":994,"title":{},"body":{"components/EditorComponent.html":{}}}],["codefetchservice/createfile",{"_index":1061,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["codefetchservice/createfile]{@link",{"_index":1125,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["codefetchservice/readfile",{"_index":1552,"title":{},"body":{"components/MainComponent.html":{}}}],["codefetchservice/readfile]{@link",{"_index":1580,"title":{},"body":{"components/MainComponent.html":{}}}],["codefetchservice/renamefile",{"_index":1081,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["codefetchservice/renamefile]{@link",{"_index":1134,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["codefetchservice/updatefile",{"_index":930,"title":{},"body":{"components/EditorComponent.html":{}}}],["codefetchservice/updatefile]{@link",{"_index":993,"title":{},"body":{"components/EditorComponent.html":{}}}],["codeinterface",{"_index":531,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["codeservice",{"_index":211,"title":{"injectables/CodeService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CodeService.html":{},"components/EditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["codeservice#postdata",{"_index":999,"title":{},"body":{"components/EditorComponent.html":{}}}],["codeservice/postdata",{"_index":926,"title":{},"body":{"components/EditorComponent.html":{}}}],["codeservice/postdata]{@link",{"_index":998,"title":{},"body":{"components/EditorComponent.html":{}}}],["codeurl",{"_index":441,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["coding",{"_index":1327,"title":{},"body":{"components/HomeComponent.html":{}}}],["col",{"_index":1454,"title":{},"body":{"components/HomeComponent.html":{}}}],["color",{"_index":1199,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{}}}],["column",{"_index":778,"title":{},"body":{"components/ContestlistComponent.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["columns",{"_index":1425,"title":{},"body":{"components/HomeComponent.html":{}}}],["command",{"_index":399,"title":{},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["common",{"_index":390,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{}}}],["commonmodule",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{}}}],["communication",{"_index":1940,"title":{},"body":{"index.html":{}}}],["comp",{"_index":1782,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["compat",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["compete",{"_index":896,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/HeaderComponent.html":{}}}],["competing",{"_index":626,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{},"injectables/statementsFetchService.html":{}}}],["competing'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["competing.component.html",{"_index":637,"title":{},"body":{"components/CompetingComponent.html":{}}}],["competing.component.scss",{"_index":635,"title":{},"body":{"components/CompetingComponent.html":{}}}],["competing/competing.component",{"_index":891,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["competingcomponent",{"_index":157,"title":{"components/CompetingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["compilation",{"_index":382,"title":{},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{}}}],["compile",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"injectables/CodeService.html":{},"components/EditorComponent.html":{},"coverage.html":{}}}],["complete",{"_index":1361,"title":{},"body":{"components/HomeComponent.html":{}}}],["compodoc",{"_index":1952,"title":{},"body":{"index.html":{}}}],["component",{"_index":124,"title":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["components",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["conditions",{"_index":1764,"title":{},"body":{"components/RegisterComponent.html":{}}}],["config",{"_index":790,"title":{},"body":{"components/ContestsComponent.html":{},"components/HomeComponent.html":{}}}],["confirm",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["confirmation",{"_index":478,"title":{},"body":{"injectables/CodefetchService.html":{},"components/RegisterComponent.html":{}}}],["confirmdialog",{"_index":159,"title":{"components/ConfirmDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmdialog.scss",{"_index":677,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["confirmdialog/confirmdialog.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"injectables/CodefetchService.html":{}}}],["connect",{"_index":434,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/FilelistComponent.html":{},"components/LoginComponent.html":{}}}],["connectpart.service",{"_index":1099,"title":{},"body":{"components/FilelistComponent.html":{}}}],["connectpartservice",{"_index":698,"title":{"injectables/ConnectpartService.html":{}},"body":{"injectables/ConnectpartService.html":{},"components/FilelistComponent.html":{},"coverage.html":{}}}],["console.error",{"_index":418,"title":{},"body":{"injectables/CodeService.html":{},"injectables/ConnectpartService.html":{},"components/NewfiledialogComponent.html":{}}}],["console.error('an",{"_index":415,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["console.log(\"cancel",{"_index":1625,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["console.log(\"error",{"_index":1255,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log(\"getting",{"_index":966,"title":{},"body":{"components/EditorComponent.html":{}}}],["console.log(\"hhh",{"_index":1485,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["console.log(\"mu",{"_index":1696,"title":{},"body":{"components/ProblemComponent.html":{}}}],["console.log(\"newfile",{"_index":1128,"title":{},"body":{"components/FilelistComponent.html":{}}}],["console.log(\"rename",{"_index":1136,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/RenamefileDialog.html":{}}}],["console.log(\"submit",{"_index":1627,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["console.log(\"success",{"_index":714,"title":{},"body":{"injectables/ConnectpartService.html":{},"components/NewfiledialogComponent.html":{}}}],["console.log(\"uu",{"_index":1737,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["console.log('callback",{"_index":1315,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(_data",{"_index":619,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/ContestsComponent.html":{},"components/LeaderboardComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{}}}],["console.log(_data[\"data",{"_index":1618,"title":{},"body":{"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{}}}],["console.log(_data[\"data\"]+\"a",{"_index":593,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["console.log(_data[\"message",{"_index":603,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["console.log(_data[\"structure",{"_index":1573,"title":{},"body":{"components/MainComponent.html":{}}}],["console.log(data",{"_index":1512,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(data[2",{"_index":1133,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["console.log(error",{"_index":1020,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(eval(this.editor.value",{"_index":991,"title":{},"body":{"components/EditorComponent.html":{}}}],["console.log(id",{"_index":598,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["console.log(index",{"_index":1166,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["console.log(json.parse(error.error.errors",{"_index":1749,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this._fileservice.openedfiledata",{"_index":967,"title":{},"body":{"components/EditorComponent.html":{}}}],["console.log(this.activefileid",{"_index":1142,"title":{},"body":{"components/FilelistComponent.html":{}}}],["console.log(this.code_data",{"_index":1009,"title":{},"body":{"components/EditorComponent.html":{}}}],["console.log(this.config",{"_index":829,"title":{},"body":{"components/ContestsComponent.html":{}}}],["console.log(this.data",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["console.log(this.dir",{"_index":1622,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["console.log(this.editor.value",{"_index":990,"title":{},"body":{"components/EditorComponent.html":{}}}],["console.log(this.input",{"_index":992,"title":{},"body":{"components/EditorComponent.html":{}}}],["console.log(this.statement",{"_index":1678,"title":{},"body":{"components/ProblemComponent.html":{}}}],["console.log(this.submissiondata",{"_index":772,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ProblemlistComponent.html":{}}}],["console.log(tserve",{"_index":574,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["const",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["constructor(_fileservice",{"_index":912,"title":{},"body":{"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["constructor(_route",{"_index":792,"title":{},"body":{"components/ContestsComponent.html":{}}}],["constructor(_sd",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["constructor(api",{"_index":1491,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(datasourcebuilder",{"_index":1045,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["constructor(http",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{}}}],["constructor(location",{"_index":701,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["constructor(private",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"components/CompetingComponent.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["constructor(protected",{"_index":692,"title":{},"body":{"components/ConfirmDialog.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["constructor(public",{"_index":566,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["constructor(ref",{"_index":682,"title":{},"body":{"components/ConfirmDialog.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["constructor(router",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ContestlistComponent.html":{},"components/DashboardComponent.html":{},"components/ProblemlistComponent.html":{}}}],["constructor(rt",{"_index":1304,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(sidebarservice",{"_index":638,"title":{},"body":{"components/CompetingComponent.html":{},"components/HeaderComponent.html":{}}}],["constructor(stmtservice",{"_index":1467,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["constructor(toastrservice",{"_index":464,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["contain",{"_index":1522,"title":{},"body":{"components/LoginComponent.html":{}}}],["container",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/ProblemComponent.html":{}}}],["containing",{"_index":511,"title":{},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{}}}],["contains",{"_index":401,"title":{},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{},"components/RegisterComponent.html":{}}}],["content",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["contest",{"_index":757,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/ProblemlistComponent.html":{},"injectables/statementsFetchService.html":{}}}],["contest/problem",{"_index":797,"title":{},"body":{"components/ContestsComponent.html":{},"components/LeaderboardComponent.html":{}}}],["contestid",{"_index":1722,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["contestlist",{"_index":733,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{}}}],["contestlist'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["contestlist.component.html",{"_index":735,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["contestlist.component.scss",{"_index":734,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["contestlist/contestlist.component",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["contestlistcomponent",{"_index":164,"title":{"components/ContestlistComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contests",{"_index":631,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/LeaderboardComponent.html":{},"injectables/statementsFetchService.html":{}}}],["contests'},{'name",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["contests.component.html",{"_index":789,"title":{},"body":{"components/ContestsComponent.html":{}}}],["contests.component.scss",{"_index":788,"title":{},"body":{"components/ContestsComponent.html":{}}}],["contests/contests.component",{"_index":893,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["contests/problem",{"_index":1469,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["contests/problems",{"_index":647,"title":{},"body":{"components/CompetingComponent.html":{}}}],["contestscomponent",{"_index":166,"title":{"components/ContestsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contestscoreurl",{"_index":1974,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["contestsurl",{"_index":1975,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["contesturl",{"_index":1976,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["context",{"_index":612,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"coverage.html":{}}}],["control",{"_index":644,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/HeaderComponent.html":{},"components/ProblemComponent.html":{}}}],["core",{"_index":1932,"title":{},"body":{"index.html":{}}}],["corporate_theme",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["cosmic_theme",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["count",{"_index":791,"title":{},"body":{"components/ContestsComponent.html":{}}}],["countdown",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"components/ContestsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["countdowncomponent",{"_index":801,"title":{},"body":{"components/ContestsComponent.html":{}}}],["countdownmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["cover",{"_index":1419,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1842,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":1349,"title":{},"body":{"components/HomeComponent.html":{}}}],["create",{"_index":489,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["created",{"_index":493,"title":{},"body":{"injectables/CodefetchService.html":{},"index.html":{},"injectables/statementsFetchService.html":{}}}],["createfile",{"_index":455,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["createfile(parent",{"_index":486,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["createurl",{"_index":442,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["ctrl",{"_index":981,"title":{},"body":{"components/EditorComponent.html":{}}}],["current",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"injectables/statementsFetchService.html":{}}}],["currently",{"_index":632,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["cursor",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["custom_elements_schema",{"_index":885,"title":{},"body":{"modules/DashboardModule.html":{}}}],["customcolumn",{"_index":1035,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["d\"}).onclose.pipe(map(res",{"_index":613,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["danger",{"_index":573,"title":{},"body":{"injectables/CodefetchService.html":{},"components/LoginComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{},"injectables/statementsFetchService.html":{}}}],["dark",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{}}}],["dark_theme",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["dashboard",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/CompetingComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/RegisterComponent.html":{}}}],["dashboard'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["dashboard.component",{"_index":887,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["dashboard.component.html",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/competing/competing.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/contests/contests.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/dashboard.component",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/main",{"_index":899,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["dashboard/main/main.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/problem/problem.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboardcomponent",{"_index":168,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardmodule",{"_index":877,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodule",{"_index":882,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["data).pipe",{"_index":2044,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["database",{"_index":1084,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["datasource",{"_index":1036,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["datasourcebuilder",{"_index":1048,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["data}).pipe",{"_index":601,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["deals",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{}}}],["declarations",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{},"overview.html":{}}}],["declare",{"_index":1310,"title":{},"body":{"components/HomeComponent.html":{}}}],["decoration",{"_index":1283,"title":{},"body":{"components/HeaderComponent.html":{}}}],["decorators",{"_index":802,"title":{},"body":{"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["deep",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["default",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["default_theme",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["defaultcolumns",{"_index":1544,"title":{},"body":{"components/MainComponent.html":{}}}],["defined",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"injectables/statementsFetchService.html":{}}}],["del",{"_index":1110,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["delay",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["delete",{"_index":475,"title":{},"body":{"injectables/CodefetchService.html":{},"components/ConfirmDialog.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["deleted",{"_index":502,"title":{},"body":{"injectables/CodefetchService.html":{},"components/ConfirmDialog.html":{}}}],["deletefile",{"_index":456,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["deletefile(id",{"_index":498,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["deleteurl",{"_index":443,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["deleting",{"_index":1380,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletion",{"_index":675,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["dependencies",{"_index":199,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["destroy",{"_index":1214,"title":{},"body":{"components/HeaderComponent.html":{}}}],["details",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"components/EditorComponent.html":{},"components/HeaderComponent.html":{}}}],["development",{"_index":1328,"title":{},"body":{"components/HomeComponent.html":{}}}],["device",{"_index":1336,"title":{},"body":{"components/HomeComponent.html":{}}}],["dialog",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["dialogs",{"_index":1643,"title":{},"body":{"components/ProblemComponent.html":{}}}],["different",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{},"injectables/statementsFetchService.html":{}}}],["diplays",{"_index":1503,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dir",{"_index":1600,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["direction",{"_index":1440,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["directives",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["directories",{"_index":509,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["directory",{"_index":492,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["dirlist",{"_index":1601,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["display",{"_index":471,"title":{},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["displayed",{"_index":949,"title":{},"body":{"components/EditorComponent.html":{},"components/FilelistComponent.html":{}}}],["displaying",{"_index":1237,"title":{},"body":{"components/HeaderComponent.html":{},"components/NewfiledialogComponent.html":{}}}],["displays",{"_index":1073,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["displayvalue(row.data[column",{"_index":1594,"title":{},"body":{"components/MainComponent.html":{}}}],["displayvalue(val",{"_index":1582,"title":{},"body":{"components/MainComponent.html":{}}}],["displyed",{"_index":674,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["docs",{"_index":1330,"title":{},"body":{"components/HomeComponent.html":{}}}],["document",{"_index":1457,"title":{},"body":{"components/HomeComponent.html":{}}}],["document.queryselector(\".particles",{"_index":1319,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1392,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["doing",{"_index":1474,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["dollar",{"_index":1395,"title":{},"body":{"components/HomeComponent.html":{}}}],["dom",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["don't",{"_index":1347,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["don\\'t",{"_index":1459,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["double",{"_index":1068,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["down",{"_index":957,"title":{},"body":{"components/EditorComponent.html":{}}}],["down(is",{"_index":1298,"title":{},"body":{"components/HeaderComponent.html":{}}}],["down(sm",{"_index":1297,"title":{},"body":{"components/HeaderComponent.html":{}}}],["drf",{"_index":1966,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["drop",{"_index":956,"title":{},"body":{"components/EditorComponent.html":{}}}],["dynamic",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":825,"title":{},"body":{"components/ContestsComponent.html":{},"components/HomeComponent.html":{}}}],["each",{"_index":1787,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["edit",{"_index":1153,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["editor",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"dependencies.html":{},"index.html":{}}}],["editor'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["editor.component.html",{"_index":905,"title":{},"body":{"components/EditorComponent.html":{}}}],["editor.component.scss",{"_index":904,"title":{},"body":{"components/EditorComponent.html":{}}}],["editor/editor.component",{"_index":888,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["editorcomponent",{"_index":170,"title":{"components/EditorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["effective",{"_index":1939,"title":{},"body":{"index.html":{}}}],["el",{"_index":1318,"title":{},"body":{"components/HomeComponent.html":{}}}],["el.scrollintoview({behavior:\"smooth",{"_index":1324,"title":{},"body":{"components/HomeComponent.html":{}}}],["el.setattribute(\"height",{"_index":1321,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["element:hover",{"_index":1707,"title":{},"body":{"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{}}}],["email",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"interfaces/LoginForm.html":{},"components/RegisterComponent.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{}}}],["enablebasicautocompletion",{"_index":975,"title":{},"body":{"components/EditorComponent.html":{}}}],["end",{"_index":823,"title":{},"body":{"components/ContestsComponent.html":{},"components/HomeComponent.html":{}}}],["ended",{"_index":826,"title":{},"body":{"components/ContestsComponent.html":{}}}],["ending",{"_index":763,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["endpoints",{"_index":1967,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["enter",{"_index":1064,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{}}}],["entries",{"_index":750,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["environment",{"_index":767,"title":{},"body":{"components/ContestlistComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["err",{"_index":1254,"title":{},"body":{"components/HeaderComponent.html":{}}}],["error",{"_index":356,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/RegisterComponent.html":{},"injectables/statementsFetchService.html":{}}}],["error.error",{"_index":413,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["error.error.message",{"_index":417,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/LoginComponent.html":{},"injectables/statementsFetchService.html":{}}}],["error.message",{"_index":422,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["error.status",{"_index":420,"title":{},"body":{"injectables/CodeService.html":{}}}],["errorevent",{"_index":414,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["errors",{"_index":393,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{},"injectables/statementsFetchService.html":{}}}],["etc",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{}}}],["eva",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["event",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ContestlistComponent.html":{},"components/HeaderComponent.html":{}}}],["event.item.title",{"_index":1258,"title":{},"body":{"components/HeaderComponent.html":{}}}],["exec",{"_index":982,"title":{},"body":{"components/EditorComponent.html":{}}}],["execute",{"_index":927,"title":{},"body":{"components/EditorComponent.html":{}}}],["executed",{"_index":1014,"title":{},"body":{"components/EditorComponent.html":{}}}],["execution",{"_index":916,"title":{},"body":{"components/EditorComponent.html":{}}}],["expand",{"_index":915,"title":{},"body":{"components/EditorComponent.html":{}}}],["expanded",{"_index":1168,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["export",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["exports",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ThemeModule.html":{},"overview.html":{}}}],["extends",{"_index":1487,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["extracts",{"_index":1811,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["f",{"_index":484,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{}}}],["false",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["family",{"_index":1287,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["featured",{"_index":1409,"title":{},"body":{"components/HomeComponent.html":{}}}],["features",{"_index":1972,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["fetced",{"_index":730,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["fetch",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["fetches",{"_index":1786,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["field",{"_index":1583,"title":{},"body":{"components/MainComponent.html":{},"components/RenamefileDialog.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["file/folder",{"_index":494,"title":{},"body":{"injectables/CodefetchService.html":{},"components/ConfirmDialog.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{}}}],["file_id",{"_index":600,"title":{},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["fileid",{"_index":529,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["fileinterface",{"_index":480,"title":{"interfaces/fileInterface.html":{}},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"interfaces/TreeNode.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["fileinterface,treenode",{"_index":1097,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["filelist",{"_index":1028,"title":{},"body":{"components/FilelistComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["filelist'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["filelist.component.html",{"_index":1030,"title":{},"body":{"components/FilelistComponent.html":{}}}],["filelist.component.scss",{"_index":1029,"title":{},"body":{"components/FilelistComponent.html":{}}}],["filelist/filelist.component",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["filelistcomponent",{"_index":172,"title":{"components/FilelistComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":606,"title":{},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/NewfiledialogComponent.html":{}}}],["files",{"_index":476,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{}}}],["files(no",{"_index":514,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["filesurl",{"_index":444,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["first",{"_index":925,"title":{},"body":{"components/EditorComponent.html":{},"components/RegisterComponent.html":{}}}],["first_name",{"_index":1536,"title":{},"body":{"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{}}}],["fit",{"_index":1434,"title":{},"body":{"components/HomeComponent.html":{}}}],["fixed",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["flex",{"_index":1268,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["flexbox",{"_index":1439,"title":{},"body":{"components/HomeComponent.html":{}}}],["float",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["folder",{"_index":496,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{}}}],["folder.relative_location}}{{folder.filename",{"_index":1598,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["folders",{"_index":490,"title":{},"body":{"injectables/CodefetchService.html":{},"components/NewfiledialogComponent.html":{}}}],["folders/directories",{"_index":515,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["folderurl",{"_index":445,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["font",{"_index":669,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{}}}],["fontsize",{"_index":973,"title":{},"body":{"components/EditorComponent.html":{}}}],["footer",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["forever",{"_index":678,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["forgot",{"_index":1526,"title":{},"body":{"components/LoginComponent.html":{}}}],["format",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["formsmodule",{"_index":369,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{}}}],["forroot",{"_index":1801,"title":{},"body":{"modules/ThemeModule.html":{}}}],["frame",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{}}}],["front",{"_index":1398,"title":{},"body":{"components/HomeComponent.html":{}}}],["frontend",{"_index":435,"title":{},"body":{"injectables/CodefetchService.html":{},"index.html":{}}}],["fs",{"_index":1167,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["fsiconcomponent",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["full",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"components/HomeComponent.html":{}}}],["fully",{"_index":1408,"title":{},"body":{"components/HomeComponent.html":{}}}],["function",{"_index":391,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/RegisterComponent.html":{}}}],["functions",{"_index":437,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["gb",{"_index":1587,"title":{},"body":{"components/MainComponent.html":{}}}],["generate",{"_index":2019,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getconfigvalue('forms.validation.firstname.maxlength",{"_index":1752,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue('forms.validation.firstname.minlength",{"_index":1751,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue('forms.validation.lastname.maxlength",{"_index":1755,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue('forms.validation.lastname.minlength",{"_index":1754,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue('forms.validation.password.maxlength",{"_index":1524,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getconfigvalue('forms.validation.password.minlength",{"_index":1523,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getconfigvalue('forms.validation.username.maxlength",{"_index":1757,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue('forms.validation.username.minlength",{"_index":1756,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue(\\'forms.validation.firstname.maxlength",{"_index":1767,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue(\\'forms.validation.firstname.minlength",{"_index":1766,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue(\\'forms.validation.lastname.maxlength",{"_index":1769,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue(\\'forms.validation.lastname.minlength",{"_index":1768,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue(\\'forms.validation.password.maxlength",{"_index":1533,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getconfigvalue(\\'forms.validation.password.minlength",{"_index":1532,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getconfigvalue(\\'forms.validation.username.maxlength",{"_index":1771,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getconfigvalue(\\'forms.validation.username.minlength",{"_index":1770,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getcontest",{"_index":1982,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getcontest(data",{"_index":1995,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getcontests",{"_index":1983,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getcontests(data",{"_index":1999,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getcontestscores",{"_index":1984,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getcontestscores(data",{"_index":2002,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getdetails",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"components/HeaderComponent.html":{}}}],["getfilelist",{"_index":457,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["getfiles",{"_index":458,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["getfolder",{"_index":459,"title":{},"body":{"injectables/CodefetchService.html":{},"components/NewfiledialogComponent.html":{}}}],["getlanguage",{"_index":950,"title":{},"body":{"components/EditorComponent.html":{}}}],["getopenedfile",{"_index":940,"title":{},"body":{"components/EditorComponent.html":{}}}],["getopenedfiledata",{"_index":944,"title":{},"body":{"components/EditorComponent.html":{}}}],["getproblems",{"_index":1985,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getproblems(data",{"_index":2005,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getproblemstatement",{"_index":1986,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getproblemstatement(pid",{"_index":2007,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["gets",{"_index":2009,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getscores",{"_index":1987,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getscores(data",{"_index":2011,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getshowon(index",{"_index":1162,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["getsortdirection(column",{"_index":1579,"title":{},"body":{"components/MainComponent.html":{}}}],["getsubmissions",{"_index":1988,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getsubmissions(data",{"_index":2013,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["getter",{"_index":942,"title":{},"body":{"components/EditorComponent.html":{}}}],["getting",{"_index":1930,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":989,"title":{},"body":{"components/EditorComponent.html":{}}}],["given",{"_index":528,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["gives",{"_index":1463,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["go",{"_index":1329,"title":{},"body":{"components/HomeComponent.html":{}}}],["going",{"_index":1648,"title":{},"body":{"components/ProblemComponent.html":{}}}],["gotolink",{"_index":1217,"title":{},"body":{"components/HeaderComponent.html":{}}}],["gotolink(x",{"_index":1223,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["graph",{"_index":1958,"title":{},"body":{"modules.html":{}}}],["greatly",{"_index":1358,"title":{},"body":{"components/HomeComponent.html":{}}}],["grid",{"_index":747,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ProblemlistComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["guard",{"_index":309,"title":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["guard.ts",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"coverage.html":{}}}],["guard.ts:15",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.ts:18",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.ts:45",{"_index":359,"title":{},"body":{"guards/AuthGuard2.html":{}}}],["guard.ts:48",{"_index":360,"title":{},"body":{"guards/AuthGuard2.html":{}}}],["guards",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"overview.html":{}}}],["gupta",{"_index":1951,"title":{},"body":{"index.html":{}}}],["h5",{"_index":1710,"title":{},"body":{"components/ProblemComponent.html":{}}}],["handle",{"_index":392,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{}}}],["handleerror",{"_index":384,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["handleerror(error",{"_index":387,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["handles",{"_index":2016,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["happened",{"_index":425,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["harshit",{"_index":1950,"title":{},"body":{"index.html":{}}}],["haskell",{"_index":1022,"title":{},"body":{"components/EditorComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{}}}],["head",{"_index":1426,"title":{},"body":{"components/HomeComponent.html":{}}}],["header",{"_index":1211,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["header'},{'name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["header.component.html",{"_index":1213,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1212,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":1806,"title":{},"body":{"modules/ThemeModule.html":{}}}],["headercomponent",{"_index":174,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptor.html":{}}}],["heading",{"_index":665,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["height",{"_index":1276,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["height:40vh",{"_index":1717,"title":{},"body":{"components/ProblemComponent.html":{}}}],["helps",{"_index":1359,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":1417,"title":{},"body":{"components/HomeComponent.html":{},"injectables/statementsFetchService.html":{}}}],["hidden",{"_index":1714,"title":{},"body":{"components/ProblemComponent.html":{}}}],["hide",{"_index":1548,"title":{},"body":{"components/MainComponent.html":{}}}],["highlighting",{"_index":1357,"title":{},"body":{"components/HomeComponent.html":{}}}],["highlights",{"_index":1556,"title":{},"body":{"components/MainComponent.html":{}}}],["hint",{"_index":1285,"title":{},"body":{"components/HeaderComponent.html":{}}}],["holder",{"_index":1716,"title":{},"body":{"components/ProblemComponent.html":{}}}],["holds",{"_index":1997,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["home",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["home.component.html",{"_index":1303,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1302,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":176,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["htmlelement",{"_index":1323,"title":{},"body":{"components/HomeComponent.html":{}}}],["http",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/LeaderboardComponent.html":{},"injectables/statementsFetchService.html":{}}}],["http_interceptors",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["httpclientmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientxsrfmodule",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{}}}],["httperrorresponse",{"_index":388,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["httpevent",{"_index":1820,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["httpinterceptor",{"_index":1819,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["httpoptions",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpparams",{"_index":562,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["httprequest",{"_index":1815,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["i.e",{"_index":948,"title":{},"body":{"components/EditorComponent.html":{}}}],["icon",{"_index":1151,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["icons",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{},"dependencies.html":{}}}],["id",{"_index":405,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["ide",{"_index":1412,"title":{},"body":{"components/HomeComponent.html":{}}}],["idea",{"_index":1396,"title":{},"body":{"components/HomeComponent.html":{}}}],["identifier",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["idtoken",{"_index":1821,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["id}).pipe",{"_index":583,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["if(_b",{"_index":1161,"title":{},"body":{"components/FilelistComponent.html":{}}}],["if(_data[\"data",{"_index":594,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["if(_data[\"success\"]==false",{"_index":590,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{}}}],["if(await",{"_index":1111,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["if(s.data.is_file",{"_index":1157,"title":{},"body":{"components/FilelistComponent.html":{}}}],["if(this.activefileid",{"_index":1143,"title":{},"body":{"components/FilelistComponent.html":{}}}],["if(this.callback",{"_index":715,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["if(this.openedfile.id",{"_index":995,"title":{},"body":{"components/EditorComponent.html":{}}}],["if(val=='c",{"_index":986,"title":{},"body":{"components/EditorComponent.html":{}}}],["ignore",{"_index":661,"title":{},"body":{"components/CompetingComponent.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["image",{"_index":1420,"title":{},"body":{"components/HomeComponent.html":{}}}],["implemented",{"_index":1973,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["implements",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["import",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["import('./auth/auth.module",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./dashboard/dashboard.module",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":838,"title":{},"body":{"components/ContestsComponent.html":{},"components/HomeComponent.html":{}}}],["imports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ThemeModule.html":{}}}],["include",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["includes",{"_index":436,"title":{},"body":{"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{}}}],["including",{"_index":919,"title":{},"body":{"components/EditorComponent.html":{},"components/HomeComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["information",{"_index":646,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/ProblemComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["initial",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["initialise",{"_index":739,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["initialises",{"_index":753,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{}}}],["inject",{"_index":1506,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(nb_auth_options",{"_index":1508,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"injectables/statementsFetchService.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"injectables/statementsFetchService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"overview.html":{},"injectables/statementsFetchService.html":{}}}],["input",{"_index":652,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemlistComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["input_type",{"_index":1841,"title":{},"body":{"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["input_type:'text",{"_index":1003,"title":{},"body":{"components/EditorComponent.html":{}}}],["inputs",{"_index":741,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["install",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["instance",{"_index":729,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["instanceof",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["inteface",{"_index":1834,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["integrated",{"_index":1350,"title":{},"body":{"components/HomeComponent.html":{}}}],["interact",{"_index":438,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["interacting",{"_index":394,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{}}}],["interacts",{"_index":1965,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["intercept",{"_index":1813,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["intercept(req",{"_index":1814,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":1808,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1809,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":49,"title":{"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["interfaces",{"_index":1534,"title":{},"body":{"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"overview.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["is_file",{"_index":620,"title":{},"body":{"injectables/CodefetchService.html":{},"components/MainComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["isdir",{"_index":1169,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["isfile",{"_index":487,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["isolation",{"_index":1362,"title":{},"body":{"components/HomeComponent.html":{}}}],["item",{"_index":1173,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{}}}],["item.title",{"_index":1174,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["itemclicked",{"_index":1040,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["itemclicked(action",{"_index":1053,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["items",{"_index":1037,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["jain",{"_index":1947,"title":{},"body":{"index.html":{}}}],["jetbrains",{"_index":1450,"title":{},"body":{"components/HomeComponent.html":{}}}],["js",{"_index":1313,"title":{},"body":{"components/HomeComponent.html":{}}}],["justify",{"_index":1269,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["katex",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["katexmodule",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["kb",{"_index":1592,"title":{},"body":{"components/MainComponent.html":{}}}],["kind",{"_index":1192,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["know",{"_index":1397,"title":{},"body":{"components/HomeComponent.html":{}}}],["kumar",{"_index":1946,"title":{},"body":{"index.html":{}}}],["label",{"_index":1024,"title":{},"body":{"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["label=\"social",{"_index":1529,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["lands",{"_index":1541,"title":{},"body":{"components/MainComponent.html":{}}}],["lang",{"_index":908,"title":{},"body":{"components/EditorComponent.html":{},"components/ProblemComponent.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["language",{"_index":911,"title":{},"body":{"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["language(val",{"_index":985,"title":{},"body":{"components/EditorComponent.html":{}}}],["languages",{"_index":1346,"title":{},"body":{"components/HomeComponent.html":{}}}],["last",{"_index":1753,"title":{},"body":{"components/RegisterComponent.html":{}}}],["last_name",{"_index":1537,"title":{},"body":{"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{}}}],["later",{"_index":429,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["layout",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["leaderboard",{"_index":787,"title":{},"body":{"components/ContestsComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{}}}],["leaderboard'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["leaderboard.component.html",{"_index":1465,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard.component.scss",{"_index":1464,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard/leaderboard.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"components/ProblemComponent.html":{}}}],["leaderboardcomponent",{"_index":178,"title":{"components/LeaderboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["left",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["lefttime",{"_index":831,"title":{},"body":{"components/ContestsComponent.html":{}}}],["legacy",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legend",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"overview.html":{}}}],["libraries",{"_index":1403,"title":{},"body":{"components/HomeComponent.html":{}}}],["licensed",{"_index":1954,"title":{},"body":{"index.html":{}}}],["limit",{"_index":1700,"title":{},"body":{"components/ProblemComponent.html":{}}}],["line",{"_index":403,"title":{},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{}}}],["link",{"_index":1127,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["linux",{"_index":1348,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":508,"title":{},"body":{"injectables/CodefetchService.html":{},"components/ContestlistComponent.html":{},"components/ProblemlistComponent.html":{},"injectables/statementsFetchService.html":{}}}],["listener",{"_index":1233,"title":{},"body":{"components/HeaderComponent.html":{}}}],["literal",{"_index":1493,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["live",{"_index":1345,"title":{},"body":{"components/HomeComponent.html":{}}}],["loadchildren",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":1317,"title":{},"body":{"components/HomeComponent.html":{}}}],["loading",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/TokenInterceptor.html":{}}}],["localstorage.getitem(\"token",{"_index":1822,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["localstorage.removeitem('token",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{}}}],["localstorage.setitem('token",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{}}}],["location",{"_index":704,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["log",{"_index":1234,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["logged",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["loggedin",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{}}}],["logic",{"_index":1938,"title":{},"body":{"index.html":{}}}],["login",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{}}}],["login.component.html",{"_index":1489,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["login/register",{"_index":357,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["logincomponent",{"_index":180,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":54,"title":{"interfaces/LoginForm.html":{}},"body":{"injectables/ApiService.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["loginuser",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/LoginComponent.html":{}}}],["loginuser(data",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{}}}],["logo",{"_index":1272,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logout",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["logoutuser",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{}}}],["lost",{"_index":1178,"title":{},"body":{"components/FilelistComponent.html":{}}}],["lot",{"_index":1384,"title":{},"body":{"components/HomeComponent.html":{}}}],["ltr(border",{"_index":1289,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ltr(padding",{"_index":1280,"title":{},"body":{"components/HeaderComponent.html":{}}}],["m.authmodule",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.dashboardmodule",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":485,"title":{},"body":{"injectables/CodefetchService.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["main",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["main.component.html",{"_index":1543,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":1542,"title":{},"body":{"components/MainComponent.html":{}}}],["main/main.component",{"_index":886,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["maincomponent",{"_index":181,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maintained",{"_index":1968,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["major",{"_index":1354,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":1994,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["makes",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{}}}],["making",{"_index":473,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["manage",{"_index":1343,"title":{},"body":{"components/HomeComponent.html":{}}}],["manipulation",{"_index":649,"title":{},"body":{"components/CompetingComponent.html":{}}}],["map",{"_index":565,"title":{},"body":{"injectables/CodefetchService.html":{},"components/HeaderComponent.html":{}}}],["margin",{"_index":695,"title":{},"body":{"components/ConfirmDialog.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/RenamefileDialog.html":{}}}],["mat",{"_index":1709,"title":{},"body":{"components/ProblemComponent.html":{}}}],["match",{"_index":1761,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/fileInterface.html":{},"index.html":{},"modules.html":{},"interfaces/output_interface.html":{},"overview.html":{},"routes.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["max",{"_index":1441,"title":{},"body":{"components/HomeComponent.html":{},"components/ProblemComponent.html":{}}}],["mb",{"_index":1590,"title":{},"body":{"components/MainComponent.html":{}}}],["means",{"_index":1368,"title":{},"body":{"components/HomeComponent.html":{}}}],["media",{"_index":1187,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["memory",{"_index":1702,"title":{},"body":{"components/ProblemComponent.html":{}}}],["memory_limit",{"_index":1636,"title":{},"body":{"components/ProblemComponent.html":{}}}],["memory_limit}}mb",{"_index":1703,"title":{},"body":{"components/ProblemComponent.html":{}}}],["menu",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"dependencies.html":{}}}],["menuitem:hover",{"_index":1204,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["menuservice",{"_index":1221,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":421,"title":{},"body":{"injectables/CodeService.html":{},"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{},"injectables/statementsFetchService.html":{}}}],["messages",{"_index":1992,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["metadata",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["method",{"_index":1230,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"injectables/statementsFetchService.html":{}}}],["methods",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"injectables/statementsFetchService.html":{}}}],["million",{"_index":1394,"title":{},"body":{"components/HomeComponent.html":{}}}],["min",{"_index":1188,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["minwithformultiplecolumns",{"_index":1163,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["mit",{"_index":1953,"title":{},"body":{"index.html":{}}}],["mlimit",{"_index":1837,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["modifying",{"_index":1381,"title":{},"body":{"components/HomeComponent.html":{}}}],["module",{"_index":196,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ThemeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{},"overview.html":{}}}],["modules",{"_index":198,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ThemeModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1803,"title":{},"body":{"modules/ThemeModule.html":{}}}],["mono",{"_index":1451,"title":{},"body":{"components/HomeComponent.html":{}}}],["more",{"_index":1017,"title":{},"body":{"components/EditorComponent.html":{},"components/HomeComponent.html":{},"injectables/statementsFetchService.html":{}}}],["mouse",{"_index":1232,"title":{},"body":{"components/HeaderComponent.html":{}}}],["multi",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["name}).pipe",{"_index":607,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["navigate",{"_index":1553,"title":{},"body":{"components/MainComponent.html":{}}}],["navigatehome",{"_index":1218,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigates",{"_index":758,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["navigationend",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["nb",{"_index":834,"title":{},"body":{"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["nb_auth_options",{"_index":1507,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["nb_modules",{"_index":1807,"title":{},"body":{"modules/ThemeModule.html":{},"coverage.html":{}}}],["nbactioncomponent",{"_index":1244,"title":{},"body":{"components/HeaderComponent.html":{}}}],["nbactionsmodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{}}}],["nbalertmodule",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ContestlistComponent.html":{},"modules/DashboardModule.html":{},"components/LeaderboardComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["nbauthcomponent",{"_index":374,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["nbauthmodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["nbauthmodule.forroot",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["nbauthservice",{"_index":1492,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["nbbuttonmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ThemeModule.html":{}}}],["nbcardmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"components/NewfiledialogComponent.html":{}}}],["nbcheckboxmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["nbcomponentstatus",{"_index":564,"title":{},"body":{"injectables/CodefetchService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/statementsFetchService.html":{}}}],["nbcontextmenumodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{}}}],["nbdialogmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["nbdialogmodule.forchild",{"_index":894,"title":{},"body":{"modules/DashboardModule.html":{}}}],["nbdialogmodule.forroot",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["nbdialogref",{"_index":683,"title":{},"body":{"components/ConfirmDialog.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["nbdialogservice",{"_index":469,"title":{},"body":{"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["nbdummyauthstrategy",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["nbdummyauthstrategy.setup",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["nbevaiconsmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{}}}],["nbiconmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{}}}],["nbinputmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{}}}],["nblayoutmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{}}}],["nblistmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["nblogincomponent",{"_index":1488,"title":{},"body":{"components/LoginComponent.html":{}}}],["nbmediabreakpointsservice",{"_index":1242,"title":{},"body":{"components/HeaderComponent.html":{}}}],["nbmenuitem",{"_index":1096,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["nbmenumodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{}}}],["nbmenumodule.forroot",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["nbmenuservice",{"_index":1094,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["nbregistercomponent",{"_index":1741,"title":{},"body":{"components/RegisterComponent.html":{}}}],["nbsearchmodule",{"_index":1804,"title":{},"body":{"modules/ThemeModule.html":{}}}],["nbselectmodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{}}}],["nbsidebar",{"_index":796,"title":{},"body":{"components/ContestsComponent.html":{}}}],["nbsidebarmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{}}}],["nbsidebarmodule.forroot",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["nbsidebarservice",{"_index":639,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["nbsortdirection",{"_index":654,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["nbsortdirection.none",{"_index":1570,"title":{},"body":{"components/MainComponent.html":{}}}],["nbsortrequest",{"_index":655,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["nbtabsetcomponent",{"_index":959,"title":{},"body":{"components/EditorComponent.html":{}}}],["nbtabsetmodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["nbthememodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{}}}],["nbthememodule.forroot",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{}}}],["nbthemeservice",{"_index":1243,"title":{},"body":{"components/HeaderComponent.html":{}}}],["nbtoastrmodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["nbtoastrmodule.forroot",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["nbtoastrservice",{"_index":465,"title":{},"body":{"injectables/CodefetchService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/statementsFetchService.html":{}}}],["nbtreegrid",{"_index":728,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["nbtreegridbuilder",{"_index":1470,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["nbtreegriddatasource",{"_index":656,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["nbtreegriddatasourcebuilder",{"_index":657,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["nbtreegriddatasourcebuilder,nbcardcomponent",{"_index":1095,"title":{},"body":{"components/FilelistComponent.html":{}}}],["nbtreegridmodule",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["nbusermodule",{"_index":1805,"title":{},"body":{"modules/ThemeModule.html":{}}}],["nebular",{"_index":650,"title":{},"body":{"components/CompetingComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"index.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["nebular/auth",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["nebular/eva",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{},"dependencies.html":{}}}],["nebular/theme",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"modules/DashboardModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"dependencies.html":{},"injectables/statementsFetchService.html":{}}}],["nebular/theme/styles/global/breakpoints",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["needed",{"_index":1647,"title":{},"body":{"components/ProblemComponent.html":{}}}],["new",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{},"coverage.html":{}}}],["newfile",{"_index":1041,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["newfile(par",{"_index":1058,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["newfiledialog.scss",{"_index":1597,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["newfiledialog/newfiledialog.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["newfiledialogcomponent",{"_index":184,"title":{"components/NewfiledialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["next",{"_index":1816,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(cloned",{"_index":1826,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["next.handle(req",{"_index":1827,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["nextcolumnstep",{"_index":1165,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["ng",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":909,"title":{},"body":{"components/EditorComponent.html":{}}}],["ngmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/ThemeModule.html":{}}}],["ngondestroy",{"_index":1219,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ngoninit",{"_index":662,"title":{},"body":{"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["ngx",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"dependencies.html":{}}}],["node",{"_index":1829,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["none",{"_index":1184,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["nowrap",{"_index":1295,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":716,"title":{},"body":{"injectables/ConnectpartService.html":{},"components/HeaderComponent.html":{}}}],["number",{"_index":1059,"title":{},"body":{"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["object",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["observable",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/statementsFetchService.html":{}}}],["obtained",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{}}}],["occurred",{"_index":416,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/HeaderComponent.html":{},"injectables/statementsFetchService.html":{}}}],["occurred:',error.error.message",{"_index":576,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["ocd",{"_index":1407,"title":{},"body":{"components/HomeComponent.html":{}}}],["ocde",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["oldname",{"_index":1138,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/RenamefileDialog.html":{}}}],["onclick",{"_index":740,"title":{},"body":{"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{}}}],["onclick(dialog",{"_index":1644,"title":{},"body":{"components/ProblemComponent.html":{}}}],["onclick(s",{"_index":754,"title":{},"body":{"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemlistComponent.html":{}}}],["onclick(s,dialog",{"_index":1156,"title":{},"body":{"components/FilelistComponent.html":{}}}],["ondestroy",{"_index":1210,"title":{},"body":{"components/HeaderComponent.html":{}}}],["one",{"_index":1760,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":633,"title":{},"body":{"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["online",{"_index":1326,"title":{},"body":{"components/HomeComponent.html":{}}}],["onrightclick",{"_index":1042,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["onrightclick(s",{"_index":1071,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["onsinglecick",{"_index":1043,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["onsinglecick(s",{"_index":1075,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["ope",{"_index":1104,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["open",{"_index":1070,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["opended",{"_index":946,"title":{},"body":{"components/EditorComponent.html":{}}}],["opened",{"_index":943,"title":{},"body":{"components/EditorComponent.html":{}}}],["openedfile",{"_index":446,"title":{},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{}}}],["openedfilechange",{"_index":447,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["openedfiledata",{"_index":448,"title":{},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{}}}],["openedfiledatachange",{"_index":449,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["opens",{"_index":1063,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["option",{"_index":1057,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/fileInterface.html":{},"injectables/statementsFetchService.html":{}}}],["options",{"_index":922,"title":{},"body":{"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["otherwise",{"_index":1502,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["out",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/ContestlistComponent.html":{},"modules/DashboardModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"modules/ThemeModule.html":{},"overview.html":{}}}],["outline",{"_index":1152,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["output",{"_index":407,"title":{},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["output_data",{"_index":1011,"title":{},"body":{"components/EditorComponent.html":{}}}],["output_data.output",{"_index":1012,"title":{},"body":{"components/EditorComponent.html":{}}}],["output_data.success",{"_index":1013,"title":{},"body":{"components/EditorComponent.html":{}}}],["output_interface",{"_index":412,"title":{"interfaces/output_interface.html":{}},"body":{"injectables/CodeService.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"interfaces/output_interface.html":{}}}],["overflow",{"_index":1713,"title":{},"body":{"components/ProblemComponent.html":{}}}],["overview",{"_index":1959,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1901,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1207,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["padding",{"_index":836,"title":{},"body":{"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["page",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["panel",{"_index":1016,"title":{},"body":{"components/EditorComponent.html":{}}}],["par",{"_index":1066,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{}}}],["par.tostring()}}).onclose.subscribe",{"_index":1130,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["param",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["parameter",{"_index":784,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/statementsFetchService.html":{}}}],["paramters",{"_index":795,"title":{},"body":{"components/ContestsComponent.html":{}}}],["param{fileinterface",{"_index":571,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["param{treenode",{"_index":1141,"title":{},"body":{"components/FilelistComponent.html":{}}}],["parent",{"_index":491,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["parseint(sec",{"_index":832,"title":{},"body":{"components/ContestsComponent.html":{}}}],["parseint(val",{"_index":1584,"title":{},"body":{"components/MainComponent.html":{}}}],["participate",{"_index":727,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["particle",{"_index":1309,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["particle.js",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["particles",{"_index":1438,"title":{},"body":{"components/HomeComponent.html":{}}}],["particles.js",{"_index":1316,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["particlescomponent",{"_index":1307,"title":{},"body":{"components/HomeComponent.html":{}}}],["particlesjs",{"_index":1311,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["particlesjs.load('particles",{"_index":1312,"title":{},"body":{"components/HomeComponent.html":{}}}],["particlesmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["particular",{"_index":1630,"title":{},"body":{"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"injectables/statementsFetchService.html":{}}}],["pass",{"_index":1991,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["passed",{"_index":782,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["passing",{"_index":938,"title":{},"body":{"components/EditorComponent.html":{},"components/ProblemComponent.html":{},"injectables/statementsFetchService.html":{}}}],["password",{"_index":1521,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/RegisterComponent.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{}}}],["password1",{"_index":1538,"title":{},"body":{"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{}}}],["password2",{"_index":1539,"title":{},"body":{"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{}}}],["past",{"_index":630,"title":{},"body":{"components/CompetingComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["path",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodefetchService.html":{},"modules/DashboardRoutingModule.html":{},"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["path:'contest",{"_index":898,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["path:'home",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'problem",{"_index":897,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["path:this.activefilepath",{"_index":1572,"title":{},"body":{"components/MainComponent.html":{}}}],["pathmatch",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["perform",{"_index":1355,"title":{},"body":{"components/HomeComponent.html":{}}}],["performs",{"_index":1055,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["permanently",{"_index":501,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["personal",{"_index":1335,"title":{},"body":{"components/HomeComponent.html":{}}}],["pid",{"_index":2010,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["pid}).pipe",{"_index":2042,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["pipe",{"_index":431,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["pipe(map",{"_index":608,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["pipe(map(_data",{"_index":616,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":1248,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pipe(tap",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{}}}],["pipe(tap(res",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{}}}],["please",{"_index":426,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/ProblemComponent.html":{},"injectables/statementsFetchService.html":{}}}],["pointer",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["pop",{"_index":1050,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["popular",{"_index":1415,"title":{},"body":{"components/HomeComponent.html":{}}}],["position",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["post",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{}}}],["postdata",{"_index":385,"title":{},"body":{"injectables/CodeService.html":{}}}],["postdata(data",{"_index":396,"title":{},"body":{"injectables/CodeService.html":{}}}],["posturl",{"_index":383,"title":{},"body":{"injectables/CodeService.html":{}}}],["practice",{"_index":629,"title":{},"body":{"components/CompetingComponent.html":{}}}],["pradipta",{"_index":1943,"title":{},"body":{"index.html":{}}}],["present",{"_index":440,"title":{},"body":{"injectables/CodefetchService.html":{},"interceptors/TokenInterceptor.html":{}}}],["prevents",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/HomeComponent.html":{}}}],["principle",{"_index":1934,"title":{},"body":{"index.html":{}}}],["privacy",{"_index":1369,"title":{},"body":{"components/HomeComponent.html":{}}}],["private",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["problem",{"_index":1480,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["problem's",{"_index":1729,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["problem'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["problem.component.html",{"_index":1634,"title":{},"body":{"components/ProblemComponent.html":{}}}],["problem.component.scss",{"_index":1633,"title":{},"body":{"components/ProblemComponent.html":{}}}],["problem/contest",{"_index":1839,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["problem/problem.component",{"_index":892,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["problem_id",{"_index":1688,"title":{},"body":{"components/ProblemComponent.html":{}}}],["problemcomponent",{"_index":185,"title":{"components/ProblemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["problemid",{"_index":1466,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/ProblemComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["problemlist",{"_index":1719,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["problemlist'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["problemlist.component.html",{"_index":1721,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["problemlist.component.scss",{"_index":1720,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["problemlist/problemlist.component",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["problemlistcomponent",{"_index":187,"title":{"components/ProblemlistComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["problems",{"_index":628,"title":{},"body":{"components/CompetingComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["problemsurl",{"_index":1977,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["problemurl",{"_index":1978,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["processes",{"_index":1065,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["profile",{"_index":1240,"title":{},"body":{"components/HeaderComponent.html":{}}}],["program",{"_index":1937,"title":{},"body":{"index.html":{}}}],["promise",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodefetchService.html":{}}}],["promise((resolve",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["prompt",{"_index":676,"title":{},"body":{"components/ConfirmDialog.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["prompt'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["properties",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["provide",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["provided",{"_index":1942,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"injectables/statementsFetchService.html":{}}}],["providers",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{},"overview.html":{}}}],["provides",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{}}}],["ptr",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{}}}],["public",{"_index":451,"title":{},"body":{"injectables/CodefetchService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/statementsFetchService.html":{}}}],["python",{"_index":935,"title":{},"body":{"components/EditorComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{}}}],["python3",{"_index":988,"title":{},"body":{"components/EditorComponent.html":{}}}],["query",{"_index":1998,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["querystring",{"_index":1833,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["r",{"_index":820,"title":{},"body":{"components/ContestsComponent.html":{}}}],["raise",{"_index":2017,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["reach",{"_index":1387,"title":{},"body":{"components/HomeComponent.html":{}}}],["read",{"_index":524,"title":{},"body":{"injectables/CodefetchService.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["readfile",{"_index":460,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["readfile(id",{"_index":521,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["readfiledata",{"_index":461,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["readfiledata(id",{"_index":526,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["readfiledata]{@link",{"_index":584,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["real",{"_index":1759,"title":{},"body":{"components/RegisterComponent.html":{}}}],["really",{"_index":1175,"title":{},"body":{"components/FilelistComponent.html":{}}}],["rebuilding",{"_index":707,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["received",{"_index":1745,"title":{},"body":{"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["recovered",{"_index":504,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["redirects",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirectto",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["ref",{"_index":685,"title":{},"body":{"components/ConfirmDialog.html":{},"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["refer",{"_index":1406,"title":{},"body":{"components/HomeComponent.html":{}}}],["refresh",{"_index":1062,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["refreshes",{"_index":1078,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["refreshfilestructure",{"_index":1044,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["refreshuserdetails",{"_index":1220,"title":{},"body":{"components/HeaderComponent.html":{}}}],["regarding",{"_index":1724,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["register",{"_index":376,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1742,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["registercomponent",{"_index":189,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registeruser",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{},"components/RegisterComponent.html":{}}}],["registeruser(data",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["reject",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["related",{"_index":1374,"title":{},"body":{"components/HomeComponent.html":{}}}],["relative",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["relative_location",{"_index":1617,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["relativelinkresolution",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remember",{"_index":1389,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["ren",{"_index":1116,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["rename",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["renamed",{"_index":534,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["renamefile",{"_index":462,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["renamefile(id",{"_index":532,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["renamefile(par",{"_index":1079,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["renamefiledialog",{"_index":190,"title":{"components/RenamefileDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renamefiledialog.scss",{"_index":1776,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["renamefiledialog/renamefiledialog.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["render",{"_index":1730,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["renders",{"_index":781,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["repeat",{"_index":1424,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["reperesenting",{"_index":2001,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["represent",{"_index":1830,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["represents",{"_index":1835,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["req",{"_index":1818,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["req.clone",{"_index":1824,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["req.headers.set(\"authorization",{"_index":1825,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/RenamefileDialog.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/code_interface.html":{}}}],["requests",{"_index":474,"title":{},"body":{"injectables/CodefetchService.html":{},"components/LeaderboardComponent.html":{},"injectables/statementsFetchService.html":{}}}],["require",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["required",{"_index":1520,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":614,"title":{},"body":{"injectables/CodefetchService.html":{},"components/DashboardComponent.html":{}}}],["reset",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{},"overview.html":{}}}],["resolve(false",{"_index":354,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["resolve(true",{"_index":355,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["responds",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["response",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{}}}],["responsibilities",{"_index":1378,"title":{},"body":{"components/HomeComponent.html":{}}}],["restore",{"_index":680,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["restrictions(except",{"_index":1337,"title":{},"body":{"components/HomeComponent.html":{}}}],["result",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/fileInterface.html":{},"index.html":{},"modules.html":{},"interfaces/output_interface.html":{},"overview.html":{},"routes.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["results",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/fileInterface.html":{},"index.html":{},"modules.html":{},"interfaces/output_interface.html":{},"overview.html":{},"routes.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["ret",{"_index":962,"title":{},"body":{"components/EditorComponent.html":{}}}],["retrieves",{"_index":2004,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["return",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"injectables/statementsFetchService.html":{}}}],["returndata",{"_index":1490,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["returned",{"_index":419,"title":{},"body":{"injectables/CodeService.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["returns",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"injectables/statementsFetchService.html":{}}}],["rgb(237",{"_index":1200,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["rgb(86",{"_index":1205,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["right",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"dependencies.html":{}}}],["rightclickedrow",{"_index":1038,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["rights",{"_index":1370,"title":{},"body":{"components/HomeComponent.html":{}}}],["roboto",{"_index":1447,"title":{},"body":{"components/HomeComponent.html":{}}}],["robust",{"_index":1371,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/statementsFetchService.html":{}}}],["root'},{'name",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["route",{"_index":759,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ProblemlistComponent.html":{}}}],["router",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{}}}],["router.events.subscribe",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["routerevent",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":377,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":304,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ProblemlistComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":746,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["routing.module",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{}}}],["routing.module.ts",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["row",{"_index":1452,"title":{},"body":{"components/HomeComponent.html":{},"components/ProblemComponent.html":{}}}],["row.data.is_file",{"_index":1595,"title":{},"body":{"components/MainComponent.html":{}}}],["row.data[column",{"_index":779,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["row.data[customcolumn",{"_index":1172,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["row.file_id",{"_index":1687,"title":{},"body":{"components/ProblemComponent.html":{}}}],["row.filename",{"_index":1685,"title":{},"body":{"components/ProblemComponent.html":{}}}],["row.path",{"_index":1705,"title":{},"body":{"components/ProblemComponent.html":{}}}],["rt",{"_index":1306,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["rtl(border",{"_index":1293,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rtl(padding",{"_index":1282,"title":{},"body":{"components/HeaderComponent.html":{}}}],["run",{"_index":406,"title":{},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"interfaces/code_interface.html":{}}}],["running",{"_index":400,"title":{},"body":{"injectables/CodeService.html":{},"components/CompetingComponent.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["rxjs",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/HeaderComponent.html":{},"interceptors/TokenInterceptor.html":{},"dependencies.html":{},"injectables/statementsFetchService.html":{}}}],["rxjs/add/observable/of",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["rxjs/internal/operators",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodefetchService.html":{}}}],["rxjs/operators",{"_index":411,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/HeaderComponent.html":{},"injectables/statementsFetchService.html":{}}}],["s",{"_index":760,"title":{},"body":{"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemlistComponent.html":{}}}],["s.data",{"_index":1149,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["s.data.id",{"_index":777,"title":{},"body":{"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemlistComponent.html":{}}}],["s.data.id!=this.activefileid",{"_index":1158,"title":{},"body":{"components/FilelistComponent.html":{}}}],["s.data.is_file",{"_index":1144,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["s.data.name",{"_index":1145,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["s.data.path",{"_index":1146,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["save",{"_index":902,"title":{},"body":{"components/EditorComponent.html":{},"components/HomeComponent.html":{}}}],["saved",{"_index":539,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["saves",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"components/EditorComponent.html":{}}}],["schemas",{"_index":884,"title":{},"body":{"modules/DashboardModule.html":{}}}],["score",{"_index":1475,"title":{},"body":{"components/LeaderboardComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["scoreinterface",{"_index":1478,"title":{"interfaces/scoreInterface.html":{}},"body":{"components/LeaderboardComponent.html":{},"interfaces/TreeNode.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["scoreurl",{"_index":1979,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["screen",{"_index":472,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["scroll",{"_index":1715,"title":{},"body":{"components/ProblemComponent.html":{}}}],["scroll(el",{"_index":1322,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrollable",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["search",{"_index":1171,"title":{},"body":{"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{}}}],["sec",{"_index":818,"title":{},"body":{"components/ContestsComponent.html":{}}}],["section",{"_index":1443,"title":{},"body":{"components/HomeComponent.html":{}}}],["select",{"_index":955,"title":{},"body":{"components/EditorComponent.html":{},"components/HeaderComponent.html":{},"components/NewfiledialogComponent.html":{}}}],["selected",{"_index":928,"title":{},"body":{"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["selectedid",{"_index":1637,"title":{},"body":{"components/ProblemComponent.html":{}}}],["selectedid:number",{"_index":1672,"title":{},"body":{"components/ProblemComponent.html":{}}}],["selecting",{"_index":1074,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["selector",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["self",{"_index":1197,"title":{},"body":{"components/FilelistComponent.html":{}}}],["send",{"_index":381,"title":{},"body":{"injectables/CodeService.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["sends",{"_index":1083,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["separate",{"_index":1969,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["separating",{"_index":1935,"title":{},"body":{"index.html":{}}}],["server",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["servers",{"_index":1416,"title":{},"body":{"components/HomeComponent.html":{}}}],["service",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["service.service",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/EditorComponent.html":{}}}],["service.service.ts",{"_index":379,"title":{},"body":{"injectables/CodeService.html":{},"coverage.html":{}}}],["service.service.ts:16",{"_index":386,"title":{},"body":{"injectables/CodeService.html":{}}}],["service.service.ts:23",{"_index":389,"title":{},"body":{"injectables/CodeService.html":{}}}],["service.service.ts:40",{"_index":398,"title":{},"body":{"injectables/CodeService.html":{}}}],["services",{"_index":799,"title":{},"body":{"components/ContestsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["set",{"_index":918,"title":{},"body":{"components/EditorComponent.html":{}}}],["setactivefile(f",{"_index":724,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["setcallback(c",{"_index":722,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["setid",{"_index":1641,"title":{},"body":{"components/ProblemComponent.html":{}}}],["setid(row",{"_index":1649,"title":{},"body":{"components/ProblemComponent.html":{}}}],["setlanguage(val",{"_index":952,"title":{},"body":{"components/EditorComponent.html":{}}}],["setsession",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{}}}],["setsession(authresult",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{}}}],["setter",{"_index":954,"title":{},"body":{"components/EditorComponent.html":{}}}],["several",{"_index":1414,"title":{},"body":{"components/HomeComponent.html":{}}}],["shcontextmenumodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["showlinenumbers",{"_index":970,"title":{},"body":{"components/EditorComponent.html":{}}}],["shown",{"_index":1774,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["showothercompletions",{"_index":979,"title":{},"body":{"components/EditorComponent.html":{}}}],["sidebar",{"_index":645,"title":{},"body":{"components/CompetingComponent.html":{},"injectables/ConnectpartService.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["sidebarservice",{"_index":643,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["sign",{"_index":1499,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signupform",{"_index":63,"title":{"interfaces/SignUpForm.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/LoginForm.html":{},"components/RegisterComponent.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["similar",{"_index":1334,"title":{},"body":{"components/HomeComponent.html":{}}}],["simply",{"_index":1646,"title":{},"body":{"components/ProblemComponent.html":{}}}],["sinput",{"_index":402,"title":{},"body":{"injectables/CodeService.html":{}}}],["size",{"_index":670,"title":{},"body":{"components/CompetingComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["size:18px",{"_index":840,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["skills",{"_index":1382,"title":{},"body":{"components/HomeComponent.html":{}}}],["sociallink.title",{"_index":1530,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["solid",{"_index":1291,"title":{},"body":{"components/HeaderComponent.html":{}}}],["solution",{"_index":1704,"title":{},"body":{"components/ProblemComponent.html":{}}}],["something",{"_index":423,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/EditorComponent.html":{},"injectables/statementsFetchService.html":{}}}],["sortcolumn",{"_index":1545,"title":{},"body":{"components/MainComponent.html":{}}}],["sortdirection",{"_index":1546,"title":{},"body":{"components/MainComponent.html":{}}}],["sortrequest.column",{"_index":1576,"title":{},"body":{"components/MainComponent.html":{}}}],["sortrequest.direction",{"_index":1578,"title":{},"body":{"components/MainComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"modules/ThemeModule.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["space",{"_index":1270,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["src/api.ts",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["src/app/@theme/header/header.component.ts",{"_index":1209,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/@theme/header/header.component.ts:18",{"_index":1238,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/header/header.component.ts:19",{"_index":1241,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/header/header.component.ts:20",{"_index":1239,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/header/header.component.ts:22",{"_index":1222,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/header/header.component.ts:34",{"_index":1235,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/header/header.component.ts:49",{"_index":1228,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/header/header.component.ts:64",{"_index":1224,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/header/header.component.ts:67",{"_index":1227,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/header/header.component.ts:79",{"_index":1226,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/@theme/styles/theme.corporate.ts",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["src/app/@theme/styles/theme.cosmic.ts",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["src/app/@theme/styles/theme.dark.ts",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["src/app/@theme/styles/theme.default.ts",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["src/app/@theme/theme.module.ts",{"_index":1800,"title":{},"body":{"modules/ThemeModule.html":{},"coverage.html":{}}}],["src/app/@theme/theme.module.ts:46",{"_index":1802,"title":{},"body":{"modules/ThemeModule.html":{}}}],["src/app/api.service",{"_index":1246,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/api.service.ts:18",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/api.service.ts:20",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/api.service.ts:22",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/api.service.ts:28",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/api.service.ts:36",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/api.service.ts:45",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/api.service.ts:53",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/api.service.ts:62",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/app",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"coverage.html":{}}}],["src/app/auth/auth",{"_index":373,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":366,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":1486,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:14",{"_index":1505,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:15",{"_index":1496,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:17",{"_index":1504,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:27",{"_index":1497,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/register/register.component.ts",{"_index":1740,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/auth/register/register.component.ts:14",{"_index":1747,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:15",{"_index":1743,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:18",{"_index":1746,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:34",{"_index":1744,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/code",{"_index":378,"title":{},"body":{"injectables/CodeService.html":{},"coverage.html":{}}}],["src/app/code_interface.ts",{"_index":1840,"title":{},"body":{"interfaces/code_interface.html":{},"coverage.html":{},"interfaces/output_interface.html":{}}}],["src/app/codefetch.service",{"_index":960,"title":{},"body":{"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/codefetch.service.ts",{"_index":433,"title":{},"body":{"injectables/CodefetchService.html":{},"coverage.html":{}}}],["src/app/codefetch.service.ts:104",{"_index":527,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:114",{"_index":522,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:145",{"_index":536,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:169",{"_index":533,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:19",{"_index":558,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:192",{"_index":499,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:20",{"_index":544,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:21",{"_index":542,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:22",{"_index":546,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:225",{"_index":488,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:23",{"_index":550,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:24",{"_index":561,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:25",{"_index":548,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:251",{"_index":516,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:27",{"_index":553,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:28",{"_index":556,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:29",{"_index":555,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:30",{"_index":470,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:37",{"_index":559,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:54",{"_index":481,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:63",{"_index":519,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:81",{"_index":507,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/codefetch.service.ts:92",{"_index":513,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["src/app/confirmdialog/confirmdialog.component.ts",{"_index":672,"title":{},"body":{"components/ConfirmDialog.html":{},"coverage.html":{}}}],["src/app/confirmdialog/confirmdialog.component.ts:22",{"_index":684,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["src/app/confirmdialog/confirmdialog.component.ts:26",{"_index":691,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["src/app/confirmdialog/confirmdialog.component.ts:31",{"_index":686,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["src/app/confirmdialog/confirmdialog.component.ts:38",{"_index":690,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["src/app/connectpart.service.ts",{"_index":699,"title":{},"body":{"injectables/ConnectpartService.html":{},"coverage.html":{}}}],["src/app/connectpart.service.ts:12",{"_index":709,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["src/app/connectpart.service.ts:13",{"_index":703,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["src/app/connectpart.service.ts:23",{"_index":705,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["src/app/contestlist/contestlist.component.ts",{"_index":726,"title":{},"body":{"components/ContestlistComponent.html":{},"coverage.html":{}}}],["src/app/contestlist/contestlist.component.ts:17",{"_index":751,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["src/app/contestlist/contestlist.component.ts:18",{"_index":764,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["src/app/contestlist/contestlist.component.ts:19",{"_index":765,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["src/app/contestlist/contestlist.component.ts:20",{"_index":745,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["src/app/contestlist/contestlist.component.ts:33",{"_index":752,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["src/app/contestlist/contestlist.component.ts:53",{"_index":755,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["src/app/dashboard/competing/competing.component.ts",{"_index":625,"title":{},"body":{"components/CompetingComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/competing/competing.component.ts:17",{"_index":642,"title":{},"body":{"components/CompetingComponent.html":{}}}],["src/app/dashboard/contests/contests.component.ts",{"_index":780,"title":{},"body":{"components/ContestsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/contests/contests.component.ts:18",{"_index":805,"title":{},"body":{"components/ContestsComponent.html":{}}}],["src/app/dashboard/contests/contests.component.ts:19",{"_index":807,"title":{},"body":{"components/ContestsComponent.html":{}}}],["src/app/dashboard/contests/contests.component.ts:20",{"_index":809,"title":{},"body":{"components/ContestsComponent.html":{}}}],["src/app/dashboard/contests/contests.component.ts:21",{"_index":806,"title":{},"body":{"components/ContestsComponent.html":{}}}],["src/app/dashboard/contests/contests.component.ts:22",{"_index":800,"title":{},"body":{"components/ContestsComponent.html":{}}}],["src/app/dashboard/contests/contests.component.ts:23",{"_index":808,"title":{},"body":{"components/ContestsComponent.html":{}}}],["src/app/dashboard/contests/contests.component.ts:24",{"_index":793,"title":{},"body":{"components/ContestsComponent.html":{}}}],["src/app/dashboard/contests/contests.component.ts:36",{"_index":798,"title":{},"body":{"components/ContestsComponent.html":{}}}],["src/app/dashboard/dashboard",{"_index":895,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:16",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:21",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.module.ts",{"_index":883,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/editor/editor.component.ts",{"_index":900,"title":{},"body":{"components/EditorComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/editor/editor.component.ts:115",{"_index":929,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:132",{"_index":923,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:17",{"_index":934,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:18",{"_index":937,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:19",{"_index":931,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:20",{"_index":936,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:21",{"_index":939,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:22",{"_index":932,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:24",{"_index":914,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:40",{"_index":941,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:50",{"_index":945,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:59",{"_index":917,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:84",{"_index":951,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/editor/editor.component.ts:92",{"_index":953,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/dashboard/main/main.component.ts",{"_index":1540,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/main/main.component.ts:128",{"_index":1550,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:146",{"_index":1558,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:162",{"_index":1555,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:172",{"_index":1554,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:19",{"_index":1564,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:20",{"_index":1566,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:21",{"_index":1563,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:215",{"_index":1551,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:22",{"_index":1559,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:23",{"_index":1560,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:24",{"_index":1561,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:26",{"_index":1567,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:28",{"_index":1565,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:30",{"_index":1568,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:32",{"_index":1569,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:33",{"_index":1571,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:35",{"_index":1547,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:56",{"_index":1549,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/main/main.component.ts:78",{"_index":1557,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts",{"_index":1629,"title":{},"body":{"components/ProblemComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/problem/problem.component.ts:119",{"_index":1645,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:24",{"_index":1657,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:25",{"_index":1659,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:26",{"_index":1663,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:27",{"_index":1662,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:28",{"_index":1666,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:29",{"_index":1661,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:30",{"_index":1670,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:31",{"_index":1668,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:32",{"_index":1669,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:34",{"_index":1667,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:35",{"_index":1664,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:36",{"_index":1665,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:37",{"_index":1660,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:38",{"_index":1642,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:87",{"_index":1650,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/dashboard/problem/problem.component.ts:96",{"_index":1652,"title":{},"body":{"components/ProblemComponent.html":{}}}],["src/app/fileinterface",{"_index":660,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["src/app/fileinterface.ts",{"_index":1828,"title":{},"body":{"interfaces/TreeNode.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["src/app/filelist/filelist.component.ts",{"_index":1027,"title":{},"body":{"components/FilelistComponent.html":{},"coverage.html":{}}}],["src/app/filelist/filelist.component.ts:103",{"_index":1060,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:122",{"_index":1080,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:142",{"_index":1076,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:160",{"_index":1072,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:19",{"_index":1090,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:20",{"_index":1089,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:203",{"_index":1067,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:21",{"_index":1091,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:22",{"_index":1085,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:23",{"_index":1086,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:24",{"_index":1087,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:25",{"_index":1093,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:26",{"_index":1092,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:28",{"_index":1047,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:47",{"_index":1054,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/filelist/filelist.component.ts:71",{"_index":1077,"title":{},"body":{"components/FilelistComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":1300,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":1305,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts",{"_index":1460,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:17",{"_index":1472,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:18",{"_index":1471,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:19",{"_index":1476,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:20",{"_index":1477,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:21",{"_index":1468,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:32",{"_index":1473,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component",{"_index":1098,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts",{"_index":1596,"title":{},"body":{"components/NewfiledialogComponent.html":{},"coverage.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts:32",{"_index":1602,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts:35",{"_index":1614,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts:36",{"_index":1612,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts:37",{"_index":1613,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts:38",{"_index":1611,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts:43",{"_index":1604,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts:73",{"_index":1603,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["src/app/newfiledialog/newfiledialog.component.ts:82",{"_index":1609,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["src/app/problemlist/problemlist.component.ts",{"_index":1718,"title":{},"body":{"components/ProblemlistComponent.html":{},"coverage.html":{}}}],["src/app/problemlist/problemlist.component.ts:17",{"_index":1725,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["src/app/problemlist/problemlist.component.ts:18",{"_index":1733,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["src/app/problemlist/problemlist.component.ts:19",{"_index":1734,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["src/app/problemlist/problemlist.component.ts:20",{"_index":1723,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["src/app/problemlist/problemlist.component.ts:32",{"_index":1726,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["src/app/problemlist/problemlist.component.ts:53",{"_index":1727,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["src/app/renamefiledialog/renamefiledialog.component",{"_index":1100,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["src/app/renamefiledialog/renamefiledialog.component.ts",{"_index":1772,"title":{},"body":{"components/RenamefileDialog.html":{},"coverage.html":{}}}],["src/app/renamefiledialog/renamefiledialog.component.ts:26",{"_index":1777,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["src/app/renamefiledialog/renamefiledialog.component.ts:29",{"_index":1781,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["src/app/renamefiledialog/renamefiledialog.component.ts:31",{"_index":1779,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["src/app/renamefiledialog/renamefiledialog.component.ts:38",{"_index":1778,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["src/app/renamefiledialog/renamefiledialog.component.ts:46",{"_index":1780,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["src/app/statementsfetchservice.service",{"_index":658,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["src/app/statementsfetchservice.service.ts",{"_index":1893,"title":{},"body":{"coverage.html":{},"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:105",{"_index":2014,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:114",{"_index":2012,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:123",{"_index":2003,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:18",{"_index":2028,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:19",{"_index":2030,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:20",{"_index":2025,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:21",{"_index":2036,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:22",{"_index":2034,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:23",{"_index":2032,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:24",{"_index":2023,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:25",{"_index":1990,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:31",{"_index":2037,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:38",{"_index":2015,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:56",{"_index":2006,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:66",{"_index":2000,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:76",{"_index":1996,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:87",{"_index":2008,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/statementsfetchservice.service.ts:96",{"_index":2021,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["src/app/submissiontable/submissiontable.component.ts",{"_index":1785,"title":{},"body":{"components/SubmissiontableComponent.html":{},"coverage.html":{}}}],["src/app/submissiontable/submissiontable.component.ts:16",{"_index":1791,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["src/app/submissiontable/submissiontable.component.ts:17",{"_index":1792,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["src/app/submissiontable/submissiontable.component.ts:18",{"_index":1793,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["src/app/submissiontable/submissiontable.component.ts:19",{"_index":1790,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["src/app/token.interceptor.ts",{"_index":1810,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/token.interceptor.ts:11",{"_index":1817,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/userdetails",{"_index":1247,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/userdetails.ts",{"_index":1535,"title":{},"body":{"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.ts",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["src/test.ts",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["standing",{"_index":1838,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["started",{"_index":1931,"title":{"index.html":{}},"body":{}}],["starting",{"_index":761,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["state",{"_index":742,"title":{},"body":{"components/ContestlistComponent.html":{},"injectables/statementsFetchService.html":{}}}],["statement",{"_index":732,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["statementinterface",{"_index":659,"title":{"interfaces/statementInterface.html":{}},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"interfaces/TreeNode.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["statements",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["statementsfetchservice",{"_index":641,"title":{"injectables/statementsFetchService.html":{}},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"injectables/statementsFetchService.html":{}}}],["statementsfetchservice.service",{"_index":766,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["static",{"_index":804,"title":{},"body":{"components/ContestsComponent.html":{},"modules/ThemeModule.html":{}}}],["status",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodefetchService.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/ProblemComponent.html":{},"components/RegisterComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["status:nbcomponentstatus",{"_index":617,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["status:string",{"_index":961,"title":{},"body":{"components/EditorComponent.html":{}}}],["statusmessage",{"_index":1638,"title":{},"body":{"components/ProblemComponent.html":{}}}],["status}}command",{"_index":1026,"title":{},"body":{"components/EditorComponent.html":{}}}],["stmtservice",{"_index":743,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["storage",{"_index":1332,"title":{},"body":{"components/HomeComponent.html":{}}}],["store",{"_index":1331,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["stored",{"_index":1606,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["strategies",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/CodefetchService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["stringifyoptions",{"_index":1832,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["structurl",{"_index":450,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["styles",{"_index":624,"title":{},"body":{"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["styles/themes",{"_index":1266,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styleurls",{"_index":634,"title":{},"body":{"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["styling",{"_index":921,"title":{},"body":{"components/EditorComponent.html":{}}}],["subfolders(no",{"_index":517,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["subheading",{"_index":839,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["subject",{"_index":554,"title":{},"body":{"injectables/CodefetchService.html":{},"components/HeaderComponent.html":{}}}],["submiited",{"_index":1082,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["submission",{"_index":1651,"title":{},"body":{"components/ProblemComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["submissionbuilder",{"_index":744,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["submissiondata",{"_index":736,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["submissioninterface",{"_index":1671,"title":{"interfaces/submissionInterface.html":{}},"body":{"components/ProblemComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["submissions",{"_index":1732,"title":{},"body":{"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["submissionscolumns",{"_index":737,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["submissionsource",{"_index":738,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["submissionstatus",{"_index":1639,"title":{},"body":{"components/ProblemComponent.html":{}}}],["submissiontable",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["submissiontable.component.html",{"_index":1789,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["submissiontable.component.scss",{"_index":1788,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["submissiontable/submissiontable.component",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/ProblemComponent.html":{}}}],["submissiontablecomponent",{"_index":192,"title":{"components/SubmissiontableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["submissionurl",{"_index":1980,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["submit",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/HomeComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/RenamefileDialog.html":{},"injectables/statementsFetchService.html":{}}}],["submit(name",{"_index":1608,"title":{},"body":{"components/NewfiledialogComponent.html":{},"components/RenamefileDialog.html":{}}}],["submitproblem",{"_index":1989,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["submitproblem(data",{"_index":2020,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["submits",{"_index":1653,"title":{},"body":{"components/ProblemComponent.html":{}}}],["submitting",{"_index":1690,"title":{},"body":{"components/ProblemComponent.html":{}}}],["submiturl",{"_index":1981,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["subscribe",{"_index":602,"title":{},"body":{"injectables/CodefetchService.html":{},"components/HeaderComponent.html":{}}}],["subscribe((userdetail",{"_index":1249,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(data",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribes",{"_index":1236,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subtitle",{"_index":1435,"title":{},"body":{"components/HomeComponent.html":{}}}],["success",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"injectables/CodefetchService.html":{},"interfaces/LoginForm.html":{},"components/ProblemComponent.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"interfaces/output_interface.html":{}}}],["successful",{"_index":497,"title":{},"body":{"injectables/CodefetchService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":506,"title":{},"body":{"injectables/CodefetchService.html":{},"components/EditorComponent.html":{}}}],["super(service",{"_index":1509,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["support",{"_index":1353,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["supporting",{"_index":1413,"title":{},"body":{"components/HomeComponent.html":{}}}],["svg",{"_index":1956,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1728,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["synchronised",{"_index":947,"title":{},"body":{"components/EditorComponent.html":{}}}],["syntax",{"_index":1356,"title":{},"body":{"components/HomeComponent.html":{}}}],["system",{"_index":439,"title":{},"body":{"injectables/CodefetchService.html":{},"components/HomeComponent.html":{}}}],["systems",{"_index":1365,"title":{},"body":{"components/HomeComponent.html":{}}}],["t",{"_index":1831,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["tab",{"_index":835,"title":{},"body":{"components/ContestsComponent.html":{}}}],["table",{"_index":708,"title":{},"body":{"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemlistComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["tabsize",{"_index":971,"title":{},"body":{"components/EditorComponent.html":{}}}],["tag",{"_index":1607,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["take",{"_index":1377,"title":{},"body":{"components/HomeComponent.html":{}}}],["taken",{"_index":1610,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["takes",{"_index":1462,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{}}}],["takeuntil",{"_index":1245,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tap",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{}}}],["tasks",{"_index":1404,"title":{},"body":{"components/HomeComponent.html":{}}}],["tells",{"_index":505,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["template",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["templateref",{"_index":653,"title":{},"body":{"components/CompetingComponent.html":{},"components/FilelistComponent.html":{},"components/ProblemComponent.html":{}}}],["templateurl",{"_index":636,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["terms",{"_index":1763,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":1352,"title":{},"body":{"components/HomeComponent.html":{}}}],["text",{"_index":666,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["theme(divider",{"_index":1292,"title":{},"body":{"components/HeaderComponent.html":{}}}],["theme(header",{"_index":1275,"title":{},"body":{"components/HeaderComponent.html":{}}}],["theme(layout",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["theme(sidebar",{"_index":1274,"title":{},"body":{"components/HeaderComponent.html":{}}}],["theme(text",{"_index":1284,"title":{},"body":{"components/HeaderComponent.html":{}}}],["theme/theme.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["thememodule",{"_index":210,"title":{"modules/ThemeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ThemeModule.html":{},"modules.html":{},"overview.html":{}}}],["thememodule.forroot",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["themes",{"_index":920,"title":{},"body":{"components/EditorComponent.html":{}}}],["themes.scss",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{}}}],["then(m",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["this._codeservice.postdata(this.code_data).subscribe",{"_index":1010,"title":{},"body":{"components/EditorComponent.html":{}}}],["this._codestore.setcode(id",{"_index":596,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this._dialogservice.open(confirmdialog",{"_index":611,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this._dialogservice.open(dialog).onclose.subscribe",{"_index":1159,"title":{},"body":{"components/FilelistComponent.html":{},"components/ProblemComponent.html":{}}}],["this._dialogservice.open(newfiledialogcomponent",{"_index":1129,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._dialogservice.open(renamefiledialog",{"_index":1137,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._fileservice.changeopenedfile({name",{"_index":1105,"title":{},"body":{"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/RegisterComponent.html":{}}}],["this._fileservice.createfile(data[2],data[0],data[1",{"_index":1132,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._fileservice.deletefile(this.activefileid.tostring",{"_index":1112,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._fileservice.getfilelist().subscribe",{"_index":712,"title":{},"body":{"injectables/ConnectpartService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._fileservice.getfiles().subscribe",{"_index":1683,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this._fileservice.getfolder().subscribe",{"_index":1615,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["this._fileservice.handleerror(_data[\"message\"],this._fileservice.toastrservice",{"_index":720,"title":{},"body":{"injectables/ConnectpartService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["this._fileservice.handleerror(error,this._fileservice.toastrservice",{"_index":1121,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._fileservice.openedfile",{"_index":963,"title":{},"body":{"components/EditorComponent.html":{}}}],["this._fileservice.openedfile.id",{"_index":1123,"title":{},"body":{"components/FilelistComponent.html":{}}}],["this._fileservice.openedfile.name",{"_index":1122,"title":{},"body":{"components/FilelistComponent.html":{}}}],["this._fileservice.openedfile.path",{"_index":1124,"title":{},"body":{"components/FilelistComponent.html":{}}}],["this._fileservice.openedfiledata",{"_index":968,"title":{},"body":{"components/EditorComponent.html":{}}}],["this._fileservice.openedfiledatachange.next",{"_index":1514,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this._fileservice.readfile",{"_index":1114,"title":{},"body":{"components/FilelistComponent.html":{}}}],["this._fileservice.readfile(s.data.id",{"_index":1147,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._fileservice.readfile(this.activefileid.tostring",{"_index":1109,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._fileservice.readfiledata(id).subscribe",{"_index":719,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["this._fileservice.renamefile(par.tostring",{"_index":1140,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this._fileservice.updatefile(this.openedfile.id.tostring",{"_index":996,"title":{},"body":{"components/EditorComponent.html":{}}}],["this._route.snapshot.parammap.get('id",{"_index":812,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["this._sd.getdetails",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/HeaderComponent.html":{}}}],["this._sd.logoutuser",{"_index":1259,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.active",{"_index":725,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["this.activefileid",{"_index":1107,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.activefilename",{"_index":1106,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.activefilename}}).onclose.subscribe",{"_index":1139,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.activefilepath",{"_index":1108,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.api.loginuser(this.user",{"_index":1510,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.api.logoutuser().subscribe(res",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.api.registeruser(this.user",{"_index":1748,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.callback",{"_index":711,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["this.callback(_data[\"structure\"],this.active",{"_index":717,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["this.checked",{"_index":1624,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["this.child.initialise",{"_index":1694,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.child2.initialise",{"_index":1695,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.cli",{"_index":1006,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.code_data",{"_index":1002,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.config",{"_index":830,"title":{},"body":{"components/ContestsComponent.html":{}}}],["this.contestid}).subscribe",{"_index":1736,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["this.count",{"_index":824,"title":{},"body":{"components/ContestsComponent.html":{}}}],["this.countdown.restart",{"_index":833,"title":{},"body":{"components/ContestsComponent.html":{}}}],["this.countdown.stop",{"_index":828,"title":{},"body":{"components/ContestsComponent.html":{}}}],["this.customcolumn",{"_index":1088,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.data",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["this.data.loggedin",{"_index":352,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["this.datasource",{"_index":1119,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.datasourcebuilder.create(this.data",{"_index":1120,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.defaultcolumns",{"_index":1562,"title":{},"body":{"components/MainComponent.html":{}}}],["this.destroy$.complete",{"_index":1262,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.destroy$.next",{"_index":1261,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dir",{"_index":1620,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["this.dirlist",{"_index":1616,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["this.dirlist.push(..._data[\"data",{"_index":1619,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["this.editor",{"_index":964,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.editor.geteditor().commands.addcommand",{"_index":978,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.editor.geteditor().setoptions",{"_index":969,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.editor.mode",{"_index":977,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.editor.setreadonly(ret.id",{"_index":965,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.editor.settheme('dracula",{"_index":976,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.editor.value",{"_index":997,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.errormsg",{"_index":1516,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errorocc",{"_index":1517,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.handleerror(_data[\"message",{"_index":591,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.handleerror(error",{"_index":579,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["this.http.get(this._url",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(this.filesurl",{"_index":581,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.http.get(this.folderurl",{"_index":623,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.http.get(this.structurl",{"_index":577,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.http.post(this._url",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(this.codeurl,{file_id",{"_index":582,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.http.post(this.contestscoreurl",{"_index":2047,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["this.http.post(this.contestsurl",{"_index":2039,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["this.http.post(this.contesturl",{"_index":2040,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["this.http.post(this.createurl,data).pipe",{"_index":621,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.http.post(this.deleteurl",{"_index":615,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.http.post(this.posturl",{"_index":430,"title":{},"body":{"injectables/CodeService.html":{}}}],["this.http.post(this.problemsurl",{"_index":2038,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["this.http.post(this.problemurl",{"_index":2041,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["this.http.post(this.scoreurl",{"_index":2046,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["this.http.post(this.submissionurl",{"_index":2045,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["this.http.post(this.submiturl",{"_index":2043,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["this.http.post(this.updateurl",{"_index":599,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.httpoptions",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.id",{"_index":811,"title":{},"body":{"components/ContestsComponent.html":{}}}],["this.id}).subscribe",{"_index":814,"title":{},"body":{"components/ContestsComponent.html":{}}}],["this.initialise",{"_index":775,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["this.input",{"_index":1004,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.isfile",{"_index":1170,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.items",{"_index":1150,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.lang",{"_index":984,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.language",{"_index":1005,"title":{},"body":{"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["this.layoutservice.changelayoutsize",{"_index":1265,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.loading",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["this.location.navigate(['/dashboard/editor",{"_index":721,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["this.location.routereusestrategy.shouldreuseroute",{"_index":710,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["this.memory_limit",{"_index":1679,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.menuservice.onitemclick().subscribe",{"_index":1257,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.name",{"_index":815,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["this.newfile(this.activefileid",{"_index":1115,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.oldname",{"_index":1783,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["this.onclick(dialog",{"_index":1698,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.openedfile",{"_index":568,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.openedfile.id.tostring",{"_index":1007,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.openedfilechange.next(f",{"_index":572,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.openedfilechange.subscribe((value",{"_index":567,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.openedfiledata",{"_index":570,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.openedfiledatachange.next",{"_index":587,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.openedfiledatachange.next(_data[\"data",{"_index":595,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.openedfiledatachange.next(data",{"_index":604,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.openedfiledatachange.subscribe((value",{"_index":569,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.output",{"_index":1001,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.par",{"_index":1621,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["this.problemid",{"_index":1673,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.problemid}).subscribe",{"_index":1482,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["this.readfiledata(id).subscribe",{"_index":588,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.ref.close",{"_index":1626,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["this.ref.close([name,this.checked,this.dir",{"_index":1628,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["this.ref.close(false",{"_index":693,"title":{},"body":{"components/ConfirmDialog.html":{},"components/RenamefileDialog.html":{}}}],["this.ref.close(name",{"_index":1784,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["this.ref.close(true",{"_index":694,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["this.refreshfilestructure",{"_index":1113,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.refreshfilestructure().bind(this",{"_index":1102,"title":{},"body":{"components/FilelistComponent.html":{}}}],["this.refreshuserdetails",{"_index":1256,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.renamefile(this.activefileid",{"_index":1117,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.returndata",{"_index":1511,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.returndata.success",{"_index":1513,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.rightclickedrow",{"_index":1148,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["this.router.navigate(['/dashboard/contest",{"_index":776,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["this.router.navigate(['/dashboard/editor",{"_index":586,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.router.navigate(['/dashboard/problem",{"_index":1739,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["this.router.navigate(['auth','login",{"_index":353,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["this.router.navigate(['dashboard",{"_index":1515,"title":{},"body":{"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['dashboard','main",{"_index":358,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{}}}],["this.router.navigate(['home",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["this.router.navigate(x",{"_index":1260,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.rt.navigate(x",{"_index":1325,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.save",{"_index":1000,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.selected",{"_index":1684,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.selectedid",{"_index":1686,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.setsession(res",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.sidebarservice.collapse('code",{"_index":663,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemComponent.html":{}}}],["this.sidebarservice.expand('code",{"_index":983,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.sidebarservice.toggle(true",{"_index":1264,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sortcolumn",{"_index":1575,"title":{},"body":{"components/MainComponent.html":{}}}],["this.sortdirection",{"_index":1577,"title":{},"body":{"components/MainComponent.html":{}}}],["this.statement",{"_index":1676,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.state}).subscribe",{"_index":769,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["this.status",{"_index":1008,"title":{},"body":{"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["this.statusmessage",{"_index":1697,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.stmtservice.getcontest({id",{"_index":813,"title":{},"body":{"components/ContestsComponent.html":{}}}],["this.stmtservice.getcontests({state",{"_index":768,"title":{},"body":{"components/ContestlistComponent.html":{}}}],["this.stmtservice.getcontestscores({contest_id",{"_index":1484,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.stmtservice.getproblems({contest_id",{"_index":1735,"title":{},"body":{"components/ProblemlistComponent.html":{}}}],["this.stmtservice.getproblemstatement(this.problemid).subscribe",{"_index":1674,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.stmtservice.getscores({problem_id",{"_index":1481,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.stmtservice.getsubmissions({problem_id",{"_index":1794,"title":{},"body":{"components/SubmissiontableComponent.html":{}}}],["this.stmtservice.submitproblem(data).subscribe",{"_index":1691,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.submissionbuilder.create(this.submissiondata",{"_index":774,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["this.submissiondata",{"_index":770,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["this.submissionsource",{"_index":773,"title":{},"body":{"components/ContestlistComponent.html":{},"components/LeaderboardComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{}}}],["this.submissionstatus",{"_index":1689,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.submit",{"_index":1699,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.text",{"_index":821,"title":{},"body":{"components/ContestsComponent.html":{}}}],["this.time_limit",{"_index":1681,"title":{},"body":{"components/ProblemComponent.html":{}}}],["this.toastrservice",{"_index":592,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.toastrservice)}).bind(this",{"_index":580,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["this.toastrservice.show(\"saved",{"_index":605,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.toastrservice.show(_data[\"message",{"_index":618,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["this.toastrservice.show(error.error.message",{"_index":1518,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastrservice.show(object.values(json.parse(error.error.errors))[0][0].message",{"_index":1750,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.type",{"_index":1479,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.user",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["this.user.first_name",{"_index":1252,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.user.last_name",{"_index":1253,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.user.success",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.usermenu",{"_index":1251,"title":{},"body":{"components/HeaderComponent.html":{}}}],["though",{"_index":1376,"title":{},"body":{"components/HomeComponent.html":{}}}],["through",{"_index":1632,"title":{},"body":{"components/ProblemComponent.html":{},"index.html":{}}}],["throwerror",{"_index":409,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["thus",{"_index":1941,"title":{},"body":{"index.html":{}}}],["ticking",{"_index":1391,"title":{},"body":{"components/HomeComponent.html":{}}}],["till",{"_index":822,"title":{},"body":{"components/ContestsComponent.html":{}}}],["time",{"_index":762,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/ProblemComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["time_limit",{"_index":1640,"title":{},"body":{"components/ProblemComponent.html":{}}}],["time_limit}}s",{"_index":1701,"title":{},"body":{"components/ProblemComponent.html":{}}}],["timely",{"_index":1386,"title":{},"body":{"components/HomeComponent.html":{}}}],["tiny",{"_index":1339,"title":{},"body":{"components/HomeComponent.html":{}}}],["title",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["tlimit",{"_index":1836,"title":{},"body":{"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["toaster",{"_index":2018,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["toastr",{"_index":520,"title":{},"body":{"injectables/CodefetchService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["toastrservice",{"_index":452,"title":{},"body":{"injectables/CodefetchService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/statementsFetchService.html":{}}}],["toasts",{"_index":1993,"title":{},"body":{"injectables/statementsFetchService.html":{}}}],["toggle",{"_index":1279,"title":{},"body":{"components/HeaderComponent.html":{}}}],["toggle(checked",{"_index":1623,"title":{},"body":{"components/NewfiledialogComponent.html":{}}}],["togglesidebar",{"_index":1263,"title":{},"body":{"components/HeaderComponent.html":{}}}],["token",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/LoginForm.html":{},"interfaces/SignUpForm.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/User.html":{}}}],["token.interceptor",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["tokeninterceptor",{"_index":213,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["tons",{"_index":1402,"title":{},"body":{"components/HomeComponent.html":{}}}],["top",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ProblemComponent.html":{}}}],["topromise",{"_index":610,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["total",{"_index":1338,"title":{},"body":{"components/HomeComponent.html":{},"components/ProblemlistComponent.html":{}}}],["transform",{"_index":1428,"title":{},"body":{"components/HomeComponent.html":{}}}],["translate",{"_index":1429,"title":{},"body":{"components/HomeComponent.html":{}}}],["transparent",{"_index":1182,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["trash",{"_index":1154,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["tree",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["treenode",{"_index":563,"title":{"interfaces/TreeNode.html":{}},"body":{"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"interfaces/submissionInterface.html":{}}}],["trigger",{"_index":706,"title":{},"body":{"injectables/ConnectpartService.html":{}}}],["true",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CodefetchService.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/LoginComponent.html":{},"components/NewfiledialogComponent.html":{}}}],["try",{"_index":427,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/HomeComponent.html":{},"injectables/statementsFetchService.html":{}}}],["tserve",{"_index":518,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["tserve.show(error.error.message",{"_index":575,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/statementsFetchService.html":{}}}],["tslib",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":785,"title":{},"body":{"components/ContestsComponent.html":{},"components/RenamefileDialog.html":{}}}],["type",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"injectables/ConnectpartService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"interceptors/TokenInterceptor.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"interfaces/code_interface.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/output_interface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["typecastable",{"_index":530,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["typography",{"_index":1711,"title":{},"body":{"components/ProblemComponent.html":{}}}],["ui",{"_index":1341,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/EditorComponent.html":{}}}],["unique",{"_index":1363,"title":{},"body":{"components/HomeComponent.html":{}}}],["up",{"_index":1051,"title":{},"body":{"components/FilelistComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{}}}],["update",{"_index":537,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["updated",{"_index":540,"title":{},"body":{"injectables/CodefetchService.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["updatefile",{"_index":463,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["updatefile(id",{"_index":535,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["updates",{"_index":1177,"title":{},"body":{"components/FilelistComponent.html":{}}}],["updatesort(sortrequest",{"_index":1574,"title":{},"body":{"components/MainComponent.html":{}}}],["updateurl",{"_index":453,"title":{},"body":{"injectables/CodefetchService.html":{}}}],["upon",{"_index":1501,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["url",{"_index":783,"title":{},"body":{"components/ContestsComponent.html":{},"components/ProblemComponent.html":{}}}],["url(\"../../assets/coverback.jpg",{"_index":1421,"title":{},"body":{"components/HomeComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=jetbrains+mono:wght@100&display=swap",{"_index":1418,"title":{},"body":{"components/HomeComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=noto+sans+jp&family=audiowide&display=swap",{"_index":1267,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["url/router",{"_index":648,"title":{},"body":{"components/CompetingComponent.html":{}}}],["use",{"_index":1393,"title":{},"body":{"components/HomeComponent.html":{}}}],["useclass",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":380,"title":{},"body":{"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/code_interface.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["user",{"_index":10,"title":{"interfaces/User.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"injectables/CodefetchService.html":{},"components/ContestlistComponent.html":{},"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/MainComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SignUpForm.html":{},"components/SubmissiontableComponent.html":{},"interfaces/TreeNode.html":{},"interfaces/User.html":{},"coverage.html":{},"interfaces/fileInterface.html":{},"interfaces/scoreInterface.html":{},"interfaces/statementInterface.html":{},"injectables/statementsFetchService.html":{},"interfaces/submissionInterface.html":{}}}],["userdetail",{"_index":1250,"title":{},"body":{"components/HeaderComponent.html":{}}}],["userdetails",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuard.html":{},"guards/AuthGuard2.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["userdetais.ts",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{}}}],["usermenu",{"_index":1215,"title":{},"body":{"components/HeaderComponent.html":{}}}],["username",{"_index":1519,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/LoginForm.html":{},"components/RegisterComponent.html":{},"interfaces/SignUpForm.html":{},"interfaces/User.html":{}}}],["userpictureonly",{"_index":1216,"title":{},"body":{"components/HeaderComponent.html":{}}}],["users",{"_index":1366,"title":{},"body":{"components/HomeComponent.html":{}}}],["uses",{"_index":523,"title":{},"body":{"injectables/CodefetchService.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/MainComponent.html":{},"components/ProblemlistComponent.html":{},"index.html":{}}}],["using",{"_index":731,"title":{},"body":{"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["val",{"_index":958,"title":{},"body":{"components/EditorComponent.html":{},"components/MainComponent.html":{}}}],["val/1000",{"_index":1591,"title":{},"body":{"components/MainComponent.html":{}}}],["val/1000000",{"_index":1589,"title":{},"body":{"components/MainComponent.html":{}}}],["val/1000000000",{"_index":1586,"title":{},"body":{"components/MainComponent.html":{}}}],["value",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/CodeService.html":{},"injectables/CodefetchService.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/LeaderboardComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["var",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["variable",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["various",{"_index":1405,"title":{},"body":{"components/HomeComponent.html":{}}}],["very",{"_index":1333,"title":{},"body":{"components/HomeComponent.html":{}}}],["vibhav",{"_index":1948,"title":{},"body":{"index.html":{}}}],["view",{"_index":627,"title":{},"body":{"components/CompetingComponent.html":{},"components/ContestsComponent.html":{},"components/MainComponent.html":{},"components/ProblemlistComponent.html":{}}}],["view'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["viewchild",{"_index":810,"title":{},"body":{"components/ContestsComponent.html":{},"components/EditorComponent.html":{},"components/ProblemComponent.html":{}}}],["viewchild('cd",{"_index":803,"title":{},"body":{"components/ContestsComponent.html":{}}}],["viewchild('editor",{"_index":933,"title":{},"body":{"components/EditorComponent.html":{}}}],["viewchild(leaderboardcomponent",{"_index":1658,"title":{},"body":{"components/ProblemComponent.html":{}}}],["viewchild(submissiontablecomponent",{"_index":1656,"title":{},"body":{"components/ProblemComponent.html":{}}}],["void",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/CodefetchService.html":{},"components/CompetingComponent.html":{},"components/ConfirmDialog.html":{},"components/ContestlistComponent.html":{},"components/ContestsComponent.html":{},"components/DashboardComponent.html":{},"components/EditorComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LeaderboardComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NewfiledialogComponent.html":{},"components/ProblemComponent.html":{},"components/ProblemlistComponent.html":{},"components/RegisterComponent.html":{},"components/RenamefileDialog.html":{},"components/SubmissiontableComponent.html":{}}}],["waiting",{"_index":1388,"title":{},"body":{"components/HomeComponent.html":{}}}],["want",{"_index":1176,"title":{},"body":{"components/FilelistComponent.html":{},"components/HomeComponent.html":{},"injectables/statementsFetchService.html":{}}}],["website",{"_index":1301,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":1018,"title":{},"body":{"components/EditorComponent.html":{}}}],["whether",{"_index":495,"title":{},"body":{"injectables/CodefetchService.html":{},"components/FilelistComponent.html":{}}}],["white",{"_index":1294,"title":{},"body":{"components/HeaderComponent.html":{}}}],["whixh",{"_index":1773,"title":{},"body":{"components/RenamefileDialog.html":{}}}],["whose",{"_index":1631,"title":{},"body":{"components/ProblemComponent.html":{},"components/SubmissiontableComponent.html":{},"injectables/statementsFetchService.html":{}}}],["width",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{},"components/FilelistComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MainComponent.html":{}}}],["window",{"_index":1069,"title":{},"body":{"components/FilelistComponent.html":{}}}],["window.location.reload",{"_index":609,"title":{},"body":{"injectables/CodefetchService.html":{},"injectables/ConnectpartService.html":{}}}],["windows",{"_index":1052,"title":{},"body":{"components/FilelistComponent.html":{},"components/MainComponent.html":{}}}],["won't",{"_index":679,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["won\\'t",{"_index":697,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["work",{"_index":1344,"title":{},"body":{"components/HomeComponent.html":{}}}],["write",{"_index":901,"title":{},"body":{"components/EditorComponent.html":{},"components/HomeComponent.html":{}}}],["writing",{"_index":1360,"title":{},"body":{"components/HomeComponent.html":{}}}],["written",{"_index":924,"title":{},"body":{"components/EditorComponent.html":{}}}],["wrong",{"_index":1019,"title":{},"body":{"components/EditorComponent.html":{}}}],["x",{"_index":1225,"title":{},"body":{"components/HeaderComponent.html":{}}}],["yes",{"_index":1179,"title":{},"body":{"components/FilelistComponent.html":{}}}],["z",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{}}}],["zone.js",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/ThemeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api.service.ts\n        \n\n            \n                Description\n            \n            \n                This service deals with user authentication and provides basic user details like name, email, loggedin status, etc. to different components.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _url\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                loginUser\n                            \n                            \n                                logoutUser\n                            \n                            \n                                registerUser\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/api.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api.service.ts:28\n                \n            \n\n\n            \n                \n                    Makes a GET request to fetch basic user details from the server in the format defined by User interface in UserDetais.ts.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \nloginUser(data: LoginForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api.service.ts:45\n                \n            \n\n\n            \n                \n                    Makes a POST request to submit LoginForm data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/api.service.ts:53\n                \n            \n\n\n            \n                \n                    Makes a GET request to logout the current loggedin user.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \nregisterUser(data: SignUpForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api.service.ts:36\n                \n            \n\n\n            \n                \n                    Makes a POST request to submit SignUpForm data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SignUpForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSession(authResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api.service.ts:62\n                \n            \n\n\n            \n                \n                    Saves the token in localstorage if the server responds with success = True.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    authResult\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response obtained from the server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : API.ServerURL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User, SignUpForm, LoginForm } from './UserDetails';\nimport { HttpClient, HttpHandler, HttpHeaders, HttpClientXsrfModule } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import 'rxjs/add/observable/of';\nimport { API } from '../API';\nimport { tap } from 'rxjs/internal/operators';\n\n/**\n * This service deals with user authentication and provides basic user details like name, email, loggedin status, etc. to different components.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private _url: string = API.ServerURL;\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Makes a GET request to fetch basic user details from the server in the format defined by User interface in UserDetais.ts.\n   */\n  getDetails() : Observable {\n    return this.http.get(this._url + API.GetDetails);\n  }\n\n  /**\n   * Makes a POST request to submit SignUpForm data.\n   * @param {SignUpForm} data\n   */\n  registerUser(data: SignUpForm) : Observable {\n    return this.http.post(this._url + API.Register, data, this.httpOptions)\n            .pipe(tap(res => this.setSession(res)));\n  }\n\n  /**\n   * Makes a POST request to submit LoginForm data.\n   *  @param {LoginForm} data\n   */\n  loginUser(data: LoginForm) : Observable {\n    return this.http.post(this._url + API.Login, data, this.httpOptions)\n            .pipe(tap(res => this.setSession(res)));\n  }\n\n  /**\n   * Makes a GET request to logout the current loggedin user.\n   */\n  logoutUser() {\n    return this.http.get(this._url + API.Logout)\n              .pipe(tap(() => {localStorage.removeItem('token')}));\n  }\n\n  /**\n   * Saves the token in localstorage if the server responds with success = True.\n   * @param authResult The response obtained from the server\n   */\n  private setSession(authResult) {\n    if (authResult.success) {\n      localStorage.setItem('token', authResult.token);\n    }\n  }          \n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OCDE'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router, RouterEvent } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: ``,\n})\nexport class AppComponent {\n  title = 'OCDE';\n  loading: boolean;\n  constructor(router: Router) {\n    this.loading = false;\n    router.events.subscribe(\n      (event: RouterEvent): void => {\n        if (event instanceof NavigationStart) {\n          this.loading = true;\n        } else if (event instanceof NavigationEnd) {\n          this.loading = false;\n        }\n      }\n    );\n  }\n  \n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompetingComponent\n\nCompetingComponent\n\nAppModule -->\n\nCompetingComponent->AppModule\n\n\n\n\n\nConfirmDialog\n\nConfirmDialog\n\nAppModule -->\n\nConfirmDialog->AppModule\n\n\n\n\n\nContestlistComponent\n\nContestlistComponent\n\nAppModule -->\n\nContestlistComponent->AppModule\n\n\n\n\n\nContestsComponent\n\nContestsComponent\n\nAppModule -->\n\nContestsComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFilelistComponent\n\nFilelistComponent\n\nAppModule -->\n\nFilelistComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNewfiledialogComponent\n\nNewfiledialogComponent\n\nAppModule -->\n\nNewfiledialogComponent->AppModule\n\n\n\n\n\nProblemComponent\n\nProblemComponent\n\nAppModule -->\n\nProblemComponent->AppModule\n\n\n\n\n\nProblemlistComponent\n\nProblemlistComponent\n\nAppModule -->\n\nProblemlistComponent->AppModule\n\n\n\n\n\nRenamefileDialog\n\nRenamefileDialog\n\nAppModule -->\n\nRenamefileDialog->AppModule\n\n\n\n\n\nSubmissiontableComponent\n\nSubmissiontableComponent\n\nAppModule -->\n\nSubmissiontableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nThemeModule\n\nThemeModule\n\nAppModule -->\n\nThemeModule->AppModule\n\n\n\n\n\nCodeService\n\nCodeService\n\nAppModule -->\n\nCodeService->AppModule\n\n\n\n\n\nCodefetchService\n\nCodefetchService\n\nAppModule -->\n\nCodefetchService->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CompetingComponent\n                        \n                        \n                            ConfirmDialog\n                        \n                        \n                            ContestlistComponent\n                        \n                        \n                            ContestsComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FilelistComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LeaderboardComponent\n                        \n                        \n                            MainComponent\n                        \n                        \n                            NewfiledialogComponent\n                        \n                        \n                            ProblemComponent\n                        \n                        \n                            ProblemlistComponent\n                        \n                        \n                            RenamefileDialog\n                        \n                        \n                            SubmissiontableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CodeService\n                        \n                        \n                            CodefetchService\n                        \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ThemeModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ProblemComponent } from './dashboard/problem/problem.component';\nimport { CompetingComponent } from './dashboard/competing/competing.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NbSelectModule, NbThemeModule, NbLayoutModule, NbCardModule, NbButtonModule, NbListModule, NbSidebarModule, NbIconModule, NbTreeGridModule, NbInputModule, NbMenuModule, NbDialogModule, NbCheckboxModule, NbContextMenuModule, NbToastrModule, NbAlertModule, NbTabsetModule, NbActionsModule} from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { FsIconComponent, MainComponent } from './dashboard/main/main.component';\nimport { NbAuthModule, NbDummyAuthStrategy } from '@nebular/auth';\nimport { FilelistComponent } from './filelist/filelist.component';\nimport { CodefetchService } from './codefetch.service';\nimport { CodeService } from './code-compile-service.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './token.interceptor';\nimport { ThemeModule } from './@theme/theme.module';\nimport { NewfiledialogComponent } from './newfiledialog/newfiledialog.component';\nimport { ShContextMenuModule } from 'ng2-right-click-menu'\nimport { ConfirmDialog } from './confirmdialog/confirmdialog.component';\nimport { RenamefileDialog } from './renamefiledialog/renamefiledialog.component';\nimport { KatexModule } from 'ng-katex';\nimport { SubmissiontableComponent } from './submissiontable/submissiontable.component';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\nimport { ProblemlistComponent } from './problemlist/problemlist.component';\nimport { ContestlistComponent } from './contestlist/contestlist.component';\nimport { CountdownModule } from 'ngx-countdown';\nimport { ContestsComponent } from './dashboard/contests/contests.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DashboardComponent,\n    MainComponent,\n    CompetingComponent,\n    ProblemComponent,\n    FsIconComponent,\n    FilelistComponent,\n    NewfiledialogComponent,\n    ConfirmDialog,\n    RenamefileDialog,\n    SubmissiontableComponent,\n    LeaderboardComponent,\n    ProblemlistComponent,\n    ContestsComponent,\n    ContestlistComponent\n  ],\n  imports: [\n    // ParticlesModule,\n    BrowserModule,\n    AppRoutingModule,\n    NbTabsetModule,\n    BrowserAnimationsModule,\n    NbThemeModule.forRoot({ name: 'dark' }),\n    NbDialogModule.forRoot(),\n    NbCheckboxModule,\n    NbLayoutModule,\n    NbEvaIconsModule,\n    CountdownModule ,\n    KatexModule,\n    HttpClientModule,\n    NbListModule,\n    NbCardModule,\n    NbButtonModule,\n        NbAlertModule,\n    NbContextMenuModule,\n    NbSidebarModule.forRoot(),\n    NbIconModule,\n    NbSelectModule,\n    NbTreeGridModule,\n    NbActionsModule,\n    ShContextMenuModule,\n    NbInputModule,\n    NbToastrModule.forRoot(),\n    NbMenuModule.forRoot(),\n    ThemeModule.forRoot(),\n    NbAuthModule.forRoot({\n      strategies: [\n        NbDummyAuthStrategy.setup({\n          name: 'email',\n\n          alwaysFail: true,\n          delay: 1000,\n        }),\n      ],\n    }),\n  ],\n  providers: [\n    CodefetchService,\n    CodeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AuthGuard, AuthGuard2 } from './auth-guard';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module')\\\n      .then(m => m.AuthModule)\",\n    canActivate: [AuthGuard2],\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => \"import('./dashboard/dashboard.module')\\\n      .then(m => m.DashboardModule)\",\n    canActivate: [AuthGuard],\n  },\n  {\n  \tpath:'home',\n  \tcomponent: HomeComponent\n  },\n  { \n  \tpath: '**', \n  \tredirectTo: '/home', \n  \tpathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth-guard.ts\n            \n\n                \n                Description\n                \n                \n                    Prevents user from accessing dashboard if not logged in and redirects to login page in that case.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_sd: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth-guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _sd\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth-guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { User } from './UserDetails';\nimport { ApiService } from './api.service';\nimport { Router, CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/observable/of';\n\n/**\n * Prevents user from accessing dashboard if not logged in and redirects to login page in that case.\n */\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class AuthGuard implements CanActivate {\n    private data : User;\n\n    constructor(private _sd: ApiService, private router: Router) {}\n    canActivate(): Promise {\n        return new Promise((resolve, reject) => {this._sd.getDetails()\n            .subscribe(data => {\n                this.data = data;\n                // console.log(this.data);\n                if (this.data == undefined || !this.data.loggedin) {\n                    this.router.navigate(['auth','login']);\n                    resolve(false);  \n                } else{\n                    resolve(true);\n                } \n            }, error => {\n                this.router.navigate(['auth','login']);\n                resolve(false);\n            });\n        });\n    }\n}\n\n/**\n * Prevents user from accessing login/register page if logged in and redirects to dashboard in that case.\n */\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class AuthGuard2 implements CanActivate {\n    private data : User;\n\n    constructor(private _sd: ApiService, private router: Router) {}\n    canActivate(): Promise {\n        return new Promise((resolve, reject) => {this._sd.getDetails()\n            .subscribe(data => {\n                this.data = data;\n                // console.log(this.data);\n                if (this.data == undefined || !this.data.loggedin) {\n                    resolve(true);  \n                } else{\n                    this.router.navigate(['dashboard','main']);\n                    resolve(false);\n                } \n            }, error => {resolve(true);});\n        });\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard2.html":{"url":"guards/AuthGuard2.html","title":"guard - AuthGuard2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth-guard.ts\n            \n\n                \n                Description\n                \n                \n                    Prevents user from accessing login/register page if logged in and redirects to dashboard in that case.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_sd: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth-guard.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _sd\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth-guard.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { User } from './UserDetails';\nimport { ApiService } from './api.service';\nimport { Router, CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/observable/of';\n\n/**\n * Prevents user from accessing dashboard if not logged in and redirects to login page in that case.\n */\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class AuthGuard implements CanActivate {\n    private data : User;\n\n    constructor(private _sd: ApiService, private router: Router) {}\n    canActivate(): Promise {\n        return new Promise((resolve, reject) => {this._sd.getDetails()\n            .subscribe(data => {\n                this.data = data;\n                // console.log(this.data);\n                if (this.data == undefined || !this.data.loggedin) {\n                    this.router.navigate(['auth','login']);\n                    resolve(false);  \n                } else{\n                    resolve(true);\n                } \n            }, error => {\n                this.router.navigate(['auth','login']);\n                resolve(false);\n            });\n        });\n    }\n}\n\n/**\n * Prevents user from accessing login/register page if logged in and redirects to dashboard in that case.\n */\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class AuthGuard2 implements CanActivate {\n    private data : User;\n\n    constructor(private _sd: ApiService, private router: Router) {}\n    canActivate(): Promise {\n        return new Promise((resolve, reject) => {this._sd.getDetails()\n            .subscribe(data => {\n                this.data = data;\n                // console.log(this.data);\n                if (this.data == undefined || !this.data.loggedin) {\n                    resolve(true);  \n                } else{\n                    this.router.navigate(['dashboard','main']);\n                    resolve(false);\n                } \n            }, error => {resolve(true);});\n        });\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { NbAuthModule } from '@nebular/auth';\nimport { NbAlertModule, NbButtonModule, NbCheckboxModule, NbInputModule } from '@nebular/theme';\n\nimport { LoginComponent } from './login/login.component';\n\nimport { RegisterComponent } from './register/register.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    NbCheckboxModule,\n    AuthRoutingModule,\n\n    NbAuthModule,\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent\n  ],\n})\nexport class AuthModule {\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NbAuthComponent } from '@nebular/auth';\n\nimport { LoginComponent } from './login/login.component';\n\nimport { RegisterComponent } from './register/register.component';\nexport const routes: Routes = [\n  {\n    path: '',\n    component: NbAuthComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'register',\n        component: RegisterComponent,\n      }\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CodeService.html":{"url":"injectables/CodeService.html","title":"injectable - CodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/code-compile-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to send the code for compilation\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                postData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/code-compile-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/code-compile-service.service.ts:23\n                \n            \n\n\n            \n                \n                    A common function to handle all the errors while interacting with backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postData\n                        \n                        \n                    \n                \n            \n            \n                \npostData(data: code_interface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/code-compile-service.service.ts:40\n                \n            \n\n\n            \n                \n                    Function to send the command for running the code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                code_interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the sinput, command line arguments and file Id for the file which is to be run\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable that contains the output\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.compile\n                        \n                    \n                        \n                            \n                                    Defined in src/app/code-compile-service.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { code_interface, output_interface } from './code_interface';\nimport { API } from '../API';\n\n/**\n * Service used to send the code for compilation\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CodeService {\n  private postUrl = API.ServerURL + API.compile;\n  constructor(private http: HttpClient) { }\n  \n  /**\n   * A common function to handle all the errors while interacting with backend\n   * @param error The error object\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `message was: ${error.message}`);\n    }\n    return throwError(\n      error.message || 'Something bad happened; please try again later.');\n  }\n  \n  /**\n   * Function to send the command for running the code\n   * @param data Contains the sinput, command line arguments and file Id for the file which is to be run\n   * @returns Observable that contains the output\n   */\n  postData(data: code_interface): Observable {\n    return this.http.post(this.postUrl, data)\n    .pipe(\n      catchError(this.handleError)\n    )\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CodefetchService.html":{"url":"injectables/CodefetchService.html","title":"injectable - CodefetchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CodefetchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/codefetch.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to connect the frontend to the backend. This includes all the functions that are used to interact with the file system present on the backend.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                codeURL\n                            \n                            \n                                    Private\n                                createURL\n                            \n                            \n                                    Private\n                                deleteUrl\n                            \n                            \n                                    Private\n                                filesURL\n                            \n                            \n                                    Private\n                                folderURL\n                            \n                            \n                                openedFile\n                            \n                            \n                                openedFileChange\n                            \n                            \n                                openedFileData\n                            \n                            \n                                openedFileDataChange\n                            \n                            \n                                    Private\n                                structURL\n                            \n                            \n                                    Public\n                                toastrService\n                            \n                            \n                                    Private\n                                updateURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOpenedFile\n                            \n                            \n                                createFile\n                            \n                            \n                                deletefile\n                            \n                            \n                                getFileList\n                            \n                            \n                                getFiles\n                            \n                            \n                                getFolder\n                            \n                            \n                                handleError\n                            \n                            \n                                readfile\n                            \n                            \n                                readfiledata\n                            \n                            \n                                renamefile\n                            \n                            \n                                updatefile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastrService: NbToastrService, http: HttpClient, router: Router, activerouter: ActivatedRoute, _dialogService: NbDialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/codefetch.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    NbToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to display errors on the screen\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for making requests to the backend\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        activerouter\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        _dialogService\n                                                  \n                                                        \n                                                                    NbDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used in delete files to ask for confirmation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeOpenedFile\n                        \n                        \n                    \n                \n            \n            \n                \nchangeOpenedFile(f: fileInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:54\n                \n            \n\n\n            \n                \n                    Changes the current active file to f\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                fileInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file which has to be made active\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFile\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFile(parent: string, name: string, isFile: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:225\n                \n            \n\n\n            \n                \n                    Function to create new files and folders\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent directory in which the file is to be created\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the new File/Folder\n\n                                    \n                                \n                                \n                                    isFile\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the Object to be created is File or Folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise of the file ID if successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletefile\n                        \n                        \n                    \n                \n            \n            \n                \ndeletefile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:192\n                \n            \n\n\n            \n                \n                    Function used to delete a file. Caution: The file is permanently deleted from the server and can't be recovered\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        File Id of the file which is deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise which tells whether the file was deleted successfully or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFileList\n                        \n                        \n                    \n                \n            \n            \n                \ngetFileList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:81\n                \n            \n\n\n            \n                \n                    Get the list of all the files and directories belonging to the current user. \n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable containing the error or the file list. Castable to the FileInterface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFiles\n                        \n                        \n                    \n                \n            \n            \n                \ngetFiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:92\n                \n            \n\n\n            \n                \n                    Get the list of all the files(No folders/directories) belonging to the current user.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Observable containing the list of files\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFolder\n                        \n                        \n                    \n                \n            \n            \n                \ngetFolder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:251\n                \n            \n\n\n            \n                \n                    Get the list of all the folders and subfolders(No files) belonging to the current user.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable containing the error or the folder list. Castable to the FileInterface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse, tserve: NbToastrService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:63\n                \n            \n\n\n            \n                \n                    A common function to handle all the errors while interacting with backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The error object\n\n                                    \n                                \n                                \n                                    tserve\n                                    \n                                            NbToastrService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The toastr Service which is used to display errors\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readfile\n                        \n                        \n                    \n                \n            \n            \n                \nreadfile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:114\n                \n            \n\n\n            \n                \n                    Uses the readfiledata function to read file data and then change the active files\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the file to be read\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readfiledata\n                        \n                        \n                    \n                \n            \n            \n                \nreadfiledata(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:104\n                \n            \n\n\n            \n                \n                    Read the data of the file given by the fileid = id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        File Id of the file to be read\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Observable containing the data of the file. TypeCastable to CodeInterface\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renamefile\n                        \n                        \n                    \n                \n            \n            \n                \nrenamefile(id: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:169\n                \n            \n\n\n            \n                \n                    Function used to rename a file\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        File Id of the file which is renamed\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New name of the file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Boolean Promise whether the name change was successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatefile\n                        \n                        \n                    \n                \n            \n            \n                \nupdatefile(id: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/codefetch.service.ts:145\n                \n            \n\n\n            \n                \n                    This function is used to update the data in the files. Called when a file is saved.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        File Id of the file which is updated\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new content of the file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            codeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.ReadFile\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.CreateFile\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deleteUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.DeleteFile\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filesURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetFiles\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            folderURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetFolders\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         fileInterface\n\n                        \n                    \n                    \n                        \n                            Default value : {name: 'Choose File', id: -1, path: ''}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedFileChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedFileData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' '\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openedFileDataChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            structURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetStructure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastrService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NbToastrService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:37\n                            \n                        \n\n                \n                    \n                        Used to display errors on the screen\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.UpdateFile\n                        \n                    \n                        \n                            \n                                    Defined in src/app/codefetch.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { fileInterface, TreeNode } from './fileInterface';\nimport { API } from '../API';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NbToastrService, NbComponentStatus, NbDialogService } from '@nebular/theme';\nimport { map } from 'rxjs/internal/operators';\nimport { ConfirmDialog } from './confirmdialog/confirmdialog.component';\n\n/**\n * Service used to connect the frontend to the backend. This includes all the functions that are used to interact with the file system present on the backend.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CodefetchService {\n  private structURL = API.ServerURL + API.GetStructure;\n  private createURL = API.ServerURL + API.CreateFile;\n  private codeURL = API.ServerURL + API.ReadFile;\n  private deleteUrl = API.ServerURL + API.DeleteFile;\n  private folderURL = API.ServerURL + API.GetFolders;\n  private updateURL = API.ServerURL + API.UpdateFile;\n  private filesURL = API.ServerURL + API.GetFiles;\n\n  openedFile: fileInterface = {name: 'Choose File', id: -1, path: ''};\n  openedFileData: string = ' ';\n  openedFileChange: Subject = new Subject()\n  openedFileDataChange: Subject = new Subject();\n  /**\n   * \n   * @param toastrService Used to display errors on the screen\n   * @param http Used for making requests to the backend\n   * @param _dialogService Used in delete files to ask for confirmation\n   */\n  constructor(public toastrService: NbToastrService,\n              private http: HttpClient,\n              private router: Router,\n              private activerouter: ActivatedRoute,\n              private _dialogService: NbDialogService) {\n        this.openedFileChange.subscribe((value) => {\n          this.openedFile = value;\n        });\n        this.openedFileDataChange.subscribe((value) => {\n          this.openedFileData = value;\n        });\n  }\n\n  /**\n   * Changes the current active file to f\n   * @param{fileInterface} f The file which has to be made active\n   */\n  changeOpenedFile(f: fileInterface) {\n    this.openedFileChange.next(f);\n  }\n\n  /**\n   * A common function to handle all the errors while interacting with backend\n   * @param error The error object\n   * @param tserve The toastr Service which is used to display errors\n   */\n  handleError(error: HttpErrorResponse, tserve: NbToastrService) {\n    let status: NbComponentStatus =\"danger\";\n    console.log(tserve)\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n      tserve.show(error.error.message, \"Error\", {status})\n    } else {\n      console.error('An error occurred:',error.error.message);\n      tserve.show(error.error.message, \"Error\", {status})\n    }\n    return throwError(\n      error.message || 'Something bad happened; please try again later.');\n  }\n\n  /**\n   * Get the list of all the files and directories belonging to the current user. \n   * @returns An Observable containing the error or the file list. Castable to the FileInterface\n   */\n  getFileList(): any {\n    return this.http.get(this.structURL)\n    .pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n\n  /**\n   * Get the list of all the files(No folders/directories) belonging to the current user.\n   * @returns Observable containing the list of files\n   */\n  getFiles(): any {\n    return this.http.get(this.filesURL)\n    .pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n\n  /**\n   * Read the data of the file given by the fileid = id\n   * @param id File Id of the file to be read\n   * @returns Observable containing the data of the file. TypeCastable to CodeInterface\n   */\n  readfiledata(id: string): any {\n    return this.http.post(this.codeURL,{file_id: id}).pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n\n  /**\n   * Uses the [readfiledata]{@link CodefetchService#readfiledata} function to read file data and then change the active files\n   * @param id Id of the file to be read\n   */\n  readfile(id: string): any{\n    // this.router.navigate(['/dashboard/editor', {id: id}]);\n    if (id == '-1') {\n      this.openedFileDataChange.next(\"\");\n      return;\n    }\n    return this.readfiledata(id).subscribe(\n      _data => {\n        if(_data[\"success\"]==false) {\n          this.handleError(_data[\"message\"], this.toastrService)\n        }\n        else {\n          console.log(_data[\"data\"]+\"A\")\n          if(_data[\"data\"]==\"\"){\n            console.log(_data[\"data\"]+\"A\")\n            this.openedFileDataChange.next(\"\");\n          }\n          else\n            this.openedFileDataChange.next(_data[\"data\"]);\n          // this._codestore.setcode(id, _data[\"data\"]);\n          // console.log(id);\n        }\n      }\n    )\n  }\n\n  /**\n   * This function is used to update the data in the files. Called when a file is saved.\n   * @param id File Id of the file which is updated\n   * @param data The new content of the file\n   */\n  updatefile(id: string, data: string): any {\n    return this.http.post(this.updateURL, {file_id: id, data: data}).pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    ).subscribe(\n      _data => {\n        if(_data[\"success\"]==false) {\n          this.handleError(_data[\"message\"], this.toastrService);\n        }\n        else {\n        console.log(_data[\"message\"]);\n        let status: NbComponentStatus =\"success\";\n        this.openedFileDataChange.next(data)\n        this.toastrService.show(\"Saved successfully\", \"Saved!\", {status})\n        }\n    }\n    )\n  }\n\n  /**\n   * Function used to rename a file\n   * @param id File Id of the file which is renamed\n   * @param name New name of the file\n   * @returns Boolean Promise whether the name change was successful or not\n   */\n  renamefile(id: string, name: string): Promise {\n    return this.http.post(this.updateURL, {file_id: id, filename: name}).pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    ).pipe(map(\n      _data => {\n        if(_data[\"success\"]==false) {\n          this.handleError(_data[\"message\"], this.toastrService);\n          return false;\n        }\n        else {\n          // window.location.reload();\n          console.log(_data[\"message\"]);\n          return true;\n        }\n    }\n    )).toPromise();\n  }\n\n  /**\n   * Function used to delete a file. Caution: The file is permanently deleted from the server and can't be recovered\n   * @param id File Id of the file which is deleted\n   * @returns Promise which tells whether the file was deleted successfully or not\n   */\n  deletefile(id: string): Promise {\n    return this._dialogService.open(ConfirmDialog, {context: \"d\"}).onClose.pipe(map(res => {\n      if (res) {\n        return this.http.post(this.deleteUrl, {file_id: id}).pipe(\n          catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n        ).pipe(map(_data => {\n            if(_data[\"success\"]==false) {\n              this.handleError(_data[\"message\"], this.toastrService);\n              let status:NbComponentStatus = \"danger\";\n              this.toastrService.show(_data[\"message\"], \"Error\", {status});\n              return false;\n            }\n            else {\n              // window.location.reload();\n              console.log(_data);\n              return true;\n            }\n          }\n        )).toPromise();\n      }\n      else {\n        return false;\n      }\n    })).toPromise();\n  }\n\n  /**\n   * Function to create new files and folders\n   * @param parent Parent directory in which the file is to be created\n   * @param name Name of the new File/Folder\n   * @param isFile Whether the Object to be created is File or Folder\n   * @returns Promise of the file ID if successful\n   */\n  createFile(parent: string, name: string, isFile: boolean): Promise {\n      var data = {\n        'filename': name,\n        'parent': parent,\n        'is_file': isFile,\n\n      }\n      return this.http.post(this.createURL,data).pipe(\n        catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n      ).pipe(map(_data => {\n        if(_data[\"success\"]==false) {\n          this.handleError(_data[\"message\"], this.toastrService);\n          return false;\n        }\n        else {\n        // window.location.reload();\n          console.log(_data);\n          return _data[\"file_id\"];\n        }\n      })).toPromise();\n  }\n\n  /**\n   * Get the list of all the folders and subfolders(No files) belonging to the current user.\n   * @returns An Observable containing the error or the folder list. Castable to the FileInterface\n   */\n  getFolder() {\n    return this.http.get(this.folderURL)\n    .pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompetingComponent.html":{"url":"components/CompetingComponent.html","title":"component - CompetingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompetingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/competing/competing.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main competing dashboard view: It includes problems to submit as practice, past contests\nand currently running contests.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-competing\n            \n\n            \n                styleUrls\n                ./competing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./competing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidebarService: NbSidebarService, _stmtService: statementsFetchService, router: Router, _dialogService: NbDialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/competing/competing.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                    NbSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to control the sidebar\n\n                                                        \n                                                \n                                                \n                                                        _stmtService\n                                                  \n                                                        \n                                                                        statementsFetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch information from the API for contests/problems\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router Service for URL/Router Manipulation\n\n                                                        \n                                                \n                                                \n                                                        _dialogService\n                                                  \n                                                        \n                                                                    NbDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to control the Nebular dialog boxes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\nimport { NbSidebarService, NbDialogService } from '@nebular/theme';\nimport { statementsFetchService } from 'src/app/statementsfetchservice.service';\nimport { statementInterface, TreeNode } from 'src/app/fileInterface';\n\n/**\n * This is the main competing dashboard view: It includes problems to submit as practice, past contests\n * and currently running contests.\n */\n@Component({\n  selector: 'app-competing',\n  templateUrl: './competing.component.html',\n  styleUrls: ['./competing.component.scss']\n})\nexport class CompetingComponent implements OnInit {\n\n  /**\n   *\n   * @param sidebarService Service used to control the sidebar\n   * @param _stmtService Service used to fetch information from the API for contests/problems\n   * @param router Router Service for URL/Router Manipulation\n   * @param _dialogService Service used to control the Nebular dialog boxes\n   */\n  constructor(private sidebarService: NbSidebarService, private _stmtService: statementsFetchService, private router: Router, private _dialogService: NbDialogService) {\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n\n    this.sidebarService.collapse('code');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    Available Problems To Submit  \n\n        \n  \n\n\n\n  \n\n    Running Contests  \n\n        \n  \n\n\n\n  \n\n    Past Contests  \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./competing.component.scss\n                \n                .heading {\n  text-align: center;\n  font-size: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Available Problems To Submit                  Running Contests                  Past Contests        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompetingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialog.html":{"url":"components/ConfirmDialog.html","title":"component - ConfirmDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirmdialog/confirmdialog.component.ts\n\n\n    \n        Description\n    \n    \n        Dialog Box component displyed to confirm for deletion of file/folder\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-dialog-confirm-prompt\n            \n\n            \n                styleUrls\n                confirmdialog.scss\n            \n\n\n            \n                template\n                \n  Delete forever?\n  \n    Your file/folder will be deleted forever and you won't be able to restore it.\n  \n  \n    Cancel\n    Delete forever\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: NbDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/confirmdialog/confirmdialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        NbDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirmdialog/confirmdialog.component.ts:31\n                \n            \n\n\n            \n                \n                    Callback when the cancel button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirmdialog/confirmdialog.component.ts:38\n                \n            \n\n\n            \n                \n                    Callback when the submit button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirmdialog/confirmdialog.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n/**\n * Dialog Box component displyed to confirm for deletion of file/folder\n */\n@Component({\n  selector: 'ngx-dialog-confirm-prompt',\n  template: `\n      \n        Delete forever?\n        \n          Your file/folder will be deleted forever and you won't be able to restore it.\n        \n        \n          Cancel\n          Delete forever\n        \n      \n  `,\n  styleUrls: ['confirmdialog.scss'],\n})\nexport class ConfirmDialog implements OnInit{\n\n  constructor(protected ref: NbDialogRef) {}\n\n  ngOnInit(): void {\n  }\n  /**\n   * Callback when the cancel button is clicked\n   */\n  cancel() {\n    this.ref.close(false);\n  }\n\n  /**\n   * Callback when the submit button is clicked\n   */\n  delete() {\n    this.ref.close(true);\n  }\n}\n    \n\n\n    \n                \n                    confirmdialog.scss\n                \n                \nbutton {\n    margin: 0px 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Delete forever?      Your file/folder will be deleted forever and you won\\'t be able to restore it.        Cancel    Delete forever  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectpartService.html":{"url":"injectables/ConnectpartService.html","title":"injectable - ConnectpartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConnectpartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/connectpart.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to connect the sidebar with the main content\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                active\n                            \n                            \n                                    Private\n                                callback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Router, _fileService: CodefetchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/connectpart.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        CodefetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTable\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/connectpart.service.ts:23\n                \n            \n\n\n            \n                \n                    Function to trigger the rebuilding of table in sidebar\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            active\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/connectpart.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            callback\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/connectpart.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CodefetchService } from './codefetch.service';\n\n/**\n * Service to connect the sidebar with the main content\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectpartService {\n  private callback;\n  private active;\n  constructor(private location: Router, private _fileService: CodefetchService) { \n    this.location.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  /**\n   * Function to trigger the rebuilding of table in sidebar\n   */\n  buildTable(): any {\n    this.callback();\n    // this._fileService.getFileList().subscribe(\n    //   _data => {\n    //     console.log(_data);\n    //     if(_data[\"success\"]==false) {\n    //       console.error(\n    //         _data[\"message\"]\n    //       );\n    //     }\n    //     else {\n    //       console.log(\"success\");\n    //       if(this.callback != null)\n    //         this.callback(_data[\"structure\"],this.active);\n    //     }\n    //   }\n    // );\n  }\n\n  /**\n   * @ignore\n   */\n  changeFile(id) {\n    this._fileService.readfiledata(id).subscribe(\n      _data => {\n        if(_data[\"success\"]==false) {\n          this._fileService.handleError(_data[\"message\"],this._fileService.toastrService);\n        }\n        else {\n          this.location.navigate(['/dashboard/editor', {id: id}])\n          // window.location.reload();\n        }\n      }\n    )\n  }\n  \n  /**\n   * @ignore\n   */\n  setcallback(C) {\n    this.callback = C;\n  }\n\n  /**\n   * @ignore\n   */\n  setactivefile(f) {\n    this.active = f;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContestlistComponent.html":{"url":"components/ContestlistComponent.html","title":"component - ContestlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContestlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contestlist/contestlist.component.ts\n\n\n    \n        Description\n    \n    \n        This component is used to list out the currently available contests that the user can participate in as\nan NBTreeGrid table instance where the data is fetced using the Statement Fetch Service\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contestlist\n            \n\n            \n                styleUrls\n                ./contestlist.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contestlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                submissionData\n                            \n                            \n                                submissionsColumns\n                            \n                            \n                                submissionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialise\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, stmtService: statementsFetchService, submissionBuilder: NbTreeGridDataSourceBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/contestlist/contestlist.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router used for routing\n\n                                                        \n                                                \n                                                \n                                                        stmtService\n                                                  \n                                                        \n                                                                        statementsFetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        submissionBuilder\n                                                  \n                                                        \n                                                                        NbTreeGridDataSourceBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tree Grid source builder to build tree grid entries\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contestlist/contestlist.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialise\n                        \n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/contestlist/contestlist.component.ts:33\n                \n            \n\n\n            \n                \n                    Initialises the entries of the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/contestlist/contestlist.component.ts:53\n                \n            \n\n\n            \n                \n                    Event called on clicking on a contest; navigates to contest route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            submissionData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TreeNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contestlist/contestlist.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionsColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Contest Name', 'Starting Time', 'Ending Time']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contestlist/contestlist.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NbTreeGridDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contestlist/contestlist.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { statementsFetchService } from './../statementsfetchservice.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { TreeNode, statementInterface } from 'src/app/fileInterface';\nimport { statementsFetchService } from 'src/app/statementsfetchservice.service';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder, NbAlertModule } from '@nebular/theme';\nimport { Router } from '@angular/router';\n/**\n * This component is used to list out the currently available contests that the user can participate in as\n * an NBTreeGrid table instance where the data is fetced using the Statement Fetch Service\n */\n@Component({\n  selector: 'app-contestlist',\n  templateUrl: './contestlist.component.html',\n  styleUrls: ['./contestlist.component.scss']\n})\nexport class ContestlistComponent implements OnInit {\n  @Input() state: string;\n  submissionsColumns = ['Contest Name', 'Starting Time', 'Ending Time'];\n  submissionSource: NbTreeGridDataSource;\n  private submissionData: TreeNode[] = [];\n\n\n  /**\n   * @param router Router used for routing\n   * @param statementsFetchService Service used to get the API data of the Competing environment\n   * @param submissionBuilder Tree Grid source builder to build tree grid entries\n   */\n  constructor(private router: Router, private stmtService: statementsFetchService, private submissionBuilder:  NbTreeGridDataSourceBuilder) { }\n\n  /**\n   * Initialises the entries of the table\n   */\n  initialise(){\n    this.stmtService.getContests({state: this.state}).subscribe(\n      _data => {\n\n        this.submissionData =  _data[\"contests\"] as TreeNode[];\n        console.log(this.submissionData);\n        this.submissionSource = this.submissionBuilder.create(this.submissionData);\n      }\n    );\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.initialise();\n  }\n\n  /**\n   *  Event called on clicking on a contest; navigates to contest route\n   */\n  onClick(s){\n    this.router.navigate(['/dashboard/contest', {id: s.data.id}]);\n }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n  \n      \n          {{column}}\n      \n      {{row.data[column] || '-'}}\n  \n\n\n\n    \n\n    \n                \n                    ./contestlist.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{column}}            {{row.data[column] || \\'-\\'}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContestlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContestsComponent.html":{"url":"components/ContestsComponent.html","title":"component - ContestsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContestsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/contests/contests.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders the view of a contest, the ID is passed as a URL parameter.\nIt uses two child components: contestlist and leaderboard\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contests\n            \n\n            \n                styleUrls\n                ./contests.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contests.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                count\n                            \n                            \n                                    Private\n                                countdown\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                text\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_route: ActivatedRoute, sidebarService: NbSidebarService, stmtService: statementsFetchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/contests/contests.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router Service used to get URL paramters\n\n                                                        \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                    NbSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                NBSideBar Service used to control the sidebar\n\n                                                        \n                                                \n                                                \n                                                        stmtService\n                                                  \n                                                        \n                                                                        statementsFetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch contest/problem information from the API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/contests/contests.component.ts:36\n                \n            \n\n\n            \n                \n                    Initialises the view by using the services to fetch data from the API\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/contests/contests.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/contests/contests.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            countdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CountdownComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('cd', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/contests/contests.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/contests/contests.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/contests/contests.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/contests/contests.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/contests/contests.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NbSidebarService } from '@nebular/theme';\nimport { CountdownComponent } from 'ngx-countdown';\nimport { statementsFetchService } from 'src/app/statementsfetchservice.service';\n\n/**\n * This component renders the view of a contest, the ID is passed as a URL parameter.\n * It uses two child components: contestlist and leaderboard\n */\n@Component({\n  selector: 'app-contests',\n  templateUrl: './contests.component.html',\n  styleUrls: ['./contests.component.scss']\n})\nexport class ContestsComponent implements OnInit {\n  @ViewChild('cd', { static: false }) private countdown: CountdownComponent;\n  name: string;\n  time: string;\n  id: string;\n  count = true;\n  text: string;\n  config;\n  /**\n   *\n   * @param _route Router Service used to get URL paramters\n   * @param sidebarService NBSideBar Service used to control the sidebar\n   * @param stmtService Service used to fetch contest/problem information from the API\n   */\n  constructor( private _route : ActivatedRoute, private sidebarService: NbSidebarService, private stmtService: statementsFetchService) { }\n\n  /**\n   * Initialises the view by using the services to fetch data from the API\n   */\n  ngOnInit(): void {\n    this.sidebarService.collapse('code');\n    this.id = this._route.snapshot.paramMap.get('id');\n    this.stmtService.getContest({id: this.id}).subscribe(\n      _data => {\n        console.log(_data);\n        this.name = _data[\"contest\"][\"Contest Name\"];\n        let status = _data[\"contest\"][\"status\"];\n        let sec = _data[\"contest\"][\"sec\"];\n        if (status == \"r\"){\n          this.text = \"Time till end of contest: \";\n          this.count = true;\n        }\n        else if (status == \"e\"){\n          this.text = \"Contest has ended\";\n          this.count = false;\n        }\n        else {\n          this.text = \"Contest will begin in: \";\n          this.count = true;\n        }\n        this.countdown.stop();\n        console.log(this.config);\n        this.config = {leftTime: parseInt(sec)};\n        this.countdown.restart();\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n  {{name}}\n  {{text}} \n\n\n  \n    \n\n        \n          \n            \n\n          \n        \n\n    \n\n    \n\n      \n        \n\n          \n        \n      \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./contests.component.scss\n                \n                nb-tab {\n  padding: 0rem 0rem !important;\n}\n.heading {\n  text-align: center;\n}\n.subheading {\n  font-size:18px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{name}}  {{text}}                                                                                                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContestsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Provides the frame for the editor and dashboard page. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dashboard.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { User } from '../UserDetails';\n\n/**\n * Provides the frame for the editor and dashboard page. \n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  user: User;\n\n  constructor(private router: Router,\n              private api: ApiService) { }\n\n  ngOnInit(): void {\n  }\n  /**\n   * @ignore\n   */\n  logout() {\n    this.api.logoutUser().subscribe(res => {\n      this.user = res;\n      if (this.user.success) {\n        this.router.navigate(['home']);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n    \n\n    \n        \n    \n\n    Left column -->\n    Right column -->\n    \n        \n    \n\n    \n    \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                @import '../../themes.scss';\n@import '~bootstrap/scss/mixins/breakpoints';\n@import '~@nebular/theme/styles/global/breakpoints';\n@include nb-install-component() {\n    .menu-sidebar ::ng-deep .scrollable {\n        padding-top: nb-theme(layout-padding-top);\n    }\n    .menu-sidebar ::ng-deep .main-container {\n        position: initial;\n    }\n    .menu-sidebar {\n        position: relative;\n    }\n}\n\n// // nb-layout-footer {\n// //     position: fixed;\n// //     bottom: 0;\n// //     left: 0;\n// //     right: 0;\n// //     z-index: 0;\n// // }\n.footer {\n    width: 100%;\n    position: fixed;\n    bottom: 0;\n}\n\n.ptr {\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Left column -->    Right column -->                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_bootstrap\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nEditorComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DashboardRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DashboardComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { MainComponent } from './main/main.component';\nimport { NbSelectModule, NbActionsModule, NbCardModule, NbIconModule, NbInputModule, NbLayoutModule, NbListModule, NbSidebarModule, NbDialogModule, NbAlertModule, NbTabsetModule} from '@nebular/theme';\nimport { DashboardComponent } from './dashboard.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { AceEditorModule } from 'ng2-ace-editor';\nimport { FormsModule } from '@angular/forms';\nimport { NewfiledialogComponent } from '../newfiledialog/newfiledialog.component';\nimport { CompetingComponent } from './competing/competing.component';\nimport { ProblemComponent } from './problem/problem.component';\nimport { ContestsComponent } from './contests/contests.component';\n\n@NgModule({\n  declarations:  [EditorComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    NbLayoutModule,\n    NbListModule,\n    NbCardModule,\n    AceEditorModule,\n    NbSidebarModule,\n    NbInputModule,\n    FormsModule,\n    NbTabsetModule,\n    NbActionsModule,\n    NbSelectModule,\n    NbDialogModule.forChild(),\n    NbIconModule,\n  ],\n  bootstrap: [DashboardComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ContestsComponent } from './contests/contests.component';\nimport { ProblemComponent } from './problem/problem.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { MainComponent } from './main/main.component';\nimport { DashboardComponent } from './dashboard.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { CompetingComponent } from './competing/competing.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: DashboardComponent,\n  children: [\n    {\n      path: 'main',\n      component: MainComponent\n    },\n    {\n      path: 'editor',\n      component: EditorComponent\n    },\n    {\n      path: 'compete',\n      component: CompetingComponent\n    },\n    {\n      path:'problem',\n      component: ProblemComponent\n    },\n    {\n      path:'contest',\n      component: ContestsComponent\n    },\n    {\n      path: '**',\n      redirectTo: '/dashboard/main',\n      pathMatch: 'full'\n    }\n  ]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorComponent.html":{"url":"components/EditorComponent.html","title":"component - EditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/editor/editor.component.ts\n\n\n    \n        Description\n    \n    \n        The component which contains the editor and is used to write, run, save the code\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor\n            \n\n            \n                styleUrls\n                ./editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cli\n                            \n                            \n                                code_data\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                lang\n                            \n                            \n                                output\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                run\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    openedFile\n                                \n                                \n                                    openedFileData\n                                \n                                \n                                    language\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fileService: CodefetchService, sidebarService: NbSidebarService, _codeService: CodeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/editor/editor.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        CodefetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch data from backend\n\n                                                        \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                    NbSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to expand the sidebar\n\n                                                        \n                                                \n                                                \n                                                        _codeService\n                                                  \n                                                        \n                                                                        CodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to send the code for compilation and execution\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/editor/editor.component.ts:59\n                \n            \n\n\n            \n                \n                    Set the properties of editor including themes and other styling options\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/editor/editor.component.ts:132\n                \n            \n\n\n            \n                \n                    Function to run the code written. \nFirst saves the code in the editor and then run it.\n  Uses the Codeservice/postData function to execute the file using the selected language.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/editor/editor.component.ts:115\n                \n            \n\n\n            \n                \n                    Function to save the code written. Uses the CodefetchService/updateFile function to save the file.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cli\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/editor/editor.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code_data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         code_interface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/editor/editor.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('editor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/editor/editor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/editor/editor.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'python'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/editor/editor.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/editor/editor.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Run after passing in input'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/editor/editor.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        openedFile\n                    \n                \n\n                \n                    \n                        getopenedFile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/editor/editor.component.ts:40\n                                \n                            \n                    \n                        \n                                getter for the opened file. \n\n\n                                \n                                \n                                \n                                    Returns :         fileInterface\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        openedFileData\n                    \n                \n\n                \n                    \n                        getopenedFileData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/editor/editor.component.ts:50\n                                \n                            \n                    \n                        \n                                getter for the code of the opended file. This is synchronised with the value of editor i.e. code displayed.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        language\n                    \n                \n\n                \n                    \n                        getlanguage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/editor/editor.component.ts:84\n                                \n                            \n                    \n                        \n                                getter for the language \n\n\n                        \n                    \n\n                \n                    \n                        setlanguage(val)\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/editor/editor.component.ts:92\n                                \n                            \n                    \n                        \n                                setter for the language which is set using the select language drop down.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    the current value of drop down\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { NbSidebarService, NbTabsetComponent } from '@nebular/theme';\nimport { CodefetchService } from 'src/app/codefetch.service';\nimport { fileInterface } from 'src/app/fileInterface';\nimport { CodeService } from '../../code-compile-service.service';\nimport { code_interface } from '../../code_interface';\n\n/**\n * The component which contains the editor and is used to write, run, save the code\n */\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\nexport class EditorComponent implements AfterViewInit {\n  input='';\n  output='';\n  cli='';\n  lang = 'python';\n  status:string= 'Run after passing in input';\n  code_data: code_interface;\n\n  @ViewChild('editor') editor;\n\n  /**\n   * \n   * @param _fileService Service to fetch data from backend\n   * @param sidebarService Service to expand the sidebar\n   * @param _codeService Service to send the code for compilation and execution\n   */\n  constructor(private _fileService: CodefetchService,\n              private sidebarService: NbSidebarService,\n              private _codeService: CodeService){}\n\n  /**\n   * getter for the opened file. \n   * @returns fileInterface object containing the information about the currently opened file\n   */\n  get openedFile(): fileInterface {\n    let ret = this._fileService.openedFile\n    if (this.editor != undefined) this.editor.setReadOnly(ret.id == -1);\n    return ret;\n  }\n\n  /**\n   * getter for the code of the opended file. This is synchronised with the value of editor i.e. code displayed.\n   * @returns string containing the code.\n   */\n  get openedFileData(): string {\n    console.log(\"getting file data\")\n    console.log(this._fileService.openedFileData)\n    return this._fileService.openedFileData;\n  }\n\n  /**\n   * Set the properties of editor including themes and other styling options\n   */\n  ngAfterViewInit() {\n\n    this.editor.getEditor().setOptions({\n      showLineNumbers: true,\n      tabSize: 2,\n      fontSize: 18,\n      enableBasicAutocompletion: true\n    });\n\n    this.editor.setTheme('dracula');\n\n    this.editor.mode = 'python';\n\n    this.editor.getEditor().commands.addCommand({\n      name: 'showOtherCompletions',\n      bindKey: 'Ctrl-.',\n      exec: function (editor) {\n      }\n    })\n    this.sidebarService.expand('code');\n  }\n\n  /**\n   * getter for the language \n   */\n  get language(){\n    return this.lang;\n  }\n\n  /**\n   * setter for the language which is set using the select language drop down.\n   * @param val the current value of drop down\n   */\n  set language(val){\n    if(val=='c' || val == 'c++')\n      this.editor.mode = 'c_cpp';\n    else if (val == 'python3'){\n      this.editor.mode = 'python';\n    }\n    else\n      this.editor.mode = val;\n    this.lang = val;\n  }\n\n  /**\n   * @ignore\n   */\n  getValue() {\n    console.log(this.editor.value)\n    console.log(eval(this.editor.value));\n    console.log(this.input)\n  }\n\n  /**\n   * Function to save the code written. Uses the [CodefetchService/updateFile]{@link CodefetchService#updateFile} function to save the file.\n   */\n  save(): boolean {\n    if(this.openedFile.id == -1) {\n      return false;\n    }\n    else {\n      this._fileService.updatefile(this.openedFile.id.toString(), this.editor.value);\n      return true;\n    }\n  }\n\n  /**\n   * Function to run the code written. \n   * \n   * First saves the code in the editor and then run it.\n   * \n   *  Uses the [Codeservice/postData]{@link CodeService#postData} function to execute the file using the selected language.\n   */\n  run() {\n    if (!this.save()) return;\n    this.output = \"\"\n    this.code_data = {input_type:'TEXT', input: this.input, lang: this.language, command: this.cli, file_id: this.openedFile.id.toString()};\n\n    this.status = 'Running code on server.. ';\n\n    console.log(this.code_data);\n    this._codeService.postData(this.code_data).subscribe(\n      output_data =>{\n        this.output = output_data.output;\n        if (output_data.success){\n          this.status = 'Successfully executed';\n        }\n        else {\n          this.status = 'There is an error in your code. Check output panel for more details';\n        }\n      },\n      error => {this.status = 'Something went Wrong...'; console.log(error)}\n      );\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n\n    {{filename}}\n -->\n\n\n\n    \n        \n            \n                \n                    Save\n                    \n                        Run\n                    \n                \n            \n            \n                Select Language:\n                \n                    C \n                    C++\n                    Python\n                    Python 3\n                    Haskell\n                    Bash\n                \n            \n        \n\n    \n\n\nStatus: {{status}}\nCommand Line arguments:\n -->\n\n\nInput:\n -->\n\n\nOutput:\n -->\n\n\n    \n\n    \n                \n                    ./editor.component.scss\n                \n                .input-label {\n    display: block;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{filename}} -->                                                            Save                                            Run                                                                            Select Language:                                    C                     C++                    Python                    Python 3                    Haskell                    Bash                                        Status: {{status}}Command Line arguments: -->Input: -->Output: -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilelistComponent.html":{"url":"components/FilelistComponent.html","title":"component - FilelistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilelistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/filelist/filelist.component.ts\n\n\n    \n        Description\n    \n    \n        The component which is displayed in the sidebar on the editor page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filelist\n            \n\n            \n                styleUrls\n                ./filelist.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filelist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeFileID\n                            \n                            \n                                activeFileName\n                            \n                            \n                                activeFilePath\n                            \n                            \n                                allColumns\n                            \n                            \n                                customColumn\n                            \n                            \n                                    Private\n                                data\n                            \n                            \n                                dataSource\n                            \n                            \n                                items\n                            \n                            \n                                rightClickedRow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                itemClicked\n                            \n                            \n                                newFile\n                            \n                            \n                                onClick\n                            \n                            \n                                onRightClick\n                            \n                            \n                                onSingleCick\n                            \n                            \n                                refreshFileStructure\n                            \n                            \n                                    Private\n                                renameFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSourceBuilder: NbTreeGridDataSourceBuilder, sidebarService: NbSidebarService, _fileService: CodefetchService, _dialogService: NbDialogService, _connect: ConnectpartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/filelist/filelist.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataSourceBuilder\n                                                  \n                                                        \n                                                                        NbTreeGridDataSourceBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for building the table\n\n                                                        \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                    NbSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        CodefetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch data from backend\n\n                                                        \n                                                \n                                                \n                                                        _dialogService\n                                                  \n                                                        \n                                                                    NbDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to display the pop up windows\n\n                                                        \n                                                \n                                                \n                                                        _connect\n                                                  \n                                                        \n                                                                        ConnectpartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to connect the sidebar to the main content\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            itemClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    itemClicked(action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/filelist/filelist.component.ts:47\n                \n            \n\n\n            \n                \n                    The function which performs action when an option is selected after right click\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Option which is selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newFile\n                        \n                        \n                    \n                \n            \n            \n                \nnewFile(par: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/filelist/filelist.component.ts:103\n                \n            \n\n\n            \n                \n                    Used to create a new file. Uses the CodefetchService/createFile function to create new file and refresh the data.\nOpens the NewfiledialogComponent for the user to enter data. Then processes it and send to backend to create a new file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    par\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file Id of the folder on which new file is called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick(s, dialog)\n                \n            \n\n\n            \n                \n                    Defined in src/app/filelist/filelist.component.ts:203\n                \n            \n\n\n            \n                \n                    Callback for when a file/folder is double clicked. Opens the Window given by dialog to confirm whether to open file or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file which is double clicked\n\n                                    \n                                \n                                \n                                    dialog\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The template for the dialog to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRightClick\n                        \n                        \n                    \n                \n            \n            \n                \nonRightClick(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/filelist/filelist.component.ts:160\n                \n            \n\n\n            \n                \n                    Callback for when user right click on a file/folder. Displays the menu for selecting action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file/folder which is clicked.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSingleCick\n                        \n                        \n                    \n                \n            \n            \n                \nonSingleCick(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/filelist/filelist.component.ts:142\n                \n            \n\n\n            \n                \n                    Callback for when a file/folder is clicked. Opens the clicked file only if no file is open.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file/folder which is clicked.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshFileStructure\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshFileStructure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/filelist/filelist.component.ts:71\n                \n            \n\n\n            \n                \n                    Refreshes the table with the data from backend.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            renameFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameFile(par: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/filelist/filelist.component.ts:122\n                \n            \n\n\n            \n                \n                    Used to rename a file. Uses the CodefetchService/renameFile function to rename the file and refresh the data\nOpens the RenamefileDialog for the user to enter the new name. When submiited, sends the name to the backend to update the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    par\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file Id of the file which is to be renamed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeFileID\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeFilePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ this.customColumn ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'name'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TreeNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NbTreeGridDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rightClickedRow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/filelist/filelist.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { NbMenuService, NbTreeGridDataSource, NbTreeGridDataSourceBuilder,NbCardComponent } from '@nebular/theme';\nimport { NbSidebarService, NbDialogService, NbMenuItem } from '@nebular/theme';\nimport { CodefetchService } from 'src/app/codefetch.service';\nimport { fileInterface,TreeNode } from 'src/app/fileInterface';\nimport { NewfiledialogComponent } from 'src/app/newfiledialog/newfiledialog.component';\nimport { ConnectpartService } from '../connectpart.service';\nimport { RenamefileDialog } from 'src/app/renamefiledialog/renamefiledialog.component';\n\n/**\n * The component which is displayed in the sidebar on the editor page.\n */\n@Component({\n  selector: 'app-filelist',\n  templateUrl: './filelist.component.html',\n  styleUrls: ['./filelist.component.scss'],\n})\nexport class FilelistComponent implements OnInit {\n  customColumn = 'name';\n  allColumns = [ this.customColumn ];\n  dataSource: NbTreeGridDataSource;\n  activeFileID = -1;\n  activeFileName = '';\n  activeFilePath = '';\n  rightClickedRow: any;\n  items: any[];\n\n  private data: TreeNode[] = [];\n\n  /**\n   * @param dataSourceBuilder Used for building the table\n   * @param _fileService Service to fetch data from backend\n   * @param _dialogService Used to display the pop up windows\n   * @param _connect Service to connect the sidebar to the main content\n   */\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder,\n    private sidebarService: NbSidebarService,\n    private _fileService: CodefetchService,\n    private _dialogService: NbDialogService,\n    private _connect: ConnectpartService) {\n        _connect.setcallback(() => this.refreshFileStructure().bind(this))\n  }\n  /**\n   * The function which performs action when an option is selected after right click\n   * @param action Option which is selected\n   */\n  async itemClicked(action) {\n    action = action.substring(0, 3);\n    if (action == 'Ope'){\n      this._fileService.changeOpenedFile({name: this.activeFileName, id: this.activeFileID, path: this.activeFilePath});\n      this._fileService.readfile(this.activeFileID.toString());\n    }\n    else if (action == 'Del') {\n      if(await this._fileService.deletefile(this.activeFileID.toString())) {\n        this.refreshFileStructure();\n        this._fileService.changeOpenedFile({name: 'Choose File', id: -1, path: ''});\n        this._fileService.readfile('-1');\n      }\n    }\n    else if (action == 'New') {\n      this.newFile(this.activeFileID);\n    }\n    else if (action == \"Ren\") {\n      this.renameFile(this.activeFileID);\n    }\n  }\n\n  /**\n   * Refreshes the table with the data from backend.\n   */\n  refreshFileStructure(): any {\n    // this.sidebarService.collapse('code');\n    this._fileService.getFileList().subscribe(\n      _data => {\n        if(_data[\"success\"]==false) {\n          this._fileService.handleError(_data[\"message\"],this._fileService.toastrService);\n        }\n        else {\n          this.data =  _data[\"structure\"] as TreeNode[];\n          this.dataSource = this.dataSourceBuilder.create(this.data);\n        }\n      }, error => {\n        this._fileService.handleError(error,this._fileService.toastrService);\n      }\n    );\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.refreshFileStructure();\n    this.activeFileName = this._fileService.openedFile.name;\n    this.activeFileID = this._fileService.openedFile.id;\n    this.activeFilePath = this._fileService.openedFile.path;\n  }\n\n  /**\n   * Used to create a new file. Uses the [CodefetchService/createFile]{@link CodefetchService#createFile} function to create new file and refresh the data.\n   * \n   * Opens the {@link NewfiledialogComponent} for the user to enter data. Then processes it and send to backend to create a new file.\n   * @param par The file Id of the folder on which new file is called\n   */\n  newFile(par: number) {\n    // console.log(\"newfile\")\n    this._dialogService.open(NewfiledialogComponent, {context: {par: par.toString()}}).onClose.subscribe(\n      async data => {\n        if (data) {\n          if (await this._fileService.createFile(data[2],data[0],data[1]))\n            this.refreshFileStructure();\n        }\n        // console.log(data[2]);\n      }\n    )\n  }\n\n  /**\n   * Used to rename a file. Uses the [CodefetchService/renameFile]{@link CodefetchService#renameFile} function to rename the file and refresh the data\n   * \n   * Opens the {@link RenamefileDialog} for the user to enter the new name. When submiited, sends the name to the backend to update the database\n   * @param par The file Id of the file which is to be renamed\n   */\n  private renameFile(par: number) {\n    // console.log(\"Rename called from filelist\");\n    this._dialogService.open(RenamefileDialog, {context: {oldname: this.activeFileName}}).onClose.subscribe(\n      async data => {\n        if (data) {\n          if (await this._fileService.renamefile(par.toString(), data)) {\n            this.refreshFileStructure();\n            this.activeFileName = data;\n            this._fileService.changeOpenedFile({name: this.activeFileName, id: this.activeFileID, path: this.activeFilePath});\n          }\n        }\n      }\n    )\n  }\n\n\n  /**\n   * Callback for when a file/folder is clicked. Opens the clicked file only if no file is open.\n   * @param{TreeNode} s The file/folder which is clicked.\n   */\n  onSingleCick(s) {\n    // console.log(this.activeFileID)\n    if(this.activeFileID==-1)\n    {\n      if (s.data.is_file) {\n        this.activeFileID = s.data.id;\n        this.activeFileName = s.data.name;\n        this.activeFilePath = s.data.path;\n        this._fileService.changeOpenedFile({name: this.activeFileName, id: this.activeFileID, path: this.activeFilePath});\n        this._fileService.readfile(s.data.id);\n      } \n    }\n  }\n\n  /**\n   * Callback for when user right click on a file/folder. Displays the menu for selecting action\n   * @param s The file/folder which is clicked.\n   */\n  onRightClick(s) {\n    this.activeFileID = s.data.id;\n    this.activeFileName = s.data.name;\n    this.activeFilePath = s.data.path;\n    this.rightClickedRow = s.data;\n    if (s.data.is_file) {\n      this.items = [\n        {\n          title: 'Open File',\n          icon: 'file-text-outline',\n        },\n        {\n          title: 'Rename File',\n          icon: 'edit-2-outline',\n        },\n        {\n          title: 'Delete File',\n          icon: 'trash-2-outline',\n        },\n      ];\n    }\n    else {\n      this.items = [\n        {\n          title: 'New File/Folder',\n          icon: 'file-add-outline',\n        },\n        {\n          title: 'Rename Folder',\n          icon: 'edit-2-outline',\n        },\n        {\n          title: 'Delete Folder',\n          icon: 'trash-2-outline',\n        },\n      ];\n    }\n  }\n/**\n * Callback for when a file/folder is double clicked. Opens the Window given by dialog to confirm whether to open file or not.\n * @param s The file which is double clicked\n * @param dialog The template for the dialog to display\n */\n  onClick(s,dialog) {\n    if(s.data.is_file && s.data.id!=this.activeFileID) {\n      this._dialogService.open(dialog).onClose.subscribe(\n        _b => {\n          if(_b) {\n            if (s.data.is_file) {\n              this.activeFileID = s.data.id;\n              this.activeFileName = s.data.name;\n              this.activeFilePath = s.data.path;\n              this._fileService.changeOpenedFile({name: this.activeFileName, id: this.activeFileID, path: this.activeFilePath});\n              this._fileService.readfile(s.data.id);\n            }     \n          }\n        }\n      )\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getShowOn(index: number) {\n      const minWithForMultipleColumns = 125;\n      const nextColumnStep = 125;\n      // console.log(index)\n      return minWithForMultipleColumns + (nextColumnStep * index);\n  }\n}\n\n/**\n * @ignore\n */\n@Component({\n  selector: 'nb-fs-icon',\n  template: `\n    \n    \n    \n    \n    \n      \n    \n  `,\n})\nexport class FsIconComponent {\n  @Input() isFile: boolean;\n  @Input() expanded: boolean;\n\n  isDir(): boolean {\n    return this.isFile === false;\n  }\n}\n\n    \n\n    \n         -->\n\n    \n    New File\n\n\n    \n    Delete File\n\n -->\n -->\n\n\n    \n\n        Search:\n        \n        \n        \n            \n            New File\n        \n        \n\n            \n            \n\n            \n                \n                    Your Files\n                \n                \n                    \n                    {{row.data[customColumn]}}\n                \n            \n        \n\n    \n\n\n\n\n    \n        \n        Menu Item - 1\n       -->\n        \n            \n                \n                    \n                        \n                            \n                                \n                            \n                            {{ item.title }}\n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n        Change File?\n        Do you really want to open this file? Your updates to the current file will be lost\n        \n            Cancel\n            Yes. Change File\n        \n    \n\n    \n\n    \n                \n                    ./filelist.component.scss\n                \n                button[nbTreeGridRowToggle] {\n    background: transparent;\n    border: none;\n    padding: 0;\n    margin: -10px;\n}\n\nbutton {\n    margin: 0px 20px;\n}\n\n.search-label {\n    display: block;\n}\n\n.search-input {\n    margin-bottom: 1rem;\n    width: 100%;\n}\n\n.nb-column-name {\n    width: 100%;\n}\n\n@media screen and (min-width: 400px) {\n    .nb-column-name,\n    .nb-column-size {\n        width: 50%;\n    }\n}\n\n@media screen and (min-width: 500px) {\n    .nb-column-name,\n    .nb-column-size,\n    .nb-column-kind {\n        width: 33.333%;\n    }\n}\n\n@media screen and (min-width: 600px) {\n    .nb-column-name {\n        width: 31%;\n    }\n    .nb-column-size,\n    .nb-column-kind,\n    .nb-column-items {\n        width: 23%;\n    }\n}\n\n.dialog {\n    margin: 10px;\n    text-align: center;\n}\n\n.new-file-button {\n    // align-self: left;\n    margin-right: 20px;\n    margin-bottom: 20px;\n}\n\n.bar {\n    background-color: rgb(237, 241, 247);\n    color: black;\n}\n\n.menuItem:hover {\n    color: rgb(86, 142, 247);\n}\n\n.no-pad {\n    padding: 0;\n    margin: 0;\n}\n\n.some-pad {\n    padding: 2px;\n    margin: 0;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->        New File        Delete File --> -->            Search:                                                New File                                                                                        Your Files                                                                        {{row.data[customColumn]}}                                                            Menu Item - 1       -->                                                                                                                                                                                                    {{ item.title }}                                                                                                Change File?        Do you really want to open this file? Your updates to the current file will be lost                    Cancel            Yes. Change File            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilelistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/@theme/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                user\n                            \n                            \n                                userMenu\n                            \n                            \n                                userPictureOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                gotoLink\n                            \n                            \n                                navigateHome\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshUserDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidebarService: NbSidebarService, menuService: NbMenuService, _sd: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/@theme/header/header.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                    NbSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                    NbMenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sd\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gotoLink\n                        \n                        \n                    \n                \n            \n            \n                \ngotoLink(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/@theme/header/header.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateHome\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateHome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@theme/header/header.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@theme/header/header.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@theme/header/header.component.ts:49\n                \n            \n\n\n            \n                \n                    Calls refreshUserDetails() method and adds a mouse click event listener on 'Log out'. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshUserDetails\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshUserDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@theme/header/header.component.ts:34\n                \n            \n\n\n            \n                \n                    Subscribes to getDetails() method of API Service to fetch basic user details for displaying on the header.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@theme/header/header.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@theme/header/header.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ { title: 'Profile' }, { title: 'Log out' } ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@theme/header/header.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPictureOnly\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/@theme/header/header.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NbMediaBreakpointsService, NbMenuService, NbSidebarService, NbThemeService, NbActionComponent } from '@nebular/theme';\n\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ApiService } from 'src/app/api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/UserDetails';\n\n\n@Component({\n  selector: 'ngx-header',\n  styleUrls: ['./header.component.scss'],\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  private destroy$: Subject = new Subject();\n  userPictureOnly: boolean = false;\n  user: User;\n\n  userMenu = [ { title: 'Profile' }, { title: 'Log out' } ];\n\n\n  constructor(private sidebarService: NbSidebarService,\n              private menuService: NbMenuService,\n              private _sd: ApiService,\n              private router: Router) {\n  }\n\n  /**\n   * Subscribes to getDetails() method of API Service to fetch basic user details for displaying on the header.\n   */\n  refreshUserDetails() {\n    this._sd.getDetails()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((userDetail: User) => {\n          this.user = userDetail;\n          this.userMenu = [ { title: this.user.first_name + ' ' + this.user.last_name }, { title: 'Log out' } ]\n    }, err => {\n      console.log(\"error occurred\");\n      this.user = null;\n    });\n  }\n\n  /**\n   * Calls refreshUserDetails() method and adds a mouse click event listener on 'Log out'. \n   */\n  ngOnInit() {\n    this.refreshUserDetails();\n\n    this.menuService.onItemClick().subscribe(( event ) => {\n      if (event.item.title === 'Log out') {\n          this._sd.logoutUser()\n              .pipe(takeUntil(this.destroy$))\n              .subscribe(() => {\n                this.refreshUserDetails();\n                this.router.navigate(['home']);\n          }, err => this.refreshUserDetails());\n      }\n    });\n  }\n  \n  gotoLink(x) {\n    this.router.navigate(x);\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // toggleSidebar(): boolean {\n  //   this.sidebarService.toggle(true, 'menu-sidebar');\n  //   this.layoutService.changeLayoutSize();\n\n  //   return false;\n  // }\n\n  navigateHome() {\n    this.router.navigate(['home']);\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n      \n     -->\n        OCDE\n    \n    \n        Home\n        Editor\n        Dashboard\n        Compete\n     -->\n    \n        \n             Home\n        \n        \n             Dashboard\n        \n             Editor\n        \n             Compete\n    \n\n\n\n    \n        \n\n            \n      \n    \n    \n     -->\n            \n                \n                \n            \n            Log in\n        \n    \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import '~bootstrap/scss/mixins/breakpoints';\n@import '~@nebular/theme/styles/global/breakpoints';\n@import '../styles/themes';\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP&family=Audiowide&display=swap');\n@include nb-install-component() {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    .logo-container {\n        display: flex;\n        align-items: center;\n        // width: calc(#{nb-theme(sidebar-width)} - #{nb-theme(header-padding)});\n    }\n    nb-action {\n        height: auto;\n        display: flex;\n        align-content: center;\n    }\n    nb-user {\n        cursor: pointer;\n    }\n     ::ng-deep nb-search button {\n        padding: 0!important;\n    }\n    .header-container {\n        display: flex;\n        align-items: center;\n        width: auto;\n        // .sidebar-toggle {\n        //   @include nb-ltr(padding-right, 1.25rem);\n        //   @include nb-rtl(padding-left, 1.25rem);\n        //   text-decoration: none;\n        //   color: nb-theme(text-hint-color);\n        //   nb-icon {\n        //     font-size: 1.75rem;\n        //   }\n        // }\n        .logo {\n            padding: 0 1.25rem;\n            font-size: 1.75rem;\n            font-family: Audiowide;\n            @include nb-ltr(border-left,\n            1px solid nb-theme(divider-color));\n            @include nb-rtl(border-right,\n            1px solid nb-theme(divider-color));\n            white-space: nowrap;\n            text-decoration: none;\n        }\n    }\n    @include media-breakpoint-down(sm) {\n        .control-item {\n            display: none;\n        }\n        .user-action {\n            border: none;\n            padding: 0;\n        }\n    }\n    @include media-breakpoint-down(is) {\n        nb-select {\n            display: none;\n        }\n    }\n}\n\nnb-action {\n    cursor: pointer;\n}\n\nnb-icon {\n    margin-right: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                       -->        OCDE                Home        Editor        Dashboard        Compete     -->                         Home                             Dashboard                     Editor                     Compete                                               -->                                                                    Log in            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        The home page for the website.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rt: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rt\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// import {ParticlesComponent} from 'angular-particle'\ndeclare var particlesJS: any;\n\n/**\n * The home page for the website.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  constructor(private rt: Router) { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    particlesJS.load('particles-js', 'assets/particles.json', function() {\n      console.log('callback - particles.js config loaded');\n      let el = document.querySelector(\".particles-js-canvas-el\"); \n      // el.setAttribute(\"height\", \"100%\");\n    });\n  }\n  /**\n   * @ignore\n   */\n  scroll(el: HTMLElement) {\n    el.scrollIntoView({behavior:\"smooth\"});\n  }\n  /**\n   * @ignore\n   */\n  gotoLink(x) {\n    this.rt.navigate(x);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                \n                    \n                        Home\n                    \n                    Logout\n                \n             -->\n        \n\n    \n    \n        \n            \n            \n                \n                    OCDE\n                \n                \n                \n                    Online Coding and Development Environment\n                \n                \n                    Register\n                    Log In\n                    Go to Docs!\n                    Go to Dashboard\n                \n            \n        \n        \n            \n                What we provide...\n            \n            \n                Store Files\n                \n                    Server Storage of your files!! The storage is very similar to your personal device with no restrictions(except for the total size of files. We have a tiny server :(). We provide a very beautiful UI for you to access your files, manage them and work with\n                    them.\n                    \n                \n            \n            \n                Live Editor\n                \n                    Want to try out new languages but don't have a linux system? We have got you covered. We have an integrated editor which allows you to not only write code but also save, run and test it online. The editor has support for major languages like C++, Python,\n                    Bash and Haskell. The editor can perform basic syntax highlighting which greatly helps in writing code.\n                \n            \n            \n                Complete Isolation\n                \n                    Our unique isolation algorithm prevents other systems and users to read the files of another users. This means the user has complete privacy and full rights. The system is robust against attacks related to changing files on the server. Though, we don't\n                    take any responsibilities of your files. You can do anything with your files including deleting them, modifying them etc.\n                \n            \n            \n                Competing Environment\n                \n                    Try out your coding skills in our competing arena. There are a lot of challenging problems available which are updated timely. Write your code, test it on our system and submit. Try and reach the top of the leaderboard. What are you waiting for? Remember,\n                    the clock is ticking!\n                \n            \n            \n                Documentation\n            \n        \n        \n            \n                \n                    API Documentation\n                    \n                        \n                            Want to use our code compilation and storage API in you million dollar idea? Read this documentation to know more about our API.\n                            API Documentation\n                        \n                    \n                \n            \n\n            \n                \n                \n                    Front End Documentation\n                    \n                        \n                            The front end is built using AngularJs and Nebular along with tons of other libraries for different tasks. To know about the various component and services, refer to our front end Documentation.\n                            Front End Documentation\n                        \n                    \n                \n            \n        \n    \n\n\n    \n        \n            OCD-E\n              \n            OCD-E is a fully featured cloud based IDE supporting several popular languages along with your own server space for storage of your code.\n            Register!\n\n            Want to use our API for running your code on our servers? Check our API Docs here:\n            API Documentation\n        \n    \n -->\n    \n\n    \n                \n                    ./home.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP&family=Audiowide&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@100&display=swap');\n.cover {\n    background-image: url(\"../../assets/coverback.jpg\");\n    width: 100%;\n    height: 100vh;\n    background-attachment: fixed;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    position: relative;\n    margin-left: 0;\n    margin-right: 0;\n    margin-top: 0;\n    margin-bottom: 20px;\n}\nnb-layout-column, .content, .columns, .cover{\n    padding: 0 !important;\n}\n\n.head {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 900px;\n    text-align: center;\n    line-height: 70px;\n}\n\n.title {\n    font-size: 150px;\n    font-family: Audiowide;\n    color: aliceblue;\n    // width: fit-content;\n}\n\n.subtitle {\n    font-size: 53px;\n    font-family: Audiowide;\n    line-height: 60px;\n    // width: fit-content;\n}\n\n.particles {\n    height: 100%;\n    width: 100%;\n}\n\n.flexbox {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    align-content: center;\n    max-width: 800px;\n    margin: auto;\n}\n\n.section-head {\n    font-size: 53px;\n    font-family: Audiowide;\n    line-height: 60px;\n    margin: 40px;\n}\n\nnb-card-header {\n    font-size: 25px;\n    font-family: Roboto;\n}\n\nnb-card-body {\n    font-size: 17px;\n    font-family: 'JetBrains Mono';\n    line-height: 25px;\n}\n\n.card-row {\n    display: flex;\n    margin: auto;\n    max-width: 1000px;\n}\n\n.card-col {\n    flex: 1 0 calc(50% - 1rem);\n    margin: 0 0.5rem;\n}\n\n.document {\n    text-align: justify;\n}\n\n.center {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 80%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                Home                                        Logout                             -->                                                                                    OCDE                                                                    Online Coding and Development Environment                                                    Register                    Log In                    Go to Docs!                    Go to Dashboard                                                                        What we provide...                                        Store Files                                    Server Storage of your files!! The storage is very similar to your personal device with no restrictions(except for the total size of files. We have a tiny server :(). We provide a very beautiful UI for you to access your files, manage them and work with                    them.                                                                            Live Editor                                    Want to try out new languages but don\\'t have a linux system? We have got you covered. We have an integrated editor which allows you to not only write code but also save, run and test it online. The editor has support for major languages like C++, Python,                    Bash and Haskell. The editor can perform basic syntax highlighting which greatly helps in writing code.                                                        Complete Isolation                                    Our unique isolation algorithm prevents other systems and users to read the files of another users. This means the user has complete privacy and full rights. The system is robust against attacks related to changing files on the server. Though, we don\\'t                    take any responsibilities of your files. You can do anything with your files including deleting them, modifying them etc.                                                        Competing Environment                                    Try out your coding skills in our competing arena. There are a lot of challenging problems available which are updated timely. Write your code, test it on our system and submit. Try and reach the top of the leaderboard. What are you waiting for? Remember,                    the clock is ticking!                                                        Documentation                                                                            API Documentation                                                                        Want to use our code compilation and storage API in you million dollar idea? Read this documentation to know more about our API.                            API Documentation                                                                                                                                        Front End Documentation                                                                        The front end is built using AngularJs and Nebular along with tons of other libraries for different tasks. To know about the various component and services, refer to our front end Documentation.                            Front End Documentation                                                                                                            OCD-E                          OCD-E is a fully featured cloud based IDE supporting several popular languages along with your own server space for storage of your code.            Register!            Want to use our API for running your code on our servers? Check our API Docs here:            API Documentation             -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeaderboardComponent.html":{"url":"components/LeaderboardComponent.html","title":"component - LeaderboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeaderboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/leaderboard/leaderboard.component.ts\n\n\n    \n        Description\n    \n    \n        This component is used to fetch the leaderboard of both contests and problems. It takes\nin the type (contest/problem) and the ID of the contest/problem and gives out the\nleaderboard in the template\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-leaderboard\n            \n\n            \n                styleUrls\n                ./leaderboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./leaderboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                submissionData\n                            \n                            \n                                submissionsColumns\n                            \n                            \n                                submissionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                problemId\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stmtService: statementsFetchService, submissionBuilder: NbTreeGridDataSourceBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/leaderboard/leaderboard.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stmtService\n                                                  \n                                                        \n                                                                        statementsFetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch data from the API about contests/problem\n\n                                                        \n                                                \n                                                \n                                                        submissionBuilder\n                                                  \n                                                        \n                                                                        NbTreeGridDataSourceBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                NBTreeGridBuilder used to build entries of the leaderboard\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        problemId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialise\n                        \n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:32\n                \n            \n\n\n            \n                \n                    Initialises the leaderboard by doing HTTP requests to get the data from the API\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            submissionData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TreeNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionsColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Name', 'Score']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NbTreeGridDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { TreeNode, scoreInterface } from 'src/app/fileInterface';\nimport { statementsFetchService } from 'src/app/statementsfetchservice.service';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder, NbAlertModule } from '@nebular/theme';\n/**\n * This component is used to fetch the leaderboard of both contests and problems. It takes\n * in the type (contest/problem) and the ID of the contest/problem and gives out the\n * leaderboard in the template\n */\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.scss']\n})\nexport class LeaderboardComponent implements OnInit {\n  @Input() type: string;\n  @Input() problemId: number;\n  submissionsColumns = ['Name', 'Score'];\n  submissionSource: NbTreeGridDataSource;\n  private submissionData: TreeNode[] = [];\n\n  /**\n   * @param stmtService Service used to fetch data from the API about contests/problem\n   * @param submissionBuilder NBTreeGridBuilder used to build entries of the leaderboard\n   */\n  constructor(private stmtService: statementsFetchService, private submissionBuilder:  NbTreeGridDataSourceBuilder) { }\n\n  /**\n   * Initialises the leaderboard by doing HTTP requests to get the data from the API\n   */\n  initialise(){\n    if (this.type == \"problem\"){\n      this.stmtService.getScores({problem_id: this.problemId}).subscribe(\n        _data => {\n          this.submissionData =  _data[\"scores\"] as TreeNode[];\n          this.submissionSource = this.submissionBuilder.create(this.submissionData);\n        }\n      );\n    }\n    else {\n      this.stmtService.getContestScores({contest_id: this.problemId}).subscribe(\n        _data => {\n          console.log(_data);\n          console.log(\"hhh\");\n          this.submissionData =  _data[\"scores\"] as TreeNode[];\n          this.submissionSource = this.submissionBuilder.create(this.submissionData);\n        }\n      );\n    }\n\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.initialise();\n  }\n\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n  \n      \n          {{column}}\n      \n      {{row.data[column] || '-'}}\n  \n\n\n    \n\n    \n                \n                    ./leaderboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{column}}            {{row.data[column] || \\'-\\'}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeaderboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n    \n        Extends\n    \n    \n                NbLoginComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                returndata\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, router: Router, service: NbAuthService, options: literal type, cd: ChangeDetectorRef, rt: Router, toastrService: NbToastrService, _fileService: CodefetchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NbAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rt\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    NbToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        CodefetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:27\n                \n            \n\n\n            \n                \n                    This function is called when the user clicks on Sign in button.\nSubscribes to the loginUser() function in api.service.ts. Redirects to the dashboard upon successful login, otherwise, diplays an error toastr.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returndata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoginForm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Inject } from '@angular/core';\nimport { NbLoginComponent, NbAuthService, NB_AUTH_OPTIONS } from '@nebular/auth';\nimport { LoginForm, User } from '../../UserDetails';\nimport { ApiService } from '../../api.service';\nimport { Router } from '@angular/router';\nimport { NbComponentStatus, NbToastrService } from '@nebular/theme';\nimport { CodefetchService } from 'src/app/codefetch.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent extends NbLoginComponent {\n  user: LoginForm;\n  returndata: User;\n\n  constructor(private api: ApiService, public router: Router, service: NbAuthService,\n    @Inject(NB_AUTH_OPTIONS) options: {}, cd: ChangeDetectorRef, rt: Router, private toastrService: NbToastrService, private _fileService: CodefetchService) {\n      super(service, options, cd, router);\n  }\n\n  /**\n   * This function is called when the user clicks on Sign in button.\n   * \n   * Subscribes to the loginUser() function in api.service.ts. Redirects to the dashboard upon successful login, otherwise, diplays an error toastr.\n   */\n  login() {\n    this.api.loginUser(this.user)\n      .subscribe(data => {\n        this.returndata = data;\n        // console.log(data);\n        if (this.returndata.success) {\n          this._fileService.openedFileDataChange.next(\"\")\n          this._fileService.changeOpenedFile({name: 'Choose File', id: -1, path: ''});\n          this.router.navigate(['dashboard']);\n        }\n      },\n      error => {\n        // console.log(error);\n        // this.errorMsg = error.error.message;\n        // this.errorOcc = true;\n        let status: NbComponentStatus = \"danger\";\n        this.toastrService.show(error.error.message, \"Error\", {status});\n      });\n  }\n}\n    \n\n    \n        Sign In\n\n\n\n  \n    Username:\n    \n    \n      \n        Username is required!\n      \n    \n  \n\n  \n    Password:\n    \n    \n      \n        Password is required!\n      \n      \n        Password should contain\n        from {{ getConfigValue('forms.validation.password.minLength') }}\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\n        characters\n      \n    \n  \n\n  \n    Remember me\n    Forgot Password?\n  \n\n  \n    Sign In\n  \n\n\n 0\" class=\"links\" aria-label=\"Social sign in\">\n  Or connect with:\n  \n    \n      {{ socialLink.title }}\n      {{ socialLink.title }}\n    \n  \n\n\n\n  Don't have an account? Sign Up\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sign In      Username:                      Username is required!                  Password:                      Password is required!                    Password should contain        from {{ getConfigValue(\\'forms.validation.password.minLength\\') }}        to {{ getConfigValue(\\'forms.validation.password.maxLength\\') }}        characters                  Remember me    Forgot Password?        Sign In   0\" class=\"links\" aria-label=\"Social sign in\">  Or connect with:            {{ socialLink.title }}      {{ socialLink.title }}        Don\\'t have an account? Sign Up'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginForm.html":{"url":"interfaces/LoginForm.html","title":"interface - LoginForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/UserDetails.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    success? : boolean;\n    message? : string;\n    errors? : any;\n    username?: string;\n    first_name?: string;\n    last_name?: string;\n    email?: string;\n    token?: string;\n    loggedin?: boolean;\n}\nexport interface SignUpForm {\n    username: string;\n    first_name: string;\n    last_name: string;\n    email: string;\n    password1: string;\n    password2: string;\n}\nexport interface LoginForm {\n    username: string;\n    password: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/main/main.component.ts\n\n\n    \n        Description\n    \n    \n        The main dashboard page on which the user lands after login\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-view\n            \n\n            \n                styleUrls\n                ./main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeFileID\n                            \n                            \n                                activeFileName\n                            \n                            \n                                activeFilePath\n                            \n                            \n                                allColumns\n                            \n                            \n                                customColumn\n                            \n                            \n                                    Private\n                                data\n                            \n                            \n                                dataSource\n                            \n                            \n                                defaultColumns\n                            \n                            \n                                items\n                            \n                            \n                                rightClickedRow\n                            \n                            \n                                sortColumn\n                            \n                            \n                                sortDirection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                itemClicked\n                            \n                            \n                                newFile\n                            \n                            \n                                onClick\n                            \n                            \n                                onRightClick\n                            \n                            \n                                onSingleCick\n                            \n                            \n                                refreshFileStructure\n                            \n                            \n                                renameFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSourceBuilder: NbTreeGridDataSourceBuilder, sidebarService: NbSidebarService, _fileService: CodefetchService, _dialogService: NbDialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/main/main.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataSourceBuilder\n                                                  \n                                                        \n                                                                        NbTreeGridDataSourceBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for building the table\n\n                                                        \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                    NbSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to hide the sidebar on this page\n\n                                                        \n                                                \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        CodefetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch data from backend\n\n                                                        \n                                                \n                                                \n                                                        _dialogService\n                                                  \n                                                        \n                                                                    NbDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to display the pop up windows\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            itemClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    itemClicked(action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/main/main.component.ts:56\n                \n            \n\n\n            \n                \n                    The function which performs action when an option is selected after right click\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Option which is selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newFile\n                        \n                        \n                    \n                \n            \n            \n                \nnewFile(par: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/main/main.component.ts:128\n                \n            \n\n\n            \n                \n                    Used to create a new file. Uses the CodefetchService/createFile function to create new file and refresh the data.\nOpens the NewfiledialogComponent for the user to enter data. Then processes it and send to backend to create a new file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    par\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file Id of the folder on which new file is called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/main/main.component.ts:215\n                \n            \n\n\n            \n                \n                    Callback for when a file/folder is double clicked. Uses the CodefetchService/readFile function to read the file and navigate to the editor page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file which is double clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRightClick\n                        \n                        \n                    \n                \n            \n            \n                \nonRightClick(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/main/main.component.ts:172\n                \n            \n\n\n            \n                \n                    Callback for when user right click on a file/folder. Displays the menu for selecting action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file/folder which is clicked.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSingleCick\n                        \n                        \n                    \n                \n            \n            \n                \nonSingleCick(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/main/main.component.ts:162\n                \n            \n\n\n            \n                \n                    Callback for when a file/folder is clicked. Highlights the file which is clicked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file/folder which is clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshFileStructure\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshFileStructure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/main/main.component.ts:78\n                \n            \n\n\n            \n                \n                    Refreshes the table with the data from backend.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renameFile\n                        \n                        \n                    \n                \n            \n            \n                \nrenameFile(par: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/main/main.component.ts:146\n                \n            \n\n\n            \n                \n                    Used to rename a file. Uses the CodefetchService/renameFile function to rename the file and refresh the data\nOpens the RenamefileDialog for the user to enter the new name. When submiited, sends the name to the backend to update the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    par\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The file Id of the file which is to be renamed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeFileID\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeFilePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ this.customColumn, ...this.defaultColumns ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'name'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TreeNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NbTreeGridDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['size', 'items' ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NbMenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rightClickedRow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortDirection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NbSortDirection\n\n                        \n                    \n                    \n                        \n                            Default value : NbSortDirection.NONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/main/main.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NbMenuService, NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\nimport { NbSidebarService, NbDialogService, NbMenuItem } from '@nebular/theme';\nimport { CodefetchService } from 'src/app/codefetch.service';\nimport { fileInterface,TreeNode } from 'src/app/fileInterface';\nimport { NewfiledialogComponent } from 'src/app/newfiledialog/newfiledialog.component';\nimport { RenamefileDialog } from 'src/app/renamefiledialog/renamefiledialog.component';\n\n/**\n * The main dashboard page on which the user lands after login\n */\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent implements OnInit{\n  customColumn = 'name';\n  defaultColumns = ['size', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n  activeFileID = -1;\n  activeFileName = '';\n  activeFilePath = '';\n  // For right click menu\n  items: NbMenuItem[];\n\n  dataSource: NbTreeGridDataSource;\n\n  rightClickedRow: any;\n\n  sortColumn: string;\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\n\n  private data: TreeNode[] = [];\n\n  /**\n   * \n   * @param dataSourceBuilder Used for building the table\n   * @param sidebarService Used to hide the sidebar on this page\n   * @param _fileService Service to fetch data from backend\n   * @param _dialogService Used to display the pop up windows\n   */\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder,\n              private sidebarService: NbSidebarService,\n              private _fileService: CodefetchService,\n              private _dialogService: NbDialogService,\n              private router: Router) {\n      \n  }\n\n  /**\n   * The function which performs action when an option is selected after right click\n   * @param action Option which is selected\n   */\n  async itemClicked(action) {\n    action = action.substring(0, 3);\n    if (action == 'Ope'){\n      this._fileService.readfile(this.activeFileID.toString());\n      this._fileService.changeOpenedFile({name: this.activeFileName, id: this.activeFileID, path:this.activeFilePath});\n      this.router.navigate(['dashboard', 'editor']);\n    }\n    else if (action == 'Del') {\n      if(await this._fileService.deletefile(this.activeFileID.toString()))\n        this.refreshFileStructure();\n    }\n    else if (action == 'New') {\n      this.newFile(this.activeFileID);\n    }\n    else if (action == \"Ren\") {\n      this.renameFile(this.activeFileID);\n    }\n  }\n\n    /**\n   * Refreshes the table with the data from backend.\n   */\n  refreshFileStructure(): void {\n    this._fileService.getFileList().subscribe(\n      _data => {\n        if(_data[\"success\"]==false) {\n          this._fileService.handleError(_data[\"message\"],this._fileService.toastrService);\n        }\n        else {\n          console.log(_data[\"structure\"])\n          this.data =  _data[\"structure\"] as TreeNode[];\n          this.dataSource = this.dataSourceBuilder.create(this.data);\n          console.log(this.data)\n        }\n      }, error => {\n        this._fileService.handleError(error,this._fileService.toastrService);\n      }\n    );\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.sidebarService.collapse('code');\n    this.refreshFileStructure();\n  }\n\n  /**\n   * @ignore\n   */\n  updateSort(sortRequest: NbSortRequest): void {\n    this.sortColumn = sortRequest.column;\n    this.sortDirection = sortRequest.direction;\n  }\n\n  /**\n   * @ignore\n   */\n  getSortDirection(column: string): NbSortDirection {\n    if (this.sortColumn === column) {\n      return this.sortDirection;\n    }\n    return NbSortDirection.NONE;\n  }\n\n  /**\n   * Used to create a new file. Uses the [CodefetchService/createFile]{@link CodefetchService#createFile} function to create new file and refresh the data.\n   * \n   * Opens the {@link NewfiledialogComponent} for the user to enter data. Then processes it and send to backend to create a new file.\n   * @param par The file Id of the folder on which new file is called\n   */\n  newFile(par: number) {\n    this._dialogService.open(NewfiledialogComponent, {context: {par: par.toString()}}).onClose.subscribe(\n      async data => {\n        if (data) {\n          if (await this._fileService.createFile(data[2],data[0],data[1]))\n            this.refreshFileStructure();\n        }\n        // console.log(data[2]);\n      }\n    )\n  }\n\n  /**\n   * Used to rename a file. Uses the [CodefetchService/renameFile]{@link CodefetchService#renameFile} function to rename the file and refresh the data\n   * \n   * Opens the {@link RenamefileDialog} for the user to enter the new name. When submiited, sends the name to the backend to update the database\n   * @param par The file Id of the file which is to be renamed\n   */\n  renameFile(par: number) {\n    // console.log(\"Rename called from main\");\n    this._dialogService.open(RenamefileDialog, {context: {oldname: this.activeFileName}}).onClose.subscribe(\n      async data => {\n        if (data) {\n          if (await this._fileService.renamefile(par.toString(), data))\n            this.refreshFileStructure();\n        }\n      }\n    )\n  }\n\n  /**\n   * Callback for when a file/folder is clicked. Highlights the file which is clicked\n   * @param s The file/folder which is clicked\n   */\n  onSingleCick(s) {\n    this.activeFileID = s.data.id;\n    this.activeFileName = s.data.name;\n    this.activeFilePath = s.data.path;\n  }\n\n  /**\n   * Callback for when user right click on a file/folder. Displays the menu for selecting action\n   * @param s The file/folder which is clicked.\n   */\n  onRightClick(s) {\n    this.activeFileID = s.data.id;\n    this.activeFileName = s.data.name;\n    this.activeFilePath = s.data.path;\n    this.rightClickedRow = s.data;\n    if (s.data.is_file) {\n      this.items = [\n        {\n          title: 'Open File',\n          icon: 'file-text-outline',\n        },\n        {\n          title: 'Rename File',\n          icon: 'edit-2-outline',\n        },\n        {\n          title: 'Delete File',\n          icon: 'trash-2-outline',\n        },\n      ];\n    }\n    else {\n      this.items = [\n        {\n          title: 'New File/Folder',\n          icon: 'file-add-outline',\n        },\n        {\n          title: 'Rename Folder',\n          icon: 'edit-2-outline',\n        },\n        {\n          title: 'Delete Folder',\n          icon: 'trash-2-outline',\n        },\n      ];\n    }\n  }\n\n  /**\n * Callback for when a file/folder is double clicked. Uses the [CodefetchService/readFile]{@link CodefetchService#readFile} function to read the file and navigate to the editor page\n * @param s The file which is double clicked\n */\n  onClick(s) {\n    this.activeFileID = s.data.id;\n    this.activeFileName = s.data.name;\n    this.activeFilePath = s.data.path;\n    if (s.data.is_file) {\n      this._fileService.readfile(s.data.id);\n      this._fileService.changeOpenedFile({name: this.activeFileName, id: this.activeFileID, path: this.activeFilePath});\n      this.router.navigate(['dashboard', 'editor']);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  getShowOn(index: number) {\n      const minWithForMultipleColumns = 125;\n      const nextColumnStep = 125;\n      // console.log(index)\n      return minWithForMultipleColumns + (nextColumnStep * index);\n  }\n\n  /**\n   * @ignore\n   */\n  displayValue(val: any, field: string, is_file: boolean) : any {\n    if (field == 'items') {\n      if (is_file) return '-';\n      return val;\n    }\n    if (field == 'size') {\n      val = parseInt(val);\n      if (val >= 1000000000) return (val/1000000000) + ' GB';\n      if (val >= 1000000) return (val/1000000) + ' MB';\n      if (val >= 1000) return (val/1000) + ' KB';\n      return val + ' B';\n    }\n  }\n}\n\n/**\n * @ignore\n */\n@Component({\n  selector: 'nb-fs-icon',\n  template: `\n    \n    \n    \n    \n    \n      \n    \n  `,\n})\nexport class FsIconComponent {\n  @Input() isFile: boolean;\n  @Input() expanded: boolean;\n\n  isDir(): boolean {\n    return this.isFile === false;\n  }\n}\n    \n\n    \n        \n    \n\n        Search:\n        \n        \n            \n            New File\n        \n        \n\n            \n            \n\n            \n                \n                    {{customColumn}}\n                \n                \n                    \n                    {{row.data[customColumn]}}\n                \n            \n\n            \n                \n                    {{column}}\n                \n                \n                    {{displayValue(row.data[column], column, row.data.is_file)}}\n                \n            \n        \n\n    \n\n\n\n\n    \n        \n          \n              \n                  \n                  \n                  {{ item.title }}\n                  \n              \n          \n        \n      \n  \n    \n\n    \n                \n                    ./main.component.scss\n                \n                button[nbTreeGridRowToggle] {\n    background: transparent;\n    border: none;\n    padding: 0;\n}\n\n.search-label {\n    display: block;\n}\n\n.search-input {\n    margin-bottom: 1rem;\n}\n\n.nb-column-name {\n    width: 100%;\n}\n\n@media screen and (min-width: 400px) {\n    .nb-column-name,\n    .nb-column-size {\n        width: 50%;\n    }\n}\n\n@media screen and (min-width: 500px) {\n    .nb-column-name,\n    .nb-column-size,\n    .nb-column-kind {\n        width: 33.333%;\n    }\n}\n\n@media screen and (min-width: 600px) {\n    .nb-column-name {\n        width: 31%;\n    }\n    .nb-column-size,\n    .nb-column-kind,\n    .nb-column-items {\n        width: 23%;\n    }\n}\n\n.dialog {\n    margin: 10px;\n    text-align: center;\n}\n.selected {\n    background-color: rgb(237, 241, 247);\n    color: black;\n}\n.menuItem:hover {\n    color: rgb(86, 142, 247);\n}\n.no-pad {\n    padding: 0;\n    margin: 0;\n}\n.some-pad {\n    padding: 2px;\n    margin: 0;\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Search:                                        New File                                                                                        {{customColumn}}                                                                        {{row.data[customColumn]}}                                                                            {{column}}                                                    {{displayValue(row.data[column], column, row.data.is_file)}}                                                                                                                                  {{ item.title }}                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewfiledialogComponent.html":{"url":"components/NewfiledialogComponent.html","title":"component - NewfiledialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewfiledialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/newfiledialog/newfiledialog.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying the new file dialog box\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-dialog-name-prompt\n            \n\n            \n                styleUrls\n                newfiledialog.scss\n            \n\n\n            \n                template\n                  \n  New file/folder\n  \n    Name:\n    \n    \n    This is a folder\n    \n    \n      {{folder.relative_location}}{{folder.filename}}\n    \n  \n  \n    Cancel\n    Submit\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                dir\n                            \n                            \n                                dirList\n                            \n                            \n                                par\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: NbDialogRef, _fileService: CodefetchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/newfiledialog/newfiledialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        NbDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        CodefetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/newfiledialog/newfiledialog.component.ts:73\n                \n            \n\n\n            \n                \n                    Function that is called when the cancel button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/newfiledialog/newfiledialog.component.ts:43\n                \n            \n\n\n            \n                \n                    The getFolder() function of codefetch service is used to get the folders available and stored in dirList. This is used in the select tag.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/newfiledialog/newfiledialog.component.ts:82\n                \n            \n\n\n            \n                \n                    Function that is called when the Submit button is clicked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the file. taken from the Input box\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checked\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/newfiledialog/newfiledialog.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/newfiledialog/newfiledialog.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dirList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/newfiledialog/newfiledialog.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            par\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/newfiledialog/newfiledialog.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { fileInterface, TreeNode } from '../fileInterface';\nimport { NbCardModule } from '@nebular/theme'\nimport { CodefetchService } from '../codefetch.service';\n/**\n * Component for displaying the new file dialog box\n */\n@Component({\n  selector: 'ngx-dialog-name-prompt',\n  template: `\n      \n      New file/folder\n      \n        Name:\n        \n        \n        This is a folder\n        \n        \n          {{folder.relative_location}}{{folder.filename}}\n        \n      \n      \n        Cancel\n        Submit\n      \n    \n  `,\n  styleUrls: ['newfiledialog.scss'],\n})\nexport class NewfiledialogComponent implements OnInit{\n\n  constructor(protected ref: NbDialogRef, private _fileService: CodefetchService) {}\n  par: string;\n  dir: string;\n  dirList = [];\n  checked = true;\n\n  /**\n   * The getFolder() function of codefetch service is used to get the folders available and stored in dirList. This is used in the select tag.\n   */\n  ngOnInit(): void {\n    this._fileService.getFolder().subscribe(\n      _data => {\n        console.log(_data);\n        if(_data[\"success\"]==false) {\n          console.error(\n            _data[\"message\"]\n          );\n        }\n        else {\n          // console.log(\"success\");\n          this.dirList = [{file_id: -1, filename: \"\", relative_location: \"/\"}];\n          // console.log(_data[\"data\"])\n          this.dirList.push(..._data[\"data\"]);\n        }\n        this.dir = this.par;\n        // console.log(this.dir);\n      }\n    );\n  }\n  /**\n   * @ignore\n   */\n  toggle(checked: boolean) {\n    this.checked = !checked;\n  }\n\n  /**\n   * Function that is called when the cancel button is clicked\n   */\n  cancel() {\n    console.log(\"cancel\")\n    this.ref.close();\n  }\n  /**\n   * Function that is called when the Submit button is clicked\n   * \n   * @param name Name of the file. taken from the Input box\n   */\n  submit(name) {\n    console.log(\"submit\")\n    this.ref.close([name,this.checked,this.dir]);\n  }\n  }\n    \n\n\n    \n                \n                    newfiledialog.scss\n                \n                .input {\n    margin: 20px;\n}\n\nbutton {\n    margin: 0px 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    New file/folder      Name:            This is a folder              {{folder.relative_location}}{{folder.filename}}            Cancel    Submit  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewfiledialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProblemComponent.html":{"url":"components/ProblemComponent.html","title":"component - ProblemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProblemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/problem/problem.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders the information of a particular problem whose ID is passed as\na parameter through the URL\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-problem\n            \n\n            \n                styleUrls\n                ./problem.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./problem.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                child\n                            \n                            \n                                child2\n                            \n                            \n                                data\n                            \n                            \n                                language\n                            \n                            \n                                memory_limit\n                            \n                            \n                                name\n                            \n                            \n                                problemId\n                            \n                            \n                                selected\n                            \n                            \n                                selectedId\n                            \n                            \n                                statement\n                            \n                            \n                                status\n                            \n                            \n                                statusMessage\n                            \n                            \n                                submissionStatus\n                            \n                            \n                                time_limit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                setId\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_fileService: CodefetchService, _dialogService: NbDialogService, _route: ActivatedRoute, stmtService: statementsFetchService, sidebarService: NbSidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/problem/problem.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        CodefetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch information about files from the backend\n\n                                                        \n                                                \n                                                \n                                                        _dialogService\n                                                  \n                                                        \n                                                                    NbDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to create Nebular Dialogs\n\n                                                        \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute Service used to get parameters from the URL\n\n                                                        \n                                                \n                                                \n                                                        stmtService\n                                                  \n                                                        \n                                                                        statementsFetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch statement information from the API\n\n                                                        \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                    NbSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to control the Nebular Sidebar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick(dialog: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/problem/problem.component.ts:119\n                \n            \n\n\n            \n                \n                    This method simply calls the dialog needed to choose files\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dialog\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Dialog Box which is going to be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setId\n                        \n                        \n                    \n                \n            \n            \n                \nsetId(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/problem/problem.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This is the row object of the currently selected file to send as a submission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/problem/problem.component.ts:96\n                \n            \n\n\n            \n                \n                    This submits the file to the server. Basically we are passing the ID of the chosen file\nto the competing backend.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            child\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubmissiontableComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SubmissiontableComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            child2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LeaderboardComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LeaderboardComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"c++\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            memory_limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            problemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statusMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time_limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/problem/problem.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { LeaderboardComponent } from './../../leaderboard/leaderboard.component';\nimport { SubmissiontableComponent } from './../../submissiontable/submissiontable.component';\nimport { statementInterface } from './../../fileInterface';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { statementsFetchService } from 'src/app/statementsfetchservice.service';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder, NbAlertModule } from '@nebular/theme';\nimport { NbSidebarService, NbDialogService } from '@nebular/theme';\nimport { CodefetchService } from 'src/app/codefetch.service';\nimport { fileInterface,TreeNode, submissionInterface } from 'src/app/fileInterface';\nimport { TemplateRef } from '@angular/core';\nimport { ViewChild } from '@angular/core';\n\n/**\n * This component renders the information of a particular problem whose ID is passed as\n * a parameter through the URL\n */\n@Component({\n  selector: 'app-problem',\n  templateUrl: './problem.component.html',\n  styleUrls: ['./problem.component.scss']\n})\nexport class ProblemComponent implements OnInit {\n  @ViewChild(SubmissiontableComponent) child: SubmissiontableComponent ;\n  @ViewChild(LeaderboardComponent) child2: LeaderboardComponent ;\n  problemId: string;\n  name: string;\n  statement: string;\n  memory_limit: string;\n  time_limit: string;\n  statusMessage: string;\n  submissionStatus: string;\n\n  status = \"\";\n  selected = \"\";\n  selectedId:number;\n  language = \"c++\";\n  data;\n  /**\n   *\n   * @param _fileService Service used to fetch information about files from the backend\n   * @param _dialogService Service used to create Nebular Dialogs\n   * @param _route ActivatedRoute Service used to get parameters from the URL\n   * @param stmtService Service used to fetch statement information from the API\n   * @param sidebarService Service used to control the Nebular Sidebar\n   */\n  constructor(private _fileService: CodefetchService, private _dialogService: NbDialogService, private _route : ActivatedRoute, private stmtService: statementsFetchService,  private sidebarService: NbSidebarService) { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n    this.sidebarService.collapse('code');\n    this.problemId = this._route.snapshot.paramMap.get('id');\n\n\n    this.stmtService.getProblemStatement(this.problemId).subscribe(\n      _data => {\n        console.log(_data);\n        this.name = _data[\"problem\"][\"name\"];\n        this.statement = _data[\"problem\"][\"statement\"];\n        console.log(this.statement);\n        this.memory_limit = _data[\"problem\"][\"memory_limit\"];\n        this.time_limit = _data[\"problem\"][\"time_limit\"];\n      }\n    );\n    this._fileService.getFiles().subscribe(\n      _data => {\n        if(_data[\"success\"]==false) {\n          this._fileService.handleError(_data[\"message\"],this._fileService.toastrService);\n        }\n        else {\n          // this.data = _data[\"data\"];\n          console.log(_data[\"data\"]);\n          this.data = _data[\"data\"];\n          console.log(this.data);\n        }\n      }\n    );\n\n  }\n\n  /**\n   *\n   * @param row This is the row object of the currently selected file to send as a submission\n   */\n  setId(row){\n    this.selected = row.filename;\n    this.selectedId = row.file_id;\n\n  }\n  /**\n   * This submits the file to the server. Basically we are passing the ID of the chosen file\n   * to the competing backend.\n   */\n  submit(){\n    let data = {lang: this.language, file_id: this.selectedId, problem_id: this.problemId};\n    this.submissionStatus = \"Submitting...\";\n    this.stmtService.submitProblem(data).subscribe(\n      _data => {\n        this.submissionStatus = _data[\"status\"][\"message\"];\n        if (_data[\"status\"][\"passed\"]){\n          this.status = \"success\";\n        }\n        else {\n          this.status = \"danger\";\n        }\n        this.child.initialise();\n        this.child2.initialise();\n      }\n    );\n\n\n  }\n  /**\n   * This method simply calls the dialog needed to choose files\n   * @param dialog Dialog Box which is going to be called\n   */\n  onClick(dialog: TemplateRef) {\n    this._fileService.getFiles().subscribe(\n      _data => {\n        console.log(_data);\n        if(_data[\"success\"]==false) {\n          this._fileService.handleError(_data[\"message\"],this._fileService.toastrService);\n        }\n        else {\n          console.log(_data[\"data\"]);\n          this.data = _data[\"data\"];\n          console.log(\"mu\");\n        }\n      }\n    );\n    this._dialogService.open(dialog).onClose.subscribe(\n      data => {\n        console.log(data);\n        if (data == 1){\n          if (this.selected == \"\"){\n            this.statusMessage = \"Choose a File please\";\n            this.onClick(dialog);\n          }\n          else {\n            this.statusMessage = \"\";\n            this.submit();\n            this.selected = \"\";\n          }\n        }\n        // if (data ==)\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n    {{name}}\n    Time Limit: {{time_limit}}s\n    Memory Limit: {{memory_limit}}MB \n\n\n\n\nSubmit Solution\n \n\n    Submission Status: {{submissionStatus}}\n\n\n\n    \n        \n    \n    \n        \n    \n\n\n\n    \n        Choose File To Submit\n        \n            \n                \n                    \n                        .{{row.path}}{{ row.filename }}\n                    \n                \n            \n\n            \n\n          \n          \n\n          \n              \n                  {{column}}\n              \n              {{row.data[column] || '-'}}\n          \n       -->\n            Close Dialog  -->\n            \n            {{statusMessage}}\n            Selected File: {{selected}}\n             Selected Language:\n                \n                    C \n                    C++\n                    Python\n                    Python 3\n                    Haskell\n                    Bash\n                \n            \n            \n            Submit File \n\n        \n    \n\n    \n\n    \n                \n                    ./problem.component.scss\n                \n                .heading {\n  text-align: center;\n}\n.subheading {\n  font-size:18px;\n}\n\n.element:hover{\n  background-color: #0c1842;\n}\n.mat-h5, .mat-typography h5 {\n  margin-bottom:5px;\n  margin-top: 5px;\n}\nnb-dialog-container {\n  overflow: hidden scroll;\n  margin-right: -5px;\n}\n.holder {\n  max-height:40vh;\n  overflow: hidden scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{name}}    Time Limit: {{time_limit}}s    Memory Limit: {{memory_limit}}MB Submit Solution     Submission Status: {{submissionStatus}}                                            Choose File To Submit                                                                                .{{row.path}}{{ row.filename }}                                                                                                                          {{column}}                            {{row.data[column] || \\'-\\'}}                 -->            Close Dialog  -->                        {{statusMessage}}            Selected File: {{selected}}             Selected Language:                                    C                     C++                    Python                    Python 3                    Haskell                    Bash                                                    Submit File             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProblemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProblemlistComponent.html":{"url":"components/ProblemlistComponent.html","title":"component - ProblemlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProblemlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/problemlist/problemlist.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to list out the problems of a particular contest. This component\ntakes contest ID as a parameter and uses it to fetch the problem list\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-problemlist\n            \n\n            \n                styleUrls\n                ./problemlist.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./problemlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                submissionData\n                            \n                            \n                                submissionsColumns\n                            \n                            \n                                submissionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialise\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contestId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, stmtService: statementsFetchService, submissionBuilder: NbTreeGridDataSourceBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/problemlist/problemlist.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router used to route routes\n\n                                                        \n                                                \n                                                \n                                                        stmtService\n                                                  \n                                                        \n                                                                        statementsFetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get API data regarding available problems\n\n                                                        \n                                                \n                                                \n                                                        submissionBuilder\n                                                  \n                                                        \n                                                                        NbTreeGridDataSourceBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tree Grid Builder used to build entries in the table\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contestId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/problemlist/problemlist.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialise\n                        \n                        \n                    \n                \n            \n            \n                \ninitialise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problemlist/problemlist.component.ts:32\n                \n            \n\n\n            \n                \n                    Initialises the entries of the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problemlist/problemlist.component.ts:53\n                \n            \n\n\n            \n                \n                    Method used to switch into the problem's view and render the problem statement\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            submissionData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TreeNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/problemlist/problemlist.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionsColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Problem Name', 'Accepted Submissions', 'Total Submissions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/problemlist/problemlist.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NbTreeGridDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/problemlist/problemlist.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { TreeNode, statementInterface } from 'src/app/fileInterface';\nimport { statementsFetchService } from 'src/app/statementsfetchservice.service';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder, NbAlertModule } from '@nebular/theme';\nimport { Router } from '@angular/router';\n/**\n * Component used to list out the problems of a particular contest. This component\n * takes contest ID as a parameter and uses it to fetch the problem list\n */\n@Component({\n  selector: 'app-problemlist',\n  templateUrl: './problemlist.component.html',\n  styleUrls: ['./problemlist.component.scss']\n})\nexport class ProblemlistComponent implements OnInit {\n  @Input() contestId: number;\n  submissionsColumns = ['Problem Name', 'Accepted Submissions', 'Total Submissions'];\n  submissionSource: NbTreeGridDataSource;\n  private submissionData: TreeNode[] = [];\n\n  /**\n   * @param router Router used to route routes\n   * @param stmtService Service used to get API data regarding available problems\n   * @param submissionBuilder Tree Grid Builder used to build entries in the table\n   */\n  constructor(private router: Router, private stmtService: statementsFetchService, private submissionBuilder:  NbTreeGridDataSourceBuilder) { }\n\n  /**\n   * Initialises the entries of the table\n   */\n  initialise(){\n    this.stmtService.getProblems({contest_id: this.contestId}).subscribe(\n      _data => {\n        console.log(_data);\n        console.log(\"uu\");\n        this.submissionData =  _data[\"problems\"] as TreeNode[];\n        console.log(this.submissionData);\n        this.submissionSource = this.submissionBuilder.create(this.submissionData);\n      }\n    );\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.initialise();\n  }\n\n  /**\n   * Method used to switch into the problem's view and render the problem statement\n   */\n  onClick(s){\n    this.router.navigate(['/dashboard/problem', {id: s.data.id}]);\n }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n  \n      \n          {{column}}\n      \n      {{row.data[column] || '-'}}\n  \n\n\n\n    \n\n    \n                \n                    ./problemlist.component.scss\n                \n                .element:hover{\n  background-color: #0c1842;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{column}}            {{row.data[column] || \\'-\\'}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProblemlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register/register.component.ts\n\n\n\n    \n        Extends\n    \n    \n                NbRegisterComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                returndata\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, router: Router, service: NbAuthService, options: literal type, cd: ChangeDetectorRef, rt: Router, toastrService: NbToastrService, _fileService: CodefetchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/register/register.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    NbAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rt\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    NbToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        CodefetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:34\n                \n            \n\n\n            \n                \n                    This function is called when the user clicks on Register button.\nSubscribes to the registerUser() function in api.service.ts. Redirects to the dashboard upon successful register, otherwise, diplays an error toastr with the error description received from the server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returndata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SignUpForm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, Inject } from '@angular/core';\nimport { NbRegisterComponent, NbAuthService, NB_AUTH_OPTIONS } from '@nebular/auth';\nimport { SignUpForm, User } from '../../UserDetails';\nimport { ApiService } from '../../api.service';\nimport { Router } from '@angular/router';\nimport { NbComponentStatus, NbToastrService } from '@nebular/theme';\nimport { CodefetchService } from 'src/app/codefetch.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent extends NbRegisterComponent {\n  user: SignUpForm;\n  returndata: User;\n\n  constructor(private api: ApiService,\n              public router: Router,\n              service: NbAuthService,\n              @Inject(NB_AUTH_OPTIONS) options: {},\n              cd: ChangeDetectorRef,\n              rt: Router,\n              private toastrService: NbToastrService,\n              private _fileService: CodefetchService) {\n      super(service, options, cd, router);\n  }\n\n  /**\n   * This function is called when the user clicks on Register button.\n   * \n   * Subscribes to the registerUser() function in api.service.ts. Redirects to the dashboard upon successful register, otherwise, diplays an error toastr with the error description received from the server.\n   */\n\n  register() {\n    this.api.registerUser(this.user)\n      .subscribe(data => {\n        this.returndata = data;\n        console.log(data);\n        if (this.returndata.success) {\n          this._fileService.openedFileDataChange.next(\"\")\n          this._fileService.changeOpenedFile({name: 'Choose File', id: -1, path: ''});\n          this.router.navigate(['dashboard']);\n        }\n      },\n      error => {\n        // console.log(error);\n        // console.log(JSON.parse(error.error.errors));\n        let status: NbComponentStatus = \"danger\";\n        this.toastrService.show(Object.values(JSON.parse(error.error.errors))[0][0].message, \"Error\", {status});\n      });\n  }\n}\n    \n\n    \n        Register\n\n\n\n  \n    First name:\n    \n    \n      \n        First name is required!\n      \n      \n        First name should contains\n        from {{getConfigValue('forms.validation.firstName.minLength')}}\n        to {{getConfigValue('forms.validation.firstName.maxLength')}}\n        characters\n      \n    \n  \n  \n    Last name:\n    \n    \n      \n        Last name is required!\n      \n      \n        Last name should contains\n        from {{getConfigValue('forms.validation.lastName.minLength')}}\n        to {{getConfigValue('forms.validation.lastName.maxLength')}}\n        characters\n      \n    \n  \n\n  \n    Username:\n    \n    \n      \n        Last name is required!\n      \n      \n        Username should contains\n        from {{getConfigValue('forms.validation.username.minLength')}}\n        to {{getConfigValue('forms.validation.username.maxLength')}}\n        characters\n      \n    \n  \n\n  \n    Email address:\n    \n    \n      \n        Email is required!\n      \n      \n        Email should be the real one!\n      \n    \n  \n\n  \n    Password:\n    \n    \n      \n        Password is required!\n      \n      \n        Password should contains\n        from {{ getConfigValue('forms.validation.password.minLength') }}\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\n        characters\n      \n    \n  \n\n  \n    Repeat password:\n    \n    \n      \n        Password confirmation is required!\n      \n      \n        Password does not match the confirm password.\n      \n    \n  \n\n    \n      Agree to Terms & Conditions\n    \n   -->\n\n  \n    Register\n  \n\n\n 0\" class=\"links\" aria-label=\"Social sign in\">\n  or enter with:\n  \n    \n      {{ socialLink.title }}\n      {{ socialLink.title }}\n    \n  \n\n\n\n  Already have an account? Log in\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Register      First name:                      First name is required!                    First name should contains        from {{getConfigValue(\\'forms.validation.firstName.minLength\\')}}        to {{getConfigValue(\\'forms.validation.firstName.maxLength\\')}}        characters                  Last name:                      Last name is required!                    Last name should contains        from {{getConfigValue(\\'forms.validation.lastName.minLength\\')}}        to {{getConfigValue(\\'forms.validation.lastName.maxLength\\')}}        characters                  Username:                      Last name is required!                    Username should contains        from {{getConfigValue(\\'forms.validation.username.minLength\\')}}        to {{getConfigValue(\\'forms.validation.username.maxLength\\')}}        characters                  Email address:                      Email is required!                    Email should be the real one!                  Password:                      Password is required!                    Password should contains        from {{ getConfigValue(\\'forms.validation.password.minLength\\') }}        to {{ getConfigValue(\\'forms.validation.password.maxLength\\') }}        characters                  Repeat password:                      Password confirmation is required!                    Password does not match the confirm password.                      Agree to Terms & Conditions       -->      Register   0\" class=\"links\" aria-label=\"Social sign in\">  or enter with:            {{ socialLink.title }}      {{ socialLink.title }}        Already have an account? Log in'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RenamefileDialog.html":{"url":"components/RenamefileDialog.html","title":"component - RenamefileDialog","body":"\n                   \n\n\n\n\n\n  Components\n  RenamefileDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/renamefiledialog/renamefiledialog.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the dialog box whixh is shown when a rename request is made.\nIt has an input field to enter the new name and two buttons: Cancel and Rename\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-dialog-rename-prompt\n            \n\n            \n                styleUrls\n                renamefiledialog.scss\n            \n\n\n            \n                template\n                  \n  Rename\n  \n    \n    \n  \n  \n    Cancel\n    Rename\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                oldname\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: NbDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/renamefiledialog/renamefiledialog.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        NbDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/renamefiledialog/renamefiledialog.component.ts:38\n                \n            \n\n\n            \n                \n                    Callback when the Cancel button is clicked \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/renamefiledialog/renamefiledialog.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(name)\n                \n            \n\n\n            \n                \n                    Defined in src/app/renamefiledialog/renamefiledialog.component.ts:46\n                \n            \n\n\n            \n                \n                    Callback when the Rename button is clicked \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New Name of the file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/renamefiledialog/renamefiledialog.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n/**\n * Component for the dialog box whixh is shown when a rename request is made.\n * \n * It has an input field to enter the new name and two buttons: Cancel and Rename\n */\n@Component({\n  selector: 'ngx-dialog-rename-prompt',\n  template: `\n      \n      Rename\n      \n        \n        \n      \n      \n        Cancel\n        Rename\n      \n    \n  `,\n  styleUrls: ['renamefiledialog.scss'],\n})\nexport class RenamefileDialog implements OnInit{\n\n  constructor(protected ref: NbDialogRef) {}\n  oldname: string;\n\n  ngOnInit(): void { \n    console.log(\"rename dialog comp \" + this.oldname);\n  }\n\n  /**\n   * Callback when the Cancel button is clicked \n   */\n  cancel() {\n    this.ref.close(false);\n  }\n\n  /**\n   * Callback when the Rename button is clicked \n   * @param name New Name of the file\n   */\n  submit(name) {\n    this.ref.close(name);\n  }\n  }\n    \n\n\n    \n                \n                    renamefiledialog.scss\n                \n                .input {\n    margin: 20px;\n}\n\nbutton {\n    margin: 0px 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Rename                  Cancel    Rename  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RenamefileDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpForm.html":{"url":"interfaces/SignUpForm.html","title":"interface - SignUpForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SignUpForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/UserDetails.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        last_name\n                                \n                                \n                                        password1\n                                \n                                \n                                        password2\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password1\n                                    \n                                \n                                \n                                    \n                                        password1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password2\n                                    \n                                \n                                \n                                    \n                                        password2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    success? : boolean;\n    message? : string;\n    errors? : any;\n    username?: string;\n    first_name?: string;\n    last_name?: string;\n    email?: string;\n    token?: string;\n    loggedin?: boolean;\n}\nexport interface SignUpForm {\n    username: string;\n    first_name: string;\n    last_name: string;\n    email: string;\n    password1: string;\n    password2: string;\n}\nexport interface LoginForm {\n    username: string;\n    password: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubmissiontableComponent.html":{"url":"components/SubmissiontableComponent.html","title":"component - SubmissiontableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubmissiontableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/submissiontable/submissiontable.component.ts\n\n\n    \n        Description\n    \n    \n        This component fetches the past submission data of each user for a problem whose problemID is\ngiven as an input.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-submissiontable\n            \n\n            \n                styleUrls\n                ./submissiontable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./submissiontable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                submissionData\n                            \n                            \n                                submissionsColumns\n                            \n                            \n                                submissionSource\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                problemId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stmtService: statementsFetchService, submissionBuilder: NbTreeGridDataSourceBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/submissiontable/submissiontable.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stmtService\n                                                  \n                                                        \n                                                                        statementsFetchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to fetch information about the problems from the API\n\n                                                        \n                                                \n                                                \n                                                        submissionBuilder\n                                                  \n                                                        \n                                                                        NbTreeGridDataSourceBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                NBTreeGridBuilder for the submissions made by the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        problemId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/submissiontable/submissiontable.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            submissionData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TreeNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/submissiontable/submissiontable.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionsColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Passed', 'Status', 'Time']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/submissiontable/submissiontable.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NbTreeGridDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/submissiontable/submissiontable.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { fileInterface,TreeNode, submissionInterface } from 'src/app/fileInterface';\nimport { statementsFetchService } from 'src/app/statementsfetchservice.service';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder, NbAlertModule } from '@nebular/theme';\n\n/**\n * This component fetches the past submission data of each user for a problem whose problemID is\n * given as an input.\n */\n@Component({\n  selector: 'app-submissiontable',\n  templateUrl: './submissiontable.component.html',\n  styleUrls: ['./submissiontable.component.scss']\n})\nexport class SubmissiontableComponent implements OnInit {\n  @Input() problemId: number;\n  submissionsColumns = ['Passed', 'Status', 'Time'];\n  submissionSource: NbTreeGridDataSource;\n  private submissionData: TreeNode[] = [];\n\n  /**\n   *\n   * @param stmtService Service used to fetch information about the problems from the API\n   * @param submissionBuilder NBTreeGridBuilder for the submissions made by the user\n   */\n  constructor(private stmtService: statementsFetchService, private submissionBuilder:  NbTreeGridDataSourceBuilder) { }\n\n  /**\n   * @ignore\n   */\n  initialise(){\n    this.stmtService.getSubmissions({problem_id: this.problemId}).subscribe(\n      _data => {\n        this.submissionData =  _data[\"submissions\"] as TreeNode[];\n        this.submissionSource = this.submissionBuilder.create(this.submissionData);\n      }\n    );\n  }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.initialise();\n  }\n  /**\n   * @ignore\n   */\n  do(){\n    alert(\"oh\");\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n  \n      \n          {{column}}\n      \n      {{row.data[column] || '-'}}\n  \n\n\n    \n\n    \n                \n                    ./submissiontable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{column}}            {{row.data[column] || \\'-\\'}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompetingComponent', 'selector': 'app-competing'},{'name': 'ConfirmDialog', 'selector': 'ngx-dialog-confirm-prompt'},{'name': 'ContestlistComponent', 'selector': 'app-contestlist'},{'name': 'ContestsComponent', 'selector': 'app-contests'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'FilelistComponent', 'selector': 'app-filelist'},{'name': 'HeaderComponent', 'selector': 'ngx-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'LoginComponent', 'selector': 'app-root'},{'name': 'MainComponent', 'selector': 'app-main-view'},{'name': 'NewfiledialogComponent', 'selector': 'ngx-dialog-name-prompt'},{'name': 'ProblemComponent', 'selector': 'app-problem'},{'name': 'ProblemlistComponent', 'selector': 'app-problemlist'},{'name': 'RegisterComponent', 'selector': 'app-root'},{'name': 'RenamefileDialog', 'selector': 'ngx-dialog-rename-prompt'},{'name': 'SubmissiontableComponent', 'selector': 'app-submissiontable'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubmissiontableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemeModule.html":{"url":"modules/ThemeModule.html","title":"module - ThemeModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemeModule\n\n\n\ncluster_ThemeModule_declarations\n\n\n\ncluster_ThemeModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nThemeModule\n\nThemeModule\n\nThemeModule -->\n\nHeaderComponent->ThemeModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nThemeModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/@theme/theme.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/@theme/theme.module.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  NbActionsModule,\n  NbLayoutModule,\n  NbMenuModule,\n  NbSearchModule,\n  NbSidebarModule,\n  NbUserModule,\n  NbContextMenuModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbThemeModule,\n} from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\n\nimport { HeaderComponent } from './header/header.component';\n\n\nconst NB_MODULES = [\n  NbLayoutModule,\n  NbMenuModule,\n  NbUserModule,\n  NbActionsModule,\n  NbSearchModule,\n  NbSidebarModule,\n  NbContextMenuModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbEvaIconsModule,\n];\n\nconst COMPONENTS = [\n  HeaderComponent,\n];\n\n\n@NgModule({\n  imports: [CommonModule, ...NB_MODULES],\n  exports: [CommonModule, ...COMPONENTS],\n  declarations: [...COMPONENTS],\n})\nexport class ThemeModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ThemeModule,\n      providers: [\n        ...NbThemeModule.forRoot(\n          {\n            name: 'dark',\n          },\n        ).providers,\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/token.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Extracts the token received from server from localstorage and if present, attaches it in the header of every request.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/token.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpInterceptor, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Extracts the token received from server from localstorage and if present, attaches it in the header of every request.\n */\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n    \n    intercept(req: HttpRequest,\n              next: HttpHandler): Observable> {\n\n        const idToken = localStorage.getItem(\"token\");\n\n        if (idToken) {\n            const cloned = req.clone({\n                headers: req.headers.set(\"Authorization\",\n                    \"Token \" + idToken)\n            });\n\n            return next.handle(cloned);\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeNode.html":{"url":"interfaces/TreeNode.html","title":"interface - TreeNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreeNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fileInterface.ts\n        \n\n            \n                Description\n            \n            \n                Tree node interface used to represent entries in the Nebular Tree Grid\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                        data\n                                \n                                \n                                            Optional\n                                        expanded\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         TreeNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreeNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StringifyOptions } from 'querystring';\n\n/**\n * Inteface that represents a file in the filelist.\n */\nexport interface fileInterface {\n\tname?: string,\n    size?: string,\n    id?: number,\n    is_file?: boolean,\n    path?: string\n}\n/**\n * Interface that represents a problem statement\n */\nexport interface statementInterface {\n  id: number,\n\tname: string,\n  tlimit: number,\n  mlimit: number\n}\n/**\n * Interface that represents a submission made by a user\n */\nexport interface submissionInterface {\n  Passed: string,\n\tStatus: string,\n  Time: string\n}\n/**\n * Interface standing for the Score of a user in a problem/contest\n */\nexport interface scoreInterface {\n  Score: number,\n  Name: string\n}\n/**\n * Tree node interface used to represent entries in the Nebular Tree Grid\n */\nexport interface TreeNode {\n  data: T;\n  children?: TreeNode[];\n  expanded?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/UserDetails.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        errors\n                                \n                                \n                                            Optional\n                                        first_name\n                                \n                                \n                                            Optional\n                                        last_name\n                                \n                                \n                                            Optional\n                                        loggedin\n                                \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        success\n                                \n                                \n                                            Optional\n                                        token\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                    \n                                \n                                \n                                    \n                                        errors:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loggedin\n                                    \n                                \n                                \n                                    \n                                        loggedin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    success? : boolean;\n    message? : string;\n    errors? : any;\n    username?: string;\n    first_name?: string;\n    last_name?: string;\n    email?: string;\n    token?: string;\n    loggedin?: boolean;\n}\nexport interface SignUpForm {\n    username: string;\n    first_name: string;\n    last_name: string;\n    email: string;\n    password1: string;\n    password2: string;\n}\nexport interface LoginForm {\n    username: string;\n    password: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/code_interface.html":{"url":"interfaces/code_interface.html","title":"interface - code_interface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  code_interface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/code_interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the Code. Used when a request for run is made. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        command\n                                \n                                \n                                        file_id\n                                \n                                \n                                        input\n                                \n                                \n                                        input_type\n                                \n                                \n                                        lang\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_id\n                                    \n                                \n                                \n                                    \n                                        file_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_type\n                                    \n                                \n                                \n                                    \n                                        input_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface code_interface {\n\tinput_type: string,\n\tinput: string,\n  lang: string,\n  command: string,\n  file_id: string\n}\n\n/**\n * The interface to store the output data returned after running the code\n */\nexport interface output_interface {\n\tsuccess: boolean,\n\toutput: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/API.ts\n            \n            variable\n            API\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/@theme/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/@theme/styles/theme.corporate.ts\n            \n            variable\n            baseThemeVariables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/styles/theme.corporate.ts\n            \n            variable\n            CORPORATE_THEME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/styles/theme.cosmic.ts\n            \n            variable\n            baseThemeVariables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/styles/theme.cosmic.ts\n            \n            variable\n            COSMIC_THEME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/styles/theme.dark.ts\n            \n            variable\n            baseThemeVariables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/styles/theme.dark.ts\n            \n            variable\n            DARK_THEME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/styles/theme.default.ts\n            \n            variable\n            baseThemeVariables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/styles/theme.default.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/theme.module.ts\n            \n            variable\n            COMPONENTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/@theme/theme.module.ts\n            \n            variable\n            NB_MODULES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/UserDetails.ts\n            \n            interface\n            LoginForm\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/UserDetails.ts\n            \n            interface\n            SignUpForm\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/UserDetails.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/api.service.ts\n            \n            injectable\n            ApiService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth-guard.ts\n            \n            guard\n            AuthGuard\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/auth-guard.ts\n            \n            guard\n            AuthGuard2\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/code-compile-service.service.ts\n            \n            injectable\n            CodeService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/code_interface.ts\n            \n            interface\n            code_interface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/code_interface.ts\n            \n            interface\n            output_interface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/codefetch.service.ts\n            \n            injectable\n            CodefetchService\n            \n                52 %\n                (13/25)\n            \n        \n        \n            \n                \n                src/app/confirmdialog/confirmdialog.component.ts\n            \n            component\n            ConfirmDialog\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/connectpart.service.ts\n            \n            injectable\n            ConnectpartService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/contestlist/contestlist.component.ts\n            \n            component\n            ContestlistComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/competing/competing.component.ts\n            \n            component\n            CompetingComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/dashboard/contests/contests.component.ts\n            \n            component\n            ContestsComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/dashboard/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                38 %\n                (8/21)\n            \n        \n        \n            \n                \n                src/app/dashboard/problem/problem.component.ts\n            \n            component\n            ProblemComponent\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/fileInterface.ts\n            \n            interface\n            fileInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/fileInterface.ts\n            \n            interface\n            scoreInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/fileInterface.ts\n            \n            interface\n            statementInterface\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/fileInterface.ts\n            \n            interface\n            submissionInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/fileInterface.ts\n            \n            interface\n            TreeNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/filelist/filelist.component.ts\n            \n            component\n            FilelistComponent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            variable\n            particlesJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/leaderboard/leaderboard.component.ts\n            \n            component\n            LeaderboardComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/newfiledialog/newfiledialog.component.ts\n            \n            component\n            NewfiledialogComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/problemlist/problemlist.component.ts\n            \n            component\n            ProblemlistComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/renamefiledialog/renamefiledialog.component.ts\n            \n            component\n            RenamefileDialog\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/statementsfetchservice.service.ts\n            \n            injectable\n            statementsFetchService\n            \n                55 %\n                (11/20)\n            \n        \n        \n            \n                \n                src/app/submissiontable/submissiontable.component.ts\n            \n            component\n            SubmissiontableComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.3\n        \n            @angular/cdk : ^10.2.1\n        \n            @angular/common : ~11.0.3\n        \n            @angular/compiler : ~11.0.3\n        \n            @angular/core : ~11.0.3\n        \n            @angular/forms : ~11.0.3\n        \n            @angular/material : ^10.2.5\n        \n            @angular/platform-browser : ~11.0.3\n        \n            @angular/platform-browser-dynamic : ~11.0.3\n        \n            @angular/router : ~11.0.3\n        \n            @nebular/auth : ^6.2.1\n        \n            @nebular/eva-icons : ^6.2.1\n        \n            @nebular/theme : ^6.2.1\n        \n            angular-particle : ^1.0.4\n        \n            angular-particle-updated : ^1.0.4-1\n        \n            bootstrap : ^4.5.3\n        \n            eva-icons : ^1.1.2\n        \n            ng-katex : ^2.0.3\n        \n            ng2-ace-editor : ^0.3.9\n        \n            ng2-right-click-menu : ^1.1.3\n        \n            ngx-countdown : ^11.0.0\n        \n            ngx-float-button : ^1.0.0\n        \n            particle.js : ^1.0.7\n        \n            particles.js : ^2.0.0\n        \n            rxjs : ~6.6.0\n        \n            rxjs-compat : ^6.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/fileInterface.html":{"url":"interfaces/fileInterface.html","title":"interface - fileInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  fileInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fileInterface.ts\n        \n\n            \n                Description\n            \n            \n                Inteface that represents a file in the filelist.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        is_file\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_file\n                                    \n                                \n                                \n                                    \n                                        is_file:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StringifyOptions } from 'querystring';\n\n/**\n * Inteface that represents a file in the filelist.\n */\nexport interface fileInterface {\n\tname?: string,\n    size?: string,\n    id?: number,\n    is_file?: boolean,\n    path?: string\n}\n/**\n * Interface that represents a problem statement\n */\nexport interface statementInterface {\n  id: number,\n\tname: string,\n  tlimit: number,\n  mlimit: number\n}\n/**\n * Interface that represents a submission made by a user\n */\nexport interface submissionInterface {\n  Passed: string,\n\tStatus: string,\n  Time: string\n}\n/**\n * Interface standing for the Score of a user in a problem/contest\n */\nexport interface scoreInterface {\n  Score: number,\n  Name: string\n}\n/**\n * Tree node interface used to represent entries in the Nebular Tree Grid\n */\nexport interface TreeNode {\n  data: T;\n  children?: TreeNode[];\n  expanded?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOCDE Frontend Documentation\nThis is the documentation of the frontend code for OCDE.\nOCDE is based on Angular and uses ng-countdown, Nebular and ACE Editor as core dependencies. The code uses Angular's core principle of separating asynchronous components of the program logic into services for effective communication and thus the documentation of the services and components have been provided through this documentation.\nCreated by Pradipta Bora, Ankit Kumar Jain, Vibhav Agarwal and Harshit Gupta using Compodoc for Angular.\nMIT Licensed (C) 2020.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/output_interface.html":{"url":"interfaces/output_interface.html","title":"interface - output_interface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  output_interface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/code_interface.ts\n        \n\n            \n                Description\n            \n            \n                The interface to store the output data returned after running the code\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        output\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                    \n                                \n                                \n                                    \n                                        output:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface code_interface {\n\tinput_type: string,\n\tinput: string,\n  lang: string,\n  command: string,\n  file_id: string\n}\n\n/**\n * The interface to store the output data returned after running the code\n */\nexport interface output_interface {\n\tsuccess: boolean,\n\toutput: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_bootstrap\n\n\n\ncluster_ThemeModule\n\n\n\ncluster_ThemeModule_declarations\n\n\n\ncluster_ThemeModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompetingComponent\n\nCompetingComponent\n\nAppModule -->\n\nCompetingComponent->AppModule\n\n\n\n\n\nConfirmDialog\n\nConfirmDialog\n\nAppModule -->\n\nConfirmDialog->AppModule\n\n\n\n\n\nContestlistComponent\n\nContestlistComponent\n\nAppModule -->\n\nContestlistComponent->AppModule\n\n\n\n\n\nContestsComponent\n\nContestsComponent\n\nAppModule -->\n\nContestsComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFilelistComponent\n\nFilelistComponent\n\nAppModule -->\n\nFilelistComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nNewfiledialogComponent\n\nNewfiledialogComponent\n\nAppModule -->\n\nNewfiledialogComponent->AppModule\n\n\n\n\n\nProblemComponent\n\nProblemComponent\n\nAppModule -->\n\nProblemComponent->AppModule\n\n\n\n\n\nProblemlistComponent\n\nProblemlistComponent\n\nAppModule -->\n\nProblemlistComponent->AppModule\n\n\n\n\n\nRenamefileDialog\n\nRenamefileDialog\n\nAppModule -->\n\nRenamefileDialog->AppModule\n\n\n\n\n\nSubmissiontableComponent\n\nSubmissiontableComponent\n\nAppModule -->\n\nSubmissiontableComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nThemeModule\n\nThemeModule\n\nAppModule -->\n\nThemeModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nThemeModule->HeaderComponent \n\n\n\n\n\nCodeService\n\nCodeService\n\nAppModule -->\n\nCodeService->AppModule\n\n\n\n\n\nCodefetchService\n\nCodefetchService\n\nAppModule -->\n\nCodefetchService->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nEditorComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nThemeModule -->\n\nHeaderComponent->ThemeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/scoreInterface.html":{"url":"interfaces/scoreInterface.html","title":"interface - scoreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  scoreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fileInterface.ts\n        \n\n            \n                Description\n            \n            \n                Interface standing for the Score of a user in a problem/contest\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Name\n                                \n                                \n                                        Score\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Score\n                                    \n                                \n                                \n                                    \n                                        Score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StringifyOptions } from 'querystring';\n\n/**\n * Inteface that represents a file in the filelist.\n */\nexport interface fileInterface {\n\tname?: string,\n    size?: string,\n    id?: number,\n    is_file?: boolean,\n    path?: string\n}\n/**\n * Interface that represents a problem statement\n */\nexport interface statementInterface {\n  id: number,\n\tname: string,\n  tlimit: number,\n  mlimit: number\n}\n/**\n * Interface that represents a submission made by a user\n */\nexport interface submissionInterface {\n  Passed: string,\n\tStatus: string,\n  Time: string\n}\n/**\n * Interface standing for the Score of a user in a problem/contest\n */\nexport interface scoreInterface {\n  Score: number,\n  Name: string\n}\n/**\n * Tree node interface used to represent entries in the Nebular Tree Grid\n */\nexport interface TreeNode {\n  data: T;\n  children?: TreeNode[];\n  expanded?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/statementInterface.html":{"url":"interfaces/statementInterface.html","title":"interface - statementInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  statementInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fileInterface.ts\n        \n\n            \n                Description\n            \n            \n                Interface that represents a problem statement\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        mlimit\n                                \n                                \n                                        name\n                                \n                                \n                                        tlimit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mlimit\n                                    \n                                \n                                \n                                    \n                                        mlimit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tlimit\n                                    \n                                \n                                \n                                    \n                                        tlimit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StringifyOptions } from 'querystring';\n\n/**\n * Inteface that represents a file in the filelist.\n */\nexport interface fileInterface {\n\tname?: string,\n    size?: string,\n    id?: number,\n    is_file?: boolean,\n    path?: string\n}\n/**\n * Interface that represents a problem statement\n */\nexport interface statementInterface {\n  id: number,\n\tname: string,\n  tlimit: number,\n  mlimit: number\n}\n/**\n * Interface that represents a submission made by a user\n */\nexport interface submissionInterface {\n  Passed: string,\n\tStatus: string,\n  Time: string\n}\n/**\n * Interface standing for the Score of a user in a problem/contest\n */\nexport interface scoreInterface {\n  Score: number,\n  Name: string\n}\n/**\n * Tree node interface used to represent entries in the Nebular Tree Grid\n */\nexport interface TreeNode {\n  data: T;\n  children?: TreeNode[];\n  expanded?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/statementsFetchService.html":{"url":"injectables/statementsFetchService.html","title":"injectable - statementsFetchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  statementsFetchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/statementsfetchservice.service.ts\n        \n\n            \n                Description\n            \n            \n                This is the main service that interacts with the API backend for competing created in DRF.\nThe API endpoints are maintained in a separate API.ts file that we are abstracting here\nMethods for different features of the backend are implemented here.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contestScoreURL\n                            \n                            \n                                contestsURL\n                            \n                            \n                                contestURL\n                            \n                            \n                                problemsURL\n                            \n                            \n                                problemURL\n                            \n                            \n                                scoreURL\n                            \n                            \n                                submissionURL\n                            \n                            \n                                submitURL\n                            \n                            \n                                    Public\n                                toastrService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getContest\n                            \n                            \n                                getContests\n                            \n                            \n                                getContestScores\n                            \n                            \n                                getProblems\n                            \n                            \n                                getProblemStatement\n                            \n                            \n                                getScores\n                            \n                            \n                                getSubmissions\n                            \n                            \n                                handleError\n                            \n                            \n                                submitProblem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastrService: NbToastrService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/statementsfetchservice.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    NbToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Nebular Service used to pass messages as toasts\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTTP service used to make HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContest\n                        \n                        \n                    \n                \n            \n            \n                \ngetContest(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:76\n                \n            \n\n\n            \n                \n                    Service method to get more information about a contest\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contest Interface (holds information about which contest to query)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContests\n                        \n                        \n                    \n                \n            \n            \n                \ngetContests(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:66\n                \n            \n\n\n            \n                \n                    Service method to get contests list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data reperesenting current state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContestScores\n                        \n                        \n                    \n                \n            \n            \n                \ngetContestScores(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:123\n                \n            \n\n\n            \n                \n                    Retrieves the score of a user in a particular contest\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about which contest and user to query for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProblems\n                        \n                        \n                    \n                \n            \n            \n                \ngetProblems(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:56\n                \n            \n\n\n            \n                \n                    Service method to get problem list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Inteface that will be passed to the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProblemStatement\n                        \n                        \n                    \n                \n            \n            \n                \ngetProblemStatement(pid)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:87\n                \n            \n\n\n            \n                \n                    Gets statement of the problem whose pid is given\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pid\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Problem ID which we want to query\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScores\n                        \n                        \n                    \n                \n            \n            \n                \ngetScores(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:114\n                \n            \n\n\n            \n                \n                    Retrieves the score of a user in a particular problem\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about which problem and user to query for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSubmissions\n                        \n                        \n                    \n                \n            \n            \n                \ngetSubmissions(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:105\n                \n            \n\n\n            \n                \n                    Service method to get past submissions made in a particular problem\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Problem Inteface\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse, tserve: NbToastrService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:38\n                \n            \n\n\n            \n                \n                    This method handles errors that the API may raise by passing them as Nebular Toasts\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP Error Message given by the HTTP Service\n\n                                    \n                                \n                                \n                                    tserve\n                                    \n                                            NbToastrService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Toaster Service that will be used to generate the messages\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitProblem\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitProblem(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/statementsfetchservice.service.ts:96\n                \n            \n\n\n            \n                \n                    Service method to submit a submission of a particular problem\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Submission data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contestScoreURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetContestScores\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contestsURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetContests\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contestURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetContest\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            problemsURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetProblems\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            problemURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetProblem\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetScores\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submissionURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.GetSubmissions\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : API.ServerURL + API.SubmitProblem\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastrService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NbToastrService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/statementsfetchservice.service.ts:31\n                            \n                        \n\n                \n                    \n                        Nebular Service used to pass messages as toasts\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { NbToastrService, NbComponentStatus } from '@nebular/theme';\nimport { API } from '../API';\n\n/**\n * This is the main service that interacts with the API backend for competing created in DRF.\n * The API endpoints are maintained in a separate API.ts file that we are abstracting here\n * Methods for different features of the backend are implemented here.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class statementsFetchService {\n\n  problemsURL = API.ServerURL + API.GetProblems;\n  problemURL = API.ServerURL + API.GetProblem;\n  contestsURL = API.ServerURL + API.GetContests;\n  submitURL = API.ServerURL + API.SubmitProblem;\n  submissionURL = API.ServerURL + API.GetSubmissions;\n  scoreURL = API.ServerURL + API.GetScores;\n  contestScoreURL = API.ServerURL + API.GetContestScores;\n  contestURL = API.ServerURL + API.GetContest;\n  /**\n   *\n   * @param toastrService Nebular Service used to pass messages as toasts\n   * @param http HTTP service used to make HTTP requests\n   */\n  constructor(public toastrService: NbToastrService, private http: HttpClient) { }\n\n  /**\n   * This method handles errors that the API may raise by passing them as Nebular Toasts\n   * @param error HTTP Error Message given by the HTTP Service\n   * @param tserve Toaster Service that will be used to generate the messages\n   */\n  handleError(error: HttpErrorResponse, tserve: NbToastrService) {\n    let status: NbComponentStatus =\"danger\";\n    console.log(tserve)\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n      tserve.show(error.error.message, \"Error\", {status})\n    } else {\n      console.error('An error occurred:',error.error.message);\n      tserve.show(error.error.message, \"Error\", {status})\n    }\n    return throwError(\n      error.message || 'Something bad happened; please try again later.');\n  }\n\n  /**\n   * Service method to get problem list\n   * @param data Inteface that will be passed to the API\n   */\n  getProblems(data): any {\n    return this.http.post(this.problemsURL, data)\n    .pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n  /**\n   * Service method to get contests list\n   * @param data Data reperesenting current state\n   */\n  getContests(data): any {\n    return this.http.post(this.contestsURL, data)\n    .pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n  /**\n   * Service method to get more information about a contest\n   * @param data Contest Interface (holds information about which contest to query)\n   */\n  getContest(data): any {\n    return this.http.post(this.contestURL, data)\n    .pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n\n  /**\n   * Gets statement of the problem whose pid is given\n   * @param pid Problem ID which we want to query\n   */\n  getProblemStatement(pid): any {\n    return this.http.post(this.problemURL, {id: pid}).pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n  /**\n   * Service method to submit a submission of a particular problem\n   * @param data Submission data\n   */\n  submitProblem(data): any {\n    return this.http.post(this.submitURL, data).pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n  /**\n   * Service method to get past submissions made in a particular problem\n   * @param data Problem Inteface\n   */\n  getSubmissions(data): any {\n    return this.http.post(this.submissionURL, data).pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n  /**\n   * Retrieves the score of a user in a particular problem\n   * @param data Information about which problem and user to query for\n   */\n  getScores(data): any {\n    return this.http.post(this.scoreURL, data).pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n    /**\n   * Retrieves the score of a user in a particular contest\n   * @param data Information about which contest and user to query for\n   */\n  getContestScores(data): any {\n    return this.http.post(this.contestScoreURL, data).pipe(\n      catchError((error):any => {this.handleError(error, this.toastrService)}).bind(this)\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/submissionInterface.html":{"url":"interfaces/submissionInterface.html","title":"interface - submissionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  submissionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fileInterface.ts\n        \n\n            \n                Description\n            \n            \n                Interface that represents a submission made by a user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Passed\n                                \n                                \n                                        Status\n                                \n                                \n                                        Time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Passed\n                                    \n                                \n                                \n                                    \n                                        Passed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                    \n                                \n                                \n                                    \n                                        Status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Time\n                                    \n                                \n                                \n                                    \n                                        Time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StringifyOptions } from 'querystring';\n\n/**\n * Inteface that represents a file in the filelist.\n */\nexport interface fileInterface {\n\tname?: string,\n    size?: string,\n    id?: number,\n    is_file?: boolean,\n    path?: string\n}\n/**\n * Interface that represents a problem statement\n */\nexport interface statementInterface {\n  id: number,\n\tname: string,\n  tlimit: number,\n  mlimit: number\n}\n/**\n * Interface that represents a submission made by a user\n */\nexport interface submissionInterface {\n  Passed: string,\n\tStatus: string,\n  Time: string\n}\n/**\n * Interface standing for the Score of a user in a problem/contest\n */\nexport interface scoreInterface {\n  Score: number,\n  Name: string\n}\n/**\n * Tree node interface used to represent entries in the Nebular Tree Grid\n */\nexport interface TreeNode {\n  data: T;\n  children?: TreeNode[];\n  expanded?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
